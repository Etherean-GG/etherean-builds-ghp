{"version":3,"sources":["styles/theme.js","state/actions/ethereal.actions.js","pages/builds/fragments/Myths.jsx","components/Builds/SectionHeaderItem.jsx","components/CollapsibleItemSection.jsx","components/Builds/Item.jsx","components/ItemList.jsx","pages/builds/fragments/Items.jsx","components/Builds/DynamicAbility.jsx","components/Builds/SelectedStat.jsx","components/Builds/StaticAbility.jsx","components/Builds/StatPicker.jsx","pages/builds/fragments/Loadout.jsx","pages/builds/fragments/Abilities.jsx","components/CollapsiblePairingSection.jsx","components/Builds/TextListButtonPicker.jsx","pages/builds/fragments/Pairings.jsx","components/PopoverNotes.jsx","components/BuildView.jsx","pages/builds/fragments/Review.jsx","pages/builds/Create.jsx","pages/builds/View.jsx","routes/index.js","pages/NotFound.jsx","routes/RouteAndSubRoutes.js","state/reducers/ethereal.reducers.js","state/reducers/all.reducers.js","state/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","join","colors","siteBackground","contentBackground","contentBorder","scrollBar","scrollLane","sectionHeaderBackground","sectionBackground","goldPrimary","goldSecondary","goldBackground","statsFirst","statsSecond","statsThird","statsFourth","white","black","grey","red","silver","aqua","blue","gray","green","magenta","purple","yellow","API_DOMAIN","searchBuildsBySlug","slug","a","axios","get","response","data","getMythList","getItemList","FragmentBuildMyths","props","setData","useState","count","setCount","myths","setMyths","roles","setRoles","useEffect","retrieveMyths","mythList","sort","b","name","retrieveRoles","image","classes","makeStyles","root","border","color","input","useStyles","Grid","container","style","styles","content","item","xs","Typography","label","required","TextField","className","InputProps","fullWidth","variant","defaultValue","title","onChange","e","tempData","saveTitle","target","value","map","role","index","key","roleContainer","Button","onClick","saveRole","roleImage","opacity","width","height","src","process","alt","roleDescription","myth","textAlign","paddingBottom","backgroundURLs","abilities","_","levels","class","imageURL","concat","saveMyth","xmlns","viewBox","id","d","transform","href","x","y","clipPath","stroke","fill","strokeWidth","background","backgroundImageWrapper","saveBackground","strokeMiterlimit","alignContent","alignItem","marginTop","marginBottom","roleUnselected","marginLeft","marginRight","SectionHeaderItem","justify","alignItems","backgroundImage","backgroundSize","backgroundRepeat","minWidth","minHeight","CollapsibleItemSection","sectionIndex","sectionId","deleteSection","defaultExpanded","padding","section","Accordion","borderRadius","AccordionSummary","summary","expandIcon","event","stopPropagation","onFocus","direction","faDragIcon","icon","faArrowsAlt","size","placeholder","sectionHeaderItemsContainer","sectionHeaderItem","deleteSectionButton","faTrashIcon","faTrashAlt","AccordionDetails","details","children","margin","justifyContent","paddingLeft","backgroundColor","fontSize","Item","React","anchorEl","setAnchorEl","open","Boolean","handleHoverOff","onMouseEnter","currentTarget","itemCost","cost","itemName","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","popoverWrapper","column","stats","stat","effects","effect","length","detail","cursor","scrollableList","maxHeight","overflow","itemList","paddingTop","searchField","itemFilter","ItemList","items","filteredItems","setFilteredItems","filter","filteredList","i","toUpperCase","includes","filterItems","faFilter","FragmentBuildItems","setItemList","addSection","tempSections","Math","max","s","order","build","addItem","hasBoots","some","endsWith","isBoots","push","removeItem","retrieveItemList","buttonAddSection","sIndex","iIndex","selectedItem","multiline","rows","notes","saveNotes","header","DynamicAbility","ability","abilityIndex","maxLevel","selectLevel","helperText","editable","type","Array","disabled","specialAbilityLevelOne","levelSelected","levelDefault","description","SelectedStat","removeStat","isHovering","setIsHovering","onMouseLeave","display","position","zIndex","statCost","points","statName","StaticAbility","slot","StatPicker","isPrimary","remainingPoints","addStat","splitCosts","setSplitCosts","splitColors","setSplitColors","statCosts","splice","statColors","pickerRow","FragmentBuildLoadout","combatTactics","setCombatTactics","retrieveCombatTactics","selectedStats","selectDropdown","menuItem","statContainer","selectedStat","removeStatAt","Select","primaryTactic","secondaryTactic","statList","tactic","secondaryStatList","inputProps","MenuItem","disclaimer","font","tacticOption","familiarContainer","borderColor","paddingRight","FragmentBuildAbilities","level","selected","slice","dynamicAbilities","CollapsiblePairingSection","sectionHeaderPairingsContainer","selectedButton","TextListButtonPicker","activeText","textList","text","undefined","button","FragmentBuildPairings","pairings","threatLevels","synergyLevels","selectedPairingType","setSelectedPairingType","threats","pairingData","setPairingData","synergies","togglePairing","savePairingLevel","activePairing","inactivePairing","savePairingMyth","pairingMessage","PopoverNotes","faFileAlt","whiteSpace","BuildView","editAction","saveAction","createdOn","Date","rootContainer","Avatar","getMonth","getDate","getFullYear","buttons","edit","publish","headerTitle","sectionWrapper","loadout","pairing","pairingLevel","FragmentBuildReview","previewBuildHeader","saveButton","CreateBuild","document","steps","review","step","setStep","errors","setErrors","setMyth","setItems","setLoadout","setAbilities","setPairings","moveStep","listErrors","tempErrors","field","message","abilityLevels","threat","synergy","createContent","buildContent","stepNumberCurrent","stepNumberBehind","data-name","stepNumberAhead","error","buttonPreviousStep","buttonNextStep","getStep","ViewBuild","buildSlug","useParams","setBuild","retrieveBuild","routes","path","exact","component","RouteAndSubRoutes","route","render","etherealReducer","createReducer","isFetching","state","action","familiars","payload","allReducers","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","middleware","applyMiddleware","thunk","logger","store","createStore","persistor","persistStore","library","add","wrapper","maxWidth","AppBase","outline","StrictMode","loading","window","location","hostname","match","ReactDOM","ThemeProvider","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.175aa7fe.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: ['\"Open Sans\"', 'sans-serif'].join(',')\r\n     }\r\n})\r\n\r\nexport const colors = {\r\n    // site theme colors\r\n    theme: {\r\n        siteBackground: \"#090909\",\r\n\r\n        contentBackground: \"#121212\",\r\n        contentBorder: \"#707070\",\r\n        \r\n        scrollBar: '#FFFFFF3D',\r\n        scrollLane: '#1E1E1E',\r\n\r\n        sectionHeaderBackground: \"#272727\",\r\n        sectionBackground: \"#2C2C2C\",\r\n\r\n        goldPrimary: \"#C39445\",\r\n        goldSecondary: \"#655233\",\r\n        goldBackground: \"#CAA65B\",\r\n\r\n        statsFirst: \"#FFFFFF\",\r\n        statsSecond: \"#208C62\",\r\n        statsThird: \"#2090E5\",\r\n        statsFourth: \"#654FA7\",\r\n\r\n        white: \"#FFFFFF\",\r\n        black: \"#1E1E1E\",\r\n        grey: \"#797979\",\r\n        red: \"#A52A2A\",\r\n        silver: \"#C0C0C0\"\r\n    },\r\n\r\n    // general colors\r\n    aqua: \"#00FFF\",\r\n\r\n    black: \"#000000\",\r\n    \r\n    blue: \"#000FF\",\r\n    \r\n    gray: \"#808080\",\r\n\r\n    green: \"#00800\",\r\n    \r\n    magenta: \"#FF00FF\",\r\n    \r\n    purple: \"#800080\",\r\n    \r\n    red: \"#FF0000\",\r\n    \r\n    white: \"#FFFFFF\",\r\n    \r\n    yellow: \"#FFFF00\",\r\n}\r\n\r\nexport default colors","import axios from 'axios'\r\n\r\n// Production\r\nconst API_DOMAIN = 'https://ethereanggapi.azurewebsites.net/api'\r\n//const API_DOMAIN = 'https://localhost:44390/api'\r\n\r\nexport const GET_FAMILIARS = \"GET/familiars\"\r\nexport const GET_ITEMS = \"GET/items\"\r\nexport const GET_MYTHS = \"GET/myths\"\r\n\r\nexport const saveBuild = async (build) => {\r\n    try {\r\n        const response = await axios.post(`${API_DOMAIN}/builds`, build)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const searchBuildsBySlug = async (slug) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/builds?slug=${slug}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getBuildList = async (filter) => {\r\n    try {\r\n        // do something with filter...\r\n        let filterQuery = \"&\"\r\n\r\n        const response = await axios.get(`${API_DOMAIN}/builds?${filterQuery}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMythList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMyth = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getItemList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/items`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getCombatTacticsList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/combat-tactics`)\r\n        return response.data\r\n    } catch(e) { }\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getMythList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildMyths = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [myths, setMyths] = useState([])\r\n  const [roles, setRoles] = useState([])\r\n\r\n  useEffect(() => {\r\n    const retrieveMyths = async () => {\r\n      const mythList = await getMythList()\r\n      setMyths(mythList.sort((a, b) => (a.name > b.name) ? 1 : -1))\r\n    }\r\n\r\n    const retrieveRoles = async () => {\r\n      setRoles([{\r\n        name: 'Ice',\r\n        image: '/images/roles/ice.png'\r\n      },{\r\n        name: 'Jungle',\r\n        image: '/images/roles/jungle.png'\r\n      },{\r\n        name: 'Void',\r\n        image: '/images/roles/void.png'\r\n      },{\r\n        name: 'Fire',\r\n        image: '/images/roles/fire.png'\r\n      },{\r\n        name: 'Support',\r\n        image: '/images/roles/support.png'\r\n      }])\r\n    }\r\n\r\n    retrieveMyths()\r\n    retrieveRoles()\r\n  }, [])  \r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  const saveTitle = (title) => {\r\n    let tempData = data\r\n    tempData.title = title\r\n    \r\n    setData(tempData)\r\n  }\r\n\r\n  const saveMyth = (myth) => {\r\n    let tempData = data\r\n    tempData.data = myth\r\n    tempData.data.image = myth.backgroundURLs[0]\r\n\r\n    tempData.data.abilities.map((_, index) => {\r\n      tempData.data.abilities[index].levels = []\r\n    })\r\n    tempData.data.abilities = [{name: tempData.data.class.className, imageURL: tempData.data.class.imageURL, levels: []}].concat(tempData.data.abilities)\r\n\r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveRole = (role) => {\r\n    let tempData = data\r\n    tempData.role = role\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveBackground = (background) => {\r\n    let tempData = data\r\n    tempData.data.background = background\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={styles.content}>\r\n          <Grid item xs={12}>\r\n            <Typography \r\n              style={styles.label}\r\n              required\r\n            >1. Name your Build</Typography>\r\n            <TextField \r\n              name=\"title\"\r\n              className={ classes.root }\r\n              InputProps={{ className: classes.input }}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              defaultValue={data.title}\r\n              onChange={(e) => { \r\n                  saveTitle(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Typography style={styles.label} xs={12}>2. Select Role</Typography>\r\n            <Grid container>\r\n            { /* TODO: Convert to loop from external source / api */ }\r\n              { roles.map((role, index) =>\r\n                <Grid item xs key={`role-${role.name}`} >\r\n                  <Grid container style={styles.roleContainer} >\r\n                    <Grid item xs={12}>\r\n                      <Button onClick={() => saveRole(role)}>\r\n                        <img style={{ \r\n                            ...styles.roleImage,\r\n                            opacity: data.role?.name === role.name ? 1 : 0.2 \r\n                          }}\r\n                          width={60}\r\n                          height={60}\r\n                          src={`${process.env.PUBLIC_URL}/${role.image}`} \r\n                          alt={`${role.name} role`} />\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography style={styles.roleDescription}>\r\n                        {role.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n                <Grid item xs={6} />\r\n            </Grid>\r\n          </Grid>  \r\n\r\n          <Grid item xs={12}>\r\n            <Typography  style={styles.label} xs={12}>3. Select Myth</Typography>\r\n            <Grid container>\r\n              { myths.map((myth, index) =>\r\n                <Grid item xs\r\n                  key={`myth-${index}`}\r\n                  style={{ textAlign: 'center', paddingBottom: 15 }}>\r\n                  <Button onClick={() => saveMyth(myth)}\r\n                    style={{opacity: data?.data?.name === myth.name ? 1 : 0.5 }}>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 62 62\">\r\n                        <defs>\r\n                          <clipPath id=\"mythClipPath\">\r\n                            <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" />\r\n                          </clipPath>\r\n                        </defs>\r\n                        <image href={myth.backgroundURLs[0]} width={120} height={61} x={-27} y={0} clipPath=\"url(#mythClipPath)\" />\r\n                        <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" stroke={colors.theme.goldPrimary} fill=\"none\" strokeWidth=\"1\" />\r\n                      </svg>\r\n                  </Button>\r\n                  <Typography>\r\n                    {myth.name}\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>  \r\n            <Typography style={styles.label}>4. Select Background</Typography>\r\n            <Grid container>\r\n            { data.data && data.data.backgroundURLs.map((background, index) =>\r\n              <Grid item style={styles.backgroundImageWrapper}\r\n                key={`background-${background}`}>\r\n                <Button onClick={() => saveBackground(background) }\r\n                  style={{opacity: data.data.background === background ? 1 : 0.5}}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"275\" height=\"125\" viewBox=\"0 0 221.999 104\">\r\n                      <clipPath id=\"backgroundClipPath\">\r\n                      <path d=\"M517.123,345.19l-14.742,17.854V447.19H707.638l14.742-17.854V345.19Z\" transform=\"translate(-501.381 -344.19)\"\r\n                        fill=\"none\" stroke={colors.theme.goldPrimary} strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                      </clipPath>\r\n                      <image href={background} width={275} height={125} x={-27} y={0} clipPath=\"url(#backgroundClipPath)\" />\r\n                      <path d=\"M517.123,345.19l-14.742,17.854V447.19H707.638l14.742-17.854V345.19Z\" transform=\"translate(-501.381 -344.19)\"\r\n                        fill=\"none\" stroke={colors.theme.goldPrimary} strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                    </svg>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            </Grid>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildMyths;\r\n\r\nconst styles = {\r\n  content: {\r\n    alignContent: 'center',\r\n    alignItem: 'center'\r\n  },\r\n\r\n  label: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  roleContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  roleImage: {\r\n    \r\n  },\r\n  roleDescription: {\r\n    color: colors.theme.white\r\n  },\r\n  roleUnselected: {\r\n    opacity: 90\r\n  },\r\n\r\n  backgroundImageWrapper: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nexport const SectionHeaderItem = (props) => {\r\n    const {\r\n        image\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${image})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 40,\r\n                    minHeight: 40,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SectionHeaderItem","import React from 'react'\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport SectionHeaderItem from './Builds/SectionHeaderItem'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faArrowsAlt,\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport colors from '../styles/theme'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst CollapsibleItemSection = (props) => {\r\n    const {\r\n      title,\r\n      data,\r\n      sectionIndex,\r\n      sectionId,\r\n      saveTitle,\r\n      deleteSection,\r\n      defaultExpanded\r\n    } = props\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n          padding: 12\r\n        }\r\n      },\r\n      \r\n      input: {\r\n        color: colors.theme.white\r\n      },\r\n    })\r\n  \r\n    const classes = useStyles()\r\n\r\n    return (\r\n      <Grid container\r\n        style={styles.section}\r\n        alignContent='center'\r\n        alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Accordion style={{borderRadius: 5}} \r\n            defaultExpanded={defaultExpanded}>\r\n            <AccordionSummary\r\n              style={styles.summary}\r\n              expandIcon={<ExpandMoreIcon style={{ fill: colors.theme.white }} />} >\r\n              <Grid container\r\n                onClick={(event) => event.stopPropagation()}\r\n                onFocus={(event) => event.stopPropagation()} \r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                <Grid item xs={1}\r\n                  style={{marginRight: -10}}>\r\n                  <FontAwesomeIcon\r\n                    styles={styles.faDragIcon}\r\n                    icon={faArrowsAlt} color=\"white\" size=\"lg\" />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <TextField \r\n                    placeholder=\"Title\"\r\n                    className={ classes.root }\r\n                    InputProps={{\r\n                      className: classes.input\r\n                    }}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    defaultValue={title}\r\n                    onChange={(e) => { \r\n                      saveTitle(sectionIndex, e.target.value)\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Grid container style={styles.sectionHeaderItemsContainer} >\r\n                  { data && data.map((item, index) => \r\n                    <Grid item style={styles.sectionHeaderItem}>\r\n                      <SectionHeaderItem key={`itemheader--${index}`} image={item.imageURL} />\r\n                    </Grid>\r\n                  )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={1}\r\n                  direction=\"row-reverse\">\r\n                    <Button \r\n                        style={styles.deleteSectionButton}\r\n                        onClick={() => deleteSection(sectionId)}>\r\n                      <Grid container\r\n                        direction=\"column\"\r\n                        style={styles.faTrashIcon}>\r\n                        <Grid item>\r\n                          <FontAwesomeIcon\r\n                          styles={styles.faTrashIcon}\r\n                          icon={faTrashAlt} color=\"white\" size=\"lg\" />\r\n                        </Grid>\r\n                        <Grid item\r\n                          style={styles.label}>\r\n                          Delete\r\n                        </Grid>\r\n                      </Grid>\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={styles.details}>\r\n              {props.children}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\nexport default CollapsibleItemSection;\r\n\r\n\r\nconst styles = {\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  deleteSectionButton: {\r\n    margin: 0,\r\n    padding: 0,\r\n    color: colors.theme.white\r\n  },\r\n  sectionHeaderItemsContainer: {\r\n    justifyContent: 'flex-start'\r\n  },\r\n  sectionHeaderItem: {\r\n    paddingLeft: 10\r\n  },\r\n  summary: {\r\n    backgroundColor: colors.theme.sectionHeaderBackground,\r\n\r\n    height: 65\r\n  },\r\n  details: {\r\n    backgroundColor: colors.theme.sectionBackground,\r\n  },\r\n  label: {\r\n    color: colors.theme.white,\r\n    fontSize: \"0.8em\"\r\n  },\r\n  faDragIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  },\r\n  faTrashIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Popover,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const Item = (props) => {\r\n    const {\r\n        item,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    const optionsCursorTrueWithMargin = {\r\n        followCursor:true,\r\n        shiftX:-20,\r\n        shiftY:-20\r\n    }\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const open = Boolean(anchorEl)\r\n    const handleHoverOn = (event) => { setAnchorEl(event.currentTarget) }\r\n    const handleHoverOff = () => { setAnchorEl(null) }\r\n\r\n    return (\r\n        <>\r\n            <Grid container\r\n                onMouseEnter={handleHoverOn}\r\n                //onMouseLeave={handleHoverOff}\r\n                onClick={() => setData(section, item)}\r\n                direction=\"column\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                style={styles.item}>\r\n                <Grid item xs={2}\r\n                    style={{\r\n                        backgroundImage: `url(${item.imageURL})`,\r\n                        backgroundSize: \"100%\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                        minWidth: 75,\r\n                        minHeight: 75,\r\n                        height: \"100%\",\r\n                        width: \"100%\",\r\n                    }}>\r\n                </Grid>\r\n                <Grid container style={{ textAlign: 'center' }}>\r\n                    <Grid item xs />\r\n                    <Grid item xs={2}>\r\n                        <img src={`${process.env.PUBLIC_URL}/images/currency_gold.png`} width={10} height={10} alt=\"currency - gold\" />\r\n                    </Grid>\r\n                    <Grid item xs={5} style={styles.itemCost}>\r\n                        <Typography>\r\n                            {item.cost}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs />\r\n                </Grid>\r\n                <Grid item xs\r\n                    style={styles.itemName}>\r\n                    {item.name}\r\n                </Grid>\r\n             </Grid>\r\n             <Popover\r\n                //id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClick={handleHoverOff}\r\n                onClose={handleHoverOff}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <Grid container style={styles.popoverWrapper}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs style={{paddingLeft: 10}}>\r\n                            <img width={75} height={75} src={item.imageURL} />\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Grid column>\r\n                                <Grid item xs={12}>\r\n                                    <h4 style={{padding: 1, margin: 1}}>{item.name}</h4>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    Total Price: {item.cost}\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>&nbsp;</Grid>\r\n                                \r\n                                { item.stats.map((stat, index) => \r\n                                    <Grid item xs={12}>\r\n                                        {stat}\r\n                                    </Grid>\r\n                                )}\r\n                                <Grid item xs={12}>&nbsp;</Grid>\r\n                                { item.effects && item.effects.map((effect, index) => \r\n                                    <>\r\n                                        <Grid item xs={12} key={`item-${item.id}-effect-${index}`}>\r\n                                            {effect.title.length > 0 && `${effect.title}: `}{effect.detail}\r\n                                        </Grid>\r\n                                        <Grid item xs={12}>&nbsp;</Grid>\r\n                                    </>\r\n                                )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n           </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\nconst styles = {\r\n    item: {\r\n        cursor: \"pointer\"\r\n    },\r\n    itemName: {\r\n        color: colors.theme.white,\r\n        textAlign: 'center',\r\n        fontSize: 12\r\n    },\r\n    itemCost: {\r\n        background: `1px solid ${colors.theme.goldBackground}`,\r\n\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n\r\n    popoverWrapper: {\r\n        padding: 10,\r\n        width: '40vw',\r\n        border: `2px solid ${colors.theme.goldBackground}`,\r\n        borderRadius: '5px 5px',\r\n        color: colors.theme.white,\r\n        backgroundColor: colors.theme.siteBackground\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Item from '../components/Builds/Item'\r\n\r\nimport {\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faFilter\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst ItemList = (props) => {\r\n    const {\r\n        items,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    const [filteredItems, setFilteredItems] = useState(items)\r\n\r\n    useEffect(() => {\r\n        setFilteredItems(props.items)\r\n    }, [props.items])\r\n\r\n    const toggleFilter = () => {\r\n        \r\n    }\r\n\r\n    const filterItems = (filter) => {\r\n        if(filter && filter.length > 0) {\r\n            const filteredList = items.filter(i => i.name.toUpperCase().includes(filter.toUpperCase()))\r\n            setFilteredItems(filteredList)\r\n        } else {\r\n            setFilteredItems(items)\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-input\": {\r\n            padding: 12\r\n          }\r\n        },\r\n        \r\n        input: {\r\n          color: colors.theme.white\r\n        },\r\n      })\r\n    \r\n      const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container\r\n            alignContent='center'\r\n            alignItems='center'\r\n            style={styles.section}>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={6}>\r\n                <Grid container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    alignContent=\"center\">\r\n                    <Grid item xs={10}>\r\n                        <TextField \r\n                            style={styles.searchField}\r\n                            className={ classes.root }\r\n                            InputProps={{ className: classes.input }}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Search Items\"\r\n                            onChange={(e) => filterItems(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={1} />\r\n                    <Grid item xs={1}\r\n                        style={styles.itemFilter}>\r\n                        <Grid container\r\n                            justify=\"center\"\r\n                            alignContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"column\">\r\n                            <Grid item>\r\n                                <FontAwesomeIcon icon={faFilter} color=\"white\" \r\n                                    onClick={toggleFilter} />\r\n                            </Grid>\r\n                            <Grid item\r\n                                style={styles.label}>\r\n                                Filter\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container \r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"flex-begin\"\r\n                style={styles.scrollableList}>\r\n                { filteredItems && filteredItems.map((item, index) => \r\n                    <Grid item\r\n                        style={styles.item}>\r\n                            <Item key={`item-${index}`} section={section} item={item} setData={setData} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    section: {\r\n        color: colors.theme.white\r\n    },\r\n    label: {\r\n        color: colors.theme.white,\r\n        fontSize: \"0.8em\"\r\n    },\r\n    scrollableList: {\r\n        maxHeight: 400,\r\n        overflow: \"auto\",\r\n\r\n        marginTop: 20,\r\n        marginRight: 15\r\n    },\r\n    itemList: {\r\n        margin: 15,\r\n        width: \"100%\",\r\n\r\n        backgroundColor: colors.theme.sectionBackground\r\n    },\r\n    item: {\r\n        backgroundColor: colors.theme.black,\r\n        padding: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        margin: 10,\r\n        width: 100,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    searchField: {\r\n        marginTop: 10\r\n    },\r\n\r\n    itemFilter: {\r\n        opacity: 0.2,\r\n        cursor: \"not-allowed\"\r\n    }\r\n} \r\n\r\nexport default ItemList","import React, { useEffect, useState } from 'react';\r\n\r\nimport CollapsibleItemSection from '../../../components/CollapsibleItemSection'\r\nimport ItemList from '../../../components/ItemList'\r\nimport Item from '../../../components/Builds/Item'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getItemList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildItems = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [itemList, setItemList] = useState([])\r\n\r\n  const addSection = () => {\r\n    let tempSections = data\r\n    const id = Math.max(...tempSections.map(s => s.id), 0);\r\n    \r\n    tempSections = tempSections.concat({ id: id+1, order: id+1, build: []})\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  \r\n  const deleteSection = (sectionId) => {\r\n    let tempSections = data\r\n    tempSections = data.filter(s => s.id !== sectionId)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const addItem = (index, item) => {\r\n    let tempSections = data\r\n\r\n    let hasBoots = \r\n      tempSections[index].build.some(b => b.name.endsWith('Boots')) || \r\n      tempSections[index].build.some(b => b.name.endsWith('Shoes'));\r\n\r\n    const isBoots = \r\n      item.name.endsWith('Boots') ||\r\n      item.name.endsWith('Shoes');\r\n      \r\n    if(isBoots && hasBoots) {\r\n      return;\r\n    } else if (isBoots && !hasBoots) {\r\n      hasBoots = true;\r\n    }\r\n\r\n    if(tempSections[index].build.length >= (hasBoots ? 7 : 6)) { return }\r\n    if(tempSections[index].build.filter(i => i.name === item.name).length > 0) { return }\r\n\r\n    tempSections[index].build.push(item)\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const removeItem = (index, item) => {\r\n    let tempSections = data\r\n    tempSections[index].build = tempSections[index].build.filter(i => i.name !== item.name)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveTitle = (index, title) => {\r\n    let tempSections = data\r\n\r\n    tempSections[index].title = title\r\n\r\n    setData(tempSections)\r\n  }\r\n\r\n  const saveNotes = (index, notes) => {\r\n    let tempSections = data\r\n    tempSections[index].notes = notes\r\n\r\n    setData(tempSections)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const retrieveItemList = async () => {\r\n      setItemList(await getItemList())\r\n    }\r\n\r\n    retrieveItemList()\r\n  }, [])\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n      { data.map((section, sIndex) => \r\n        <CollapsibleItemSection \r\n          key={`sections-items-${section.id}`}\r\n          style={styles.section}\r\n          sectionIndex={sIndex}\r\n          sectionId={section.id}\r\n          title={section.title}\r\n          defaultExpanded={data.length === 1}\r\n          data={section.build}\r\n          saveTitle={saveTitle}\r\n          deleteSection={deleteSection}>\r\n            <Grid container>\r\n              { section.build.map((item, iIndex) => \r\n                <Grid item xs={1} style={styles.selectedItem}>\r\n                  <Item\r\n                    key={`itemsection-${sIndex}-item-${iIndex}`}\r\n                    section={sIndex} \r\n                    item={item} \r\n                    setData={removeItem} />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs />\r\n              <Grid item xs={12}>\r\n                <ItemList key={`item-list-${sIndex}`} items={itemList} section={sIndex} build={section.build} setData={addItem} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField multiline rows={6} \r\n                  variant=\"outlined\"\r\n                  style={styles.notes} \r\n                  className={ classes.root }\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                  placeholder=\"Notes...\"\r\n                  defaultValue={section.notes}\r\n                  onChange={(e) => { \r\n                    saveNotes(sIndex, e.target.value)\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n        </CollapsibleItemSection>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildItems;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  buttonAddSection: {\r\n    backgroundColor: colors.theme.goldPrimary,\r\n    fontSize: \"0.7em\",\r\n    marginTop: 10,\r\n    marginBottom: 15\r\n  },\r\n\r\n  selectedItem: {\r\n    marginRight: 20,\r\n    color: colors.theme.white\r\n  },\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Popover,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const DynamicAbility = (props) => {\r\n    const {\r\n        ability,\r\n        abilityIndex,\r\n        maxLevel,\r\n        selectLevel,\r\n        helperText = false,\r\n        editable = false\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const open = Boolean(anchorEl)\r\n    const handleHoverOn = (event) => { setAnchorEl(event.currentTarget) }\r\n    const handleHoverOff = () => { setAnchorEl(null) }\r\n\r\n    return (\r\n        <>\r\n        <Grid container>\r\n            <Grid item xs={1}>\r\n                <img onMouseEnter={handleHoverOn} \r\n                    style={styles.image}\r\n                    src={ability.imageURL}\r\n                    alt={`ability ${ability.name}`} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Typography style={styles.name}>\r\n                            {ability.type} - {ability.name} \r\n                            { helperText ? ` (max: ${maxLevel})` : '' }\r\n                            { helperText\r\n                                ? ability.type === 'Special Ability' ? ' Unlocked at 1, 9, 17'\r\n                                : ability.type === 'Ultimate' ? ' Unlocked at 5, 13, 20'\r\n                                : ''\r\n                                : ''\r\n                            }\r\n                        </Typography>\r\n                    </Grid>\r\n                    { ability && [...Array(maxAbilityLevel)].map((_, index) =>\r\n                        <Button disabled = {!editable && ability.type === 'Special Ability' && index === 0}\r\n                            style={ (ability.type === \"Special Ability\" && index === 0) \r\n                                ? styles.specialAbilityLevelOne  \r\n                                : ability.levels.includes(index+1) \r\n                                    ? styles.levelSelected \r\n                                    : styles.levelDefault}\r\n                            onClick={() => \r\n                                selectLevel(abilityIndex, index+1, !ability.levels.includes(index+1))\r\n                            }\r\n                            key={`ability-${ability.name}-${index}-${ability.levels.includes(index+1)}`}>\r\n                            {index+1}\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        <Popover\r\n                //id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClick={handleHoverOff}\r\n                onClose={handleHoverOff}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <Grid container style={styles.popoverWrapper}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs style={{paddingLeft: 10}}>\r\n                            <img width={75} height={75} src={ability.imageURL} />\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Grid column>\r\n                            <Grid column>\r\n                                <Grid item xs={12}>\r\n                                    <h4 style={{padding: 1, margin: 1}}>{ability.name}</h4>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>&nbsp;</Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    {ability.description}\r\n                                </Grid>\r\n                            </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n           </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DynamicAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    specialAbilityLevelOne: {\r\n        backgroundColor: colors.theme.silver,\r\n        color: colors.theme.black,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n    levelDefault: {\r\n        backgroundColor: colors.theme.black,\r\n        color: colors.theme.white,\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n    levelSelected: {\r\n        backgroundColor: colors.theme.goldPrimary,\r\n        color: colors.theme.black,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n\r\n    popoverWrapper: {\r\n        padding: 10,\r\n        width: '40vw',\r\n        border: `2px solid ${colors.theme.goldBackground}`,\r\n        borderRadius: '5px 5px',\r\n        color: colors.theme.white,\r\n        backgroundColor: colors.theme.siteBackground\r\n    }\r\n}","import React, { useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const SelectedStat = (props) => {\r\n    const {\r\n        stat,\r\n        removeStat\r\n    } = props\r\n\r\n    const [isHovering, setIsHovering] = useState(false)\r\n\r\n    return (\r\n        <Grid container style={styles.container}\r\n            onMouseEnter={() => {if(removeStat) setIsHovering(true)}}\r\n            onMouseLeave={() => {if(removeStat) setIsHovering(false)}}>\r\n            <Button style={{...styles.removeStat, cursor: removeStat ? 'pointer' : 'default'}}\r\n                onClick={removeStat}>\r\n                <div style={{\r\n                        display: isHovering ? 'block' : 'none', \r\n                        position: 'absolute', width: '100%', height: '100%', zIndex: 999, backgroundColor: `${colors.theme.red}33`\r\n                    }}>\r\n                    <FontAwesomeIcon icon={faTrashAlt} color=\"white\" size=\"lg\" style={{marginTop: 15}} />\r\n                </div>\r\n                <Grid item xs={2} style={{\r\n                        opacity: isHovering ? 0.2 : 1,\r\n                        ...styles.statCost, \r\n                        backgroundColor: stat.color,\r\n                        color: stat.cost === 4 ? colors.theme.white : colors.theme.black\r\n                    }}>\r\n                    <Typography>\r\n                        {stat.points}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs style={{ opacity: isHovering ? 0.2 : 1 }}>\r\n                    <Typography style={styles.statName}>\r\n                        {stat.name}\r\n                    </Typography>\r\n                </Grid>\r\n            </Button>\r\n        </Grid>\r\n    )\r\n} \r\n\r\nexport default SelectedStat\r\n\r\nconst styles = {\r\n    container: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n\r\n    statName: {\r\n        color: colors.theme.goldPrimary,\r\n        paddingLeft: 10,\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    statCost: {\r\n        textAlign: 'center',\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        borderRadius: 7,\r\n        width: 15,\r\n        margin: 2,\r\n        marginLeft: 10\r\n    },\r\n\r\n    removeStat: {\r\n        width: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        minHeight: 50\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid, \r\n    Popover,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const StaticAbility = (props) => {\r\n    const {\r\n        ability\r\n    } = props\r\n    \r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const open = Boolean(anchorEl)\r\n    const handleHoverOn = (event) => { setAnchorEl(event.currentTarget) }\r\n    const handleHoverOff = () => { setAnchorEl(null) }\r\n\r\n    return (\r\n        <>\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Grid item xs={2}>\r\n                        <img onMouseEnter={handleHoverOn} \r\n                            style={styles.image}\r\n                            src={ability.imageURL} \r\n                            alt={`ability ${ability.name}`} />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.name}>\r\n                                    {ability.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.slot}>\r\n                                    {ability.slot}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        <Popover\r\n                //id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClick={handleHoverOff}\r\n                onClose={handleHoverOff}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <Grid container style={styles.popoverWrapper}>\r\n                    <Grid container direction=\"row\">\r\n                        <Grid item xs style={{paddingLeft: 10}}>\r\n                            <img width={75} height={75} src={ability.imageURL} />\r\n                        </Grid>\r\n                        <Grid item xs={10}>\r\n                            <Grid column>\r\n                                <Grid item xs={12}>\r\n                                    <h4 style={{padding: 1, margin: 1}}>{ability.name}</h4>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={12}>&nbsp;</Grid>\r\n\r\n                                <Grid item xs={12}>\r\n                                    {ability.description}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n           </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaticAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    name: {\r\n        fontSize: 15,\r\n        color: colors.theme.white\r\n    },\r\n    slot: {\r\n        fontSize: 10,\r\n        color: colors.theme.white\r\n    },\r\n\r\n    popoverWrapper: {\r\n        padding: 10,\r\n        width: '40vw',\r\n        border: `2px solid ${colors.theme.goldBackground}`,\r\n        borderRadius: '5px 5px',\r\n        color: colors.theme.white,\r\n        backgroundColor: colors.theme.siteBackground\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const StatPicker = (props) => {\r\n    const {\r\n        name,\r\n        isPrimary,\r\n        remainingPoints,\r\n        addStat\r\n    } = props\r\n\r\n    const [splitCosts, setSplitCosts] = useState([])\r\n    const [splitColors, setSplitColors] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(isPrimary) {\r\n            setSplitCosts(statCosts.splice(0, 3))\r\n            setSplitColors(statColors.splice(0, 3))\r\n        } else {\r\n            setSplitCosts(statCosts.splice(1, 3))\r\n            setSplitColors(statColors.splice(1, 3))\r\n        }\r\n    }, [])\r\n\r\n    const statPoints = [1, 4, 10]\r\n    const statCosts = [1, 2, 3, 4]\r\n    const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n\r\n    return (\r\n        <>\r\n        { name &&\r\n        <Grid container style={styles.pickerRow}>\r\n            <Grid item xs={6}>\r\n                <Typography style={styles.label}>\r\n                    {name}\r\n                </Typography>\r\n            </Grid>\r\n            { statPoints.map((points, index) => \r\n            <Grid item xs={2} style={{border: `1px solid ${splitColors[index]}`, opacity: remainingPoints >= splitCosts[index] ? 1 : 0.3 }}>\r\n                <Button\r\n                    disabled={remainingPoints - splitCosts[index] < 0}\r\n                    onClick={() => addStat({\r\n                        name: name, \r\n                        points: points, \r\n                        cost: splitCosts[index],\r\n                        color: splitColors[index],\r\n                        isPrimary: isPrimary\r\n                    })}>\r\n                    <Typography\r\n                        style={{color: splitColors[index]}}>\r\n                        + {points}\r\n                    </Typography>\r\n                </Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatPicker\r\n\r\nconst styles = {\r\n    label: {\r\n      color: colors.theme.white\r\n    },\r\n    pickerRow: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        alignItems: 'center',\r\n        \r\n        paddingLeft: 15,\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    }\r\n  }","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  SelectedStat,\r\n  StatPicker\r\n} from '../../../components/Builds'\r\n\r\nconst FragmentBuildLoadout = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n  \r\n  const [combatTactics, setCombatTactics] = useState([])\r\n  const [count, setCount] = useState(0)\r\n\r\n  const statCosts = [1, 2, 3, 4]\r\n  const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n  \r\n  useEffect(() => {\r\n    const retrieveCombatTactics = async (id) => {\r\n      //setCombatTactics(await getCombatTacticsList())\r\n      setCombatTactics([{\r\n          name: 'Assault',\r\n          stats: ['Attack Speed', 'Life Steal', 'Penetration']\r\n        },{\r\n          name: 'Demolition',\r\n          stats: ['Crtical Chance', 'Critical Damage', 'Mythical Damage']\r\n        },{\r\n          name: 'Protect',\r\n          stats: ['Armor', 'Defensive Power', 'Magic Resist']\r\n        },{\r\n          name: 'Reinforcement',\r\n          stats: ['Health per 5', 'Mana per 5', 'Persistence']\r\n        }\r\n      ])\r\n    }\r\n\r\n    retrieveCombatTactics()\r\n  }, [])\r\n\r\n  const handleSelectedTactic = (event) => {\r\n    let tempData = data\r\n    tempData.remainingPoints = 8\r\n    tempData.selectedStats = []\r\n    tempData.primaryTactic = event.target.value\r\n    tempData.secondaryTactic = 0\r\n\r\n    let statList = []\r\n    combatTactics.map((tactic, index) => {\r\n      if(index !== event.target.value) {\r\n        tactic.stats.map((stat) => {\r\n          statList.push({\r\n            tactic: tactic.name,\r\n            stat: stat\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    tempData.secondaryStatList = statList\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const handleSelectedSecondary = (event) => {\r\n    let tempData = data\r\n    tempData.selectedStats = tempData.selectedStats.filter(stat => stat.isPrimary)\r\n    tempData.secondaryTactic = event.target.value\r\n    \r\n    tempData.remainingPoints = 8\r\n    tempData.selectedStats.map((stat) => {\r\n      tempData.remainingPoints = tempData.remainingPoints - stat.cost\r\n    })\r\n    \r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const addStat = (stat) => {\r\n    let tempData = data\r\n    tempData.remainingPoints = tempData.remainingPoints - stat.cost\r\n\r\n    tempData.selectedStats.push({\r\n      ...stat\r\n    })\r\n    \r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const removeStatAt = (index) => {\r\n    let tempData = data\r\n\r\n    const stat = tempData.selectedStats[index]\r\n    tempData.selectedStats.splice(index, 1)\r\n    tempData.remainingPoints = tempData.remainingPoints + stat.cost\r\n    \r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    selectDropdown: {\r\n      border: `1px solid ${colors.theme.white}`,\r\n      color: colors.theme.white,\r\n      width: '100%',\r\n\r\n      \".MuiSvgIcon-root .MuiSelect-icon\": {\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n\r\n    menuItem: {\r\n     marginLeft: 10 \r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Grid container style={{alignItems: 'center', alignContent: 'center' }}>\r\n            <Grid item xs={7} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>Selected Combat Stats</Typography>\r\n            </Grid>\r\n            <Typography style={styles.label}>Stat Costs:</Typography>\r\n            { statCosts.map((cost, index) => \r\n                  <Typography style={{\r\n                      ...styles.statCosts,\r\n                      backgroundColor: statColors[index], \r\n                      color: index < 3 ? colors.theme.black : colors.theme.white\r\n                    }}>{cost}</Typography>\r\n            )}\r\n            <Grid item xs={2}>\r\n              <Typography style={{...styles.label, textAlign: \"right\"}}>Remaining Points:</Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography style={styles.remainingPoints}>{data.remainingPoints}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container style={styles.statContainer}>\r\n              { data.selectedStats.map((stat, index) => \r\n                <Grid item xs={3} style={styles.selectedStat}>\r\n                  <SelectedStat stat={stat} removeStat={() => removeStatAt(index)} />\r\n                </Grid>\r\n              )}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Primary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    value={data.primaryTactic}\r\n                    onChange={handleSelectedTactic}\r\n                    className={ classes.selectDropdown } \r\n                    inputProps={{ className:classes.menuItem }}>\r\n                      { !(data.primaryTactic >= 0) &&\r\n                      <MenuItem \r\n                        className={classes.menuItem}\r\n                        value={-1}>Pick Primary Tactic</MenuItem>\r\n                      }\r\n                    { combatTactics && combatTactics.map((tactic, index) =>\r\n                      <MenuItem className={classes.menuItem}\r\n                        value={index}>{tactic.name}</MenuItem>\r\n                    )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    { combatTactics[data.primaryTactic] && combatTactics[data.primaryTactic].stats.map((stat, index) => \r\n                      <Grid item xs={12}>\r\n                        <StatPicker isPrimary={true} \r\n                          remainingPoints={data.remainingPoints}\r\n                          name={stat} \r\n                          addStat={addStat} />\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Secondary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    disabled={data.primaryTactic === -1}\r\n                    width={1}\r\n                    value={data.secondaryTactic}\r\n                    onChange={handleSelectedSecondary}\r\n                    className={ classes.selectDropdown }\r\n                    inputProps={{ className:classes.menuItem }}\r\n                    >\r\n                      { data.primaryTactic === -1 &&\r\n                      <MenuItem />\r\n                      }\r\n                      { data.secondaryStatList && data.secondaryStatList.map((stat, index) =>\r\n                      <MenuItem value={index}>{`[${stat.tactic}] ${stat.stat}`}</MenuItem>\r\n                      )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      { data.secondaryTactic >= 0 &&\r\n                      <StatPicker isPrimary={false} \r\n                        name={data.secondaryStatList[data.secondaryTactic].stat} \r\n                        remainingPoints={data.remainingPoints}\r\n                        addStat={addStat} />\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} style={styles.disclaimer}>\r\n              <Typography>\r\n                The stats above are Etherean.GG's best guess at what to expect in the loadout system. <br />\r\n                These are subject to change when ECOS releases.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        { /* \r\n        <Grid item xs={12} style={styles.familiarContainer}>\r\n          <Grid container>\r\n            <Grid item xs={12} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>2. Select Familiar</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container>\r\n                <Grid item xs={1} style={{ \r\n                    background: \"no-repeat center/150% url('https://undyinggames.com/assets/Images/News/FamiliarCard.png')\", \r\n                    border: `1px solid ${colors.theme.goldPrimary}`,\r\n                    marginTop: 10,\r\n                    height: 150, \r\n                    width: 250 }}>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        */ }\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildLoadout;\r\n\r\nconst styles = {\r\n  disclaimer: {\r\n    textAlign: 'center',\r\n    marginTop: 20\r\n  },\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  label: {\r\n    font: 10,\r\n    color: colors.theme.white,\r\n    marginRight: 2\r\n  },\r\n\r\n  tacticOption: {\r\n    paddingLeft: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  familiarContainer: {\r\n    marginTop: 25\r\n  },\r\n\r\n  remainingPoints: {\r\n    background: colors.theme.goldPrimary,\r\n    color: colors.theme.black,\r\n    \r\n    width: 25,\r\n    marginLeft: 10,\r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n    border: 1,\r\n    borderRadius: 3,\r\n    borderColor: colors.white\r\n  }, \r\n  statCosts: {\r\n    border: `1px solid ${colors.theme.goldBackground}`,\r\n    borderRadius: 5,\r\n    width: 20, \r\n    margin: 5, \r\n    marginRight: 2, \r\n    \r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  statContainer: {\r\n    minHeight: 175,\r\n    marginTop: 15,\r\n    marginBottom: 25\r\n  },\r\n  selectedStat: {\r\n    height: 75,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    paddingLeft: 10,\r\n    paddingRight: 10\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  DynamicAbility,\r\n  StaticAbility\r\n} from '../../../components/Builds'\r\n\r\nconst FragmentBuildAbilities = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  // Hacking a state change :(\r\n  const [count, setCount] = useState(0)\r\n\r\n  const selectLevel = (abilityIndex, level, selected) => {\r\n    let tempData = data\r\n    tempData.data.map((_, index) => {\r\n      tempData.data[index].levels = tempData.data[index].levels.filter(i => i !== level)\r\n    })\r\n\r\n    if(selected) {\r\n      tempData.data[abilityIndex].levels.push(level)\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveNotes = (notes) => {\r\n    let tempData = data;\r\n    tempData.notes = notes;\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              { data.data && data.data[2] && \r\n              <StaticAbility ability={data.data[2]} />\r\n              }\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              { data.data &&\r\n              <StaticAbility ability={data.data[0]} />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            { data.data && data.data.slice(3, 8).map((ability, index) =>\r\n              <Grid item xs={12} style={styles.dynamicAbilities}\r\n                  key={`ability-${index}`}>\r\n                  <DynamicAbility ability={ability} abilityIndex={index+3} \r\n                    maxLevel={index === 0 || index === 4 ? 3 : 5} \r\n                    selectLevel={selectLevel} \r\n                    helperText={true} editable={true} />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField multiline rows={6} \r\n              variant=\"outlined\"\r\n              style={styles.notes} \r\n              className={ classes.root }\r\n              InputProps={{\r\n                className: classes.input\r\n              }}\r\n              placeholder=\"Notes...\"\r\n              defaultValue={data.notes}\r\n              onChange={(e) => { \r\n                saveNotes(e.target.value)\r\n              }} />\r\n          </Grid>\r\n        </Grid> \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildAbilities;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  dynamicAbilities: {\r\n    marginTop: 35,\r\n    marginBottom: 10\r\n  },\r\n\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport SectionHeaderPairing from './Builds/SectionHeaderPairing'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport colors from '../styles/theme'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst CollapsiblePairingSection = (props) => {\r\n    const {\r\n      data,\r\n      levels,\r\n      sectionIndex,\r\n      sectionId,\r\n      deleteSection,\r\n      defaultExpanded\r\n    } = props\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n          padding: 12\r\n        }\r\n      },\r\n      \r\n      input: {\r\n        color: colors.theme.white\r\n      },\r\n    })\r\n  \r\n    const classes = useStyles()\r\n\r\n    return (\r\n      <Grid container\r\n        style={styles.section}\r\n        alignContent='center'\r\n        alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Accordion style={{borderRadius: 5}} \r\n            defaultExpanded={defaultExpanded}>\r\n            <AccordionSummary\r\n              style={styles.summary}\r\n              expandIcon={<ExpandMoreIcon style={{ fill: colors.theme.white }} />} >\r\n              <Grid container\r\n                onClick={(event) => event.stopPropagation()}\r\n                onFocus={(event) => event.stopPropagation()} \r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                <Grid item xs>\r\n                  { data.myth && \r\n                  <Grid container style={styles.sectionHeaderPairingsContainer}>\r\n                    <Grid item xs={1}>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 62 62\">\r\n                        <defs>\r\n                          <clipPath id=\"mythClipPath\">\r\n                            <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" />\r\n                          </clipPath>\r\n                        </defs>\r\n                        <image href={data.myth?.image} width={120} height={61} x={-27} y={0} clipPath=\"url(#mythClipPath)\" />\r\n                        <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" stroke={colors.theme.goldPrimary} fill=\"none\" strokeWidth=\"1\" />\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                      <Typography style={{ color: colors.theme.white }}>{data.myth.name}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      { data.level &&\r\n                      <Button disabled={true}\r\n                        style={styles.selectedButton}\r\n                      >{data.level}</Button>\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                  }\r\n                </Grid>\r\n                <Grid item xs={1}\r\n                  direction=\"row-reverse\">\r\n                    <Button \r\n                        style={styles.deleteSectionButton}\r\n                        onClick={() => deleteSection(sectionId)}>\r\n                      <Grid container\r\n                        direction=\"column\"\r\n                        style={styles.faTrashIcon}>\r\n                        <Grid item>\r\n                          <FontAwesomeIcon\r\n                          styles={styles.faTrashIcon}\r\n                          icon={faTrashAlt} color=\"white\" size=\"lg\" />\r\n                        </Grid>\r\n                        <Grid item\r\n                          style={styles.label}>\r\n                          Delete\r\n                        </Grid>\r\n                      </Grid>\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={styles.details}>\r\n              {props.children}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\nexport default CollapsiblePairingSection;\r\n\r\n\r\nconst styles = {\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  deleteSectionButton: {\r\n    margin: 0,\r\n    padding: 0,\r\n    color: colors.theme.white\r\n  },\r\n  sectionHeaderPairingsContainer: {\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center'\r\n  },\r\n  sectionHeaderItem: {\r\n    paddingLeft: 10\r\n  },\r\n  summary: {\r\n    backgroundColor: colors.theme.sectionHeaderBackground,\r\n\r\n    height: 65\r\n  },\r\n  details: {\r\n    backgroundColor: colors.theme.sectionBackground,\r\n  },\r\n  label: {\r\n    color: colors.theme.white,\r\n    fontSize: \"0.8em\"\r\n  },\r\n  faDragIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  },\r\n  faTrashIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  },\r\n\r\n  selectedButton: {\r\n    color: colors.theme.black,\r\n    backgroundColor: colors.theme.goldPrimary,\r\n    fontSize: \"0.7em\",\r\n    marginTop: 10,\r\n    marginBottom: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nconst TextListButtonPicker = (props) => {\r\n    const {\r\n        activeText,\r\n        textList,\r\n        setData,\r\n        sectionId,\r\n        justifyContent\r\n    } = props\r\n\r\n    return (\r\n        <Grid container style={{ justifyContent: justifyContent }}>\r\n            { textList.map((text, _) => \r\n                <Grid item xs={1} >\r\n                    <Button disabled={setData === undefined ? true : false}\r\n                        style={text === activeText ? styles.selectedButton : styles.button}\r\n                        onClick={() => setData(sectionId, text)}>{text}</Button>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TextListButtonPicker\r\n\r\nconst styles = {\r\n    selectedButton: {\r\n        color: colors.theme.black,\r\n        backgroundColor: colors.theme.goldPrimary,\r\n        fontSize: \"0.7em\",\r\n        marginTop: 10,\r\n        marginBottom: 15\r\n    },\r\n    button: {\r\n        color: colors.theme.goldPrimary,\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        fontSize: \"0.7em\",\r\n        marginTop: 10,\r\n        marginBottom: 15\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport CollapsiblePairingSection from '../../../components/CollapsiblePairingSection'\r\nimport TextListButtonPicker from '../../../components/Builds/TextListButtonPicker'\r\n\r\nimport {\r\n  getMythList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildPairings = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const pairings = {\r\n    threats: 1,\r\n    synergies: 2 \r\n  }\r\n\r\n  const threatLevels = [\"MINOR\", \"SMALL\", \"EVEN\", \"LARGE\", \"MAJOR\"]\r\n  const synergyLevels = [\"ZERO\", \"SOME\", \"DECENT\", \"GOOD\", \"GREAT\"]\r\n\r\n  const [myths, setMyths] = useState([])\r\n  const [selectedPairingType, setSelectedPairingType] = useState(1)\r\n  const [pairingData, setPairingData] = useState(data.threats)\r\n  const [count, setCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const retrieveMyths = async () => {\r\n      const mythList = await getMythList()\r\n      setMyths(mythList.sort((a, b) => (a.name > b.name) ? 1 : -1).map((myth) => {\r\n        return {\r\n          name: myth.name,\r\n          image: myth.backgroundURLs[0]\r\n        }}))\r\n    }\r\n\r\n    retrieveMyths()\r\n  }, [])\r\n\r\n  const addSection = () => {\r\n    let tempData = data\r\n    if(selectedPairingType === 1) {\r\n      const id = Math.max(...tempData.threats.map(s => s.id), 0)\r\n      tempData.threats = data.threats.concat({id: id + 1})\r\n\r\n      setPairingData(tempData.threats)\r\n    } else {\r\n      const id =  Math.max(...tempData.synergies.map(s => s.id), 0)\r\n      tempData.synergies = data.synergies.concat({id: id + 1})\r\n\r\n      setPairingData(tempData.synergies)\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const deleteSection = (sectionId) => {\r\n    let tempData = data\r\n\r\n    if(selectedPairingType === pairings.threats) {\r\n      tempData.threats = data.threats.filter(s => s.id !== sectionId)\r\n      setPairingData(tempData.threats)\r\n    } else {\r\n      tempData.synergies = data.synergies.filter(s => s.id !== sectionId)\r\n      setPairingData(tempData.synergies)\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const togglePairing = () => {\r\n    setSelectedPairingType(selectedPairingType === pairings.threats ? pairings.synergies : pairings.threats)\r\n    setPairingData(selectedPairingType === pairings.threats ? data.synergies : data.threats)\r\n  }\r\n\r\n  const savePairingMyth = (index, myth) => {\r\n    let tempData = data\r\n\r\n    if(selectedPairingType === 1) {\r\n      tempData.threats[index].myth = myth\r\n    } else {\r\n      tempData.synergies[index].myth = myth\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const savePairingLevel = (index, level) => {\r\n    let tempData = data\r\n\r\n    if(selectedPairingType === 1) {\r\n      tempData.threats[index].level = level\r\n    } else {\r\n      tempData.synergies[index].level = level\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveNotes = (index, notes) => {\r\n    let tempData = data\r\n    if(selectedPairingType === 1) {\r\n      tempData.threats[index].notes = notes\r\n    } else {\r\n      tempData.synergies[index].notes = notes\r\n    }\r\n\r\n    setData(tempData)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid container style={{ justifyContent: 'center' }}>\r\n          <Grid item xs={1}>\r\n            <Button onClick={togglePairing}\r\n              style={ selectedPairingType === pairings.threats ? styles.activePairing : styles.inactivePairing }>\r\n                THREATS\r\n              </Button>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n          <Button onClick={togglePairing}\r\n              style={ selectedPairingType === pairings.synergies ? styles.activePairing : styles.inactivePairing }>\r\n                SYNERGIES\r\n              </Button>\r\n          </Grid>\r\n        </Grid>\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A { selectedPairingType === pairings.threats ? \"THREAT\" : \"SYNERGY\" }\r\n        </Button>\r\n      </Grid>\r\n      { pairingData.map((section, sIndex) => \r\n        <CollapsiblePairingSection \r\n          key={`sections-${selectedPairingType === pairings.threats ? \"threats\" : \"synergies\"}-${section.id}`}\r\n          style={styles.section}\r\n          sectionIndex={sIndex}\r\n          sectionId={section.id}\r\n          title={section.title}\r\n          defaultExpanded={pairingData.length === 1}\r\n          data={section}\r\n          levels={selectedPairingType === pairings.threats ? threatLevels : synergyLevels }\r\n          deleteSection={() => deleteSection(section.id)}>\r\n          <Grid container>\r\n            { myths.map((myth, index) => \r\n              <Grid item xs>\r\n                <Button onClick={() => savePairingMyth(sIndex, myth)}\r\n                    style={{opacity: section?.myth?.name === myth.name ? 1 : 0.5 }}>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"90\" height=\"90\" viewBox=\"0 0 62 62\">\r\n                        <defs>\r\n                          <clipPath id=\"mythClipPath\">\r\n                            <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" />\r\n                          </clipPath>\r\n                        </defs>\r\n                        <image href={myth?.image} width={120} height={61} x={-27} y={0} clipPath=\"url(#mythClipPath)\" />\r\n                        <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" stroke={colors.theme.goldPrimary} fill=\"none\" strokeWidth=\"1\" />\r\n                      </svg>\r\n                  </Button>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs />\r\n            { section.myth && \r\n              <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <Typography style={styles.pairingMessage}>\r\n                      { selectedPairingType === pairings.threats\r\n                        ? `How much of a threat is ${section.myth.name}?`\r\n                        : `How compatible is ${section.myth.name}?`\r\n                      }\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} >\r\n                    <TextListButtonPicker \r\n                      activeText={section.level}\r\n                      textList={selectedPairingType === pairings.threats ? threatLevels : synergyLevels}\r\n                      setData={savePairingLevel}\r\n                      sectionId={sIndex}\r\n                      justifyContent={\"start\"}\r\n                      />\r\n                  </Grid>\r\n                <Grid item xs />\r\n                <Grid item xs={12}>\r\n                  \r\n                </Grid>\r\n              </Grid>\r\n            }\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <TextField multiline rows={6} \r\n                  variant=\"outlined\"\r\n                  style={styles.notes} \r\n                  className={ classes.root }\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                  placeholder=\"Notes...\"\r\n                  defaultValue={section.notes}\r\n                  onChange={(e) => { \r\n                    saveNotes(sIndex, e.target.value)\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CollapsiblePairingSection>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A { selectedPairingType === pairings.threats ? \"THREAT\" : \"SYNERGY\" }\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildPairings;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  buttonAddSection: {\r\n    backgroundColor: colors.theme.goldPrimary,\r\n    fontSize: \"0.7em\",\r\n    marginTop: 10,\r\n    marginBottom: 15\r\n  },\r\n\r\n  activePairing: {\r\n    background: colors.theme.goldPrimary,\r\n    fontSize: \"0.7em\",\r\n    width: 40\r\n  }, \r\n  inactivePairing: {\r\n    color: colors.theme.white,\r\n    background: colors.theme.sectionBackground,\r\n    fontSize: \"0.7em\",\r\n    width: 40\r\n  },\r\n\r\n  pairingMessage: {\r\n    color: colors.theme.white\r\n  },\r\n\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Popover\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faFileAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport colors from '../styles/theme'\r\n\r\nexport const PopoverNotes = (props) => {\r\n    const {\r\n        notes\r\n    } = props\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null)\r\n    const open = Boolean(anchorEl)\r\n    const handleHoverOn = (event) => { setAnchorEl(event.currentTarget) }\r\n    const handleHoverOff = () => { setAnchorEl(null) }\r\n\r\n    return (\r\n        <>\r\n            <FontAwesomeIcon onMouseEnter={handleHoverOn}\r\n                styles={styles.faTrashIcon}\r\n                icon={faFileAlt} color=\"white\" size=\"lg\" /> \r\n            <Popover\r\n                id={`popover-notes`}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClick={handleHoverOff}\r\n                onClose={handleHoverOff}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'center',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                }}>\r\n                <Grid container style={styles.popoverWrapper}>\r\n                    <Grid item xs={12}>\r\n                        {notes}\r\n                    </Grid>\r\n                </Grid>\r\n            </Popover>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PopoverNotes\r\n\r\nconst styles = {\r\n    popoverWrapper: {\r\n        padding: 10,\r\n        width: '40vw',\r\n        border: `2px solid ${colors.theme.goldBackground}`,\r\n        borderRadius: '5px 5px',\r\n        color: colors.theme.white,\r\n        backgroundColor: colors.theme.siteBackground,\r\n        whiteSpace: 'pre-wrap'\r\n    }\r\n}","import React, { useState } from 'react'\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport Item from '../components/Builds/Item'\r\nimport SelectedStat from '../components/Builds/SelectedStat'\r\n\r\nimport StaticAbility from '../components/Builds/StaticAbility'\r\nimport DynamicAbility from '../components/Builds/DynamicAbility'\r\n\r\nimport PopoverNotes from '../components/PopoverNotes'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst BuildView = (props) => {\r\n    const {\r\n        data,\r\n        editAction,\r\n        saveAction\r\n    } = props\r\n\r\n    const createdOn = new Date()\r\n    const monthNames = [\"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\", \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"]\r\n\r\n    const pairings = {\r\n        threats: 1,\r\n        synergies: 2\r\n    }\r\n\r\n    const [selectedPairingType, setSelectedPairingType] = useState(pairings.threats)\r\n    const [pairingData, setPairingData] = useState(data.pairings.threats)\r\n\r\n    const togglePairing = () => {\r\n        setSelectedPairingType(selectedPairingType === pairings.threats ? pairings.synergies : pairings.threats)\r\n        setPairingData(selectedPairingType === pairings.threats ? data.pairings.synergies : data.pairings.threats)\r\n    }\r\n\r\n    return (\r\n    <Grid container style={styles.rootContainer}>\r\n        <Grid item xs={12}>\r\n            <Typography>{data.myth.data.name.toUpperCase()} BUILD GUIDE {/* BY {data.author} */}</Typography>\r\n        </Grid>\r\n        <Grid container style={{ \r\n            minHeight: 250,\r\n            backgroundImage: `url(${data.myth.data.background})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover' }}>\r\n            <Grid container style={{ alignContent: 'flex-end', alignItems: 'center', paddingBottom: 18, background: '#00000065'}}>\r\n                <Grid item>\r\n                    <Avatar variant=\"square\" style={{paddingLeft: 5 }}\r\n                        src={`${process.env.PUBLIC_URL}/${data.myth.role.image}`} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <h2>{data.myth.title}</h2>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ paddingLeft: 45 }}>\r\n                    <Typography>\r\n                        CREATED ON {monthNames[createdOn.getMonth()]} {createdOn.getDate()}, {createdOn.getFullYear()}\r\n                    </Typography>\r\n                </Grid>\r\n                { editAction &&\r\n                <Grid item xs={12}>\r\n                    <Grid container style={styles.buttons}>\r\n                        <Grid item xs={2} style={{ paddingLeft: 45 }}>\r\n                            <Button style={styles.buttons.edit} onClick={editAction}>\r\n                                {'< EDIT'}\r\n                            </Button>\r\n                        </Grid>\r\n                        { saveAction &&\r\n                        <Grid item xs>\r\n                            <Button onClick={saveAction}\r\n                                style={styles.buttons.publish}>\r\n                                {'PUBLISH >'}\r\n                            </Button>\r\n                        </Grid>\r\n                        }\r\n                        <Grid item xs={8} />\r\n                    </Grid>\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n        \r\n        <h2 style={styles.headerTitle}>ITEMS</h2>\r\n        <Grid item xs={12}>\r\n            { data.items.map((section, index) => \r\n                <Grid container style={styles.items.sectionWrapper}>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            {section.title} | <PopoverNotes notes={section.notes} />\r\n                        </Grid>\r\n                        { section.build.map((item, _) => \r\n                            <Grid item xs={1}>\r\n                                <Item item={item} />\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <h2 style={styles.headerTitle}>LOADOUT</h2>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <h2>Combat Stats</h2>\r\n        </Grid>\r\n        <Grid container style={styles.statContainer}>\r\n            { data.loadout.selectedStats.map((stat, _) => \r\n            <Grid item xs={3} style={styles.loadout.selectedStat}>\r\n                <SelectedStat stat={stat} />\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n\r\n        <h2 style={styles.headerTitle}>\r\n            ABILITY ORDER <PopoverNotes notes={data.abilities.notes} />\r\n            </h2>\r\n        <Grid item xs={12}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <StaticAbility ability={data.abilities.data[2]} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <StaticAbility ability={data.abilities.data[0]} />\r\n                </Grid>\r\n            </Grid>\r\n            { data.abilities.data.slice(3, 8).map((ability, abilityIndex) => \r\n                <Grid item xs={12} style={styles.dynamicAbilities}\r\n                    key={`build-view-ability-${abilityIndex}`}>\r\n                    <DynamicAbility ability={ability} abilityIndex={abilityIndex+3} maxLevel={abilityIndex === 0 || abilityIndex === 4 ? 3 : 5} helperText={true} />\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n\r\n        <h2 style={styles.headerTitle}>Threats & Synergies</h2>\r\n        <Grid container \r\n            alignContent='center'\r\n            alignItems='center'>\r\n            <Grid container style={{ justifyContent: 'center' }}>\r\n            <Grid item xs={1}>\r\n                <Button onClick={togglePairing}\r\n                style={ selectedPairingType === pairings.threats ? styles.pairings.activePairing : styles.pairings.inactivePairing }>\r\n                    THREATS\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <Button onClick={togglePairing}\r\n                style={ selectedPairingType === pairings.synergies ? styles.pairings.activePairing : styles.pairings.inactivePairing }>\r\n                    SYNERGIES\r\n                </Button>\r\n            </Grid>\r\n            </Grid>\r\n            { pairingData.map((pairing, index) => \r\n                <Grid container style={{ alignItems: 'center', alignContent: 'center', marginTop: 25 }}>\r\n                    <Grid item xs={1}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"90\" height=\"90\" viewBox=\"0 0 62 62\">\r\n                            <defs>\r\n                            <clipPath id=\"mythClipPath\">\r\n                                <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                                transform=\"translate(-203.605 -336.96)\" />\r\n                            </clipPath>\r\n                            </defs>\r\n                            <image href={pairing.myth.image} width={120} height={61} x={-27} y={0} clipPath=\"url(#mythClipPath)\" />\r\n                            <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                                transform=\"translate(-203.605 -336.96)\" stroke={colors.theme.goldPrimary} fill=\"none\" strokeWidth=\"1\" />\r\n                        </svg>\r\n                    </Grid>\r\n                    <Grid item xs={2} style={{ paddingLeft: 10 }}>\r\n                        <Button disabled={true}\r\n                            style={styles.pairings.pairingLevel}\r\n                        >\r\n                                {pairing.level}\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={9}>\r\n                        <Typography style={styles.pairings.notes}>\r\n                            {pairing.notes}\r\n                        </Typography>\r\n                    </Grid>\r\n                    { (index < pairingData.length-1) &&\r\n                        <hr style={{width: '80vw', color: colors.theme.grey }} />\r\n                    }\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n    </Grid>\r\n    )\r\n}\r\n\r\nexport default BuildView\r\n\r\nconst styles = {\r\n    rootContainer: {\r\n        color: colors.theme.white\r\n    },\r\n    headerTitle: {\r\n        color: colors.theme.goldPrimary,\r\n    },\r\n\r\n    buttons: {\r\n        marginTop: 15,\r\n        edit: {\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            color: colors.theme.goldPrimary\r\n        },\r\n        publish: {\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            backgroundColor: colors.theme.goldPrimary\r\n        }\r\n    },\r\n\r\n    items: {\r\n        sectionWrapper: {\r\n            paddingBottom: 25\r\n        },\r\n        title: {\r\n            marginTop: 0\r\n        },\r\n        notes: {\r\n            marginTop: 15,\r\n            marginBottom: 15,\r\n            whiteSpace: 'pre-wrap'\r\n        }\r\n    },\r\n\r\n    loadout: {\r\n        selectedStat: {\r\n            height: 75,\r\n            marginTop: 5,\r\n            marginBottom: 5,\r\n            paddingRight: 10\r\n          }\r\n    },\r\n\r\n    abilities: {\r\n        dynamicAbilities: {\r\n            marginTop: 15\r\n        },\r\n        image: {\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            height: 75,\r\n            width: 75\r\n        },\r\n        levelDefault: {\r\n            backgroundColor: colors.theme.black,\r\n            color: colors.theme.white,\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        },\r\n        levelSelected: {\r\n            backgroundColor: colors.theme.goldPrimary,\r\n            color: colors.theme.black,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        },\r\n        notes: {\r\n            marginTop: 15,\r\n            whiteSpace: 'pre-wrap'\r\n        }\r\n    },\r\n\r\n    pairings: {\r\n        activePairing: {\r\n            background: colors.theme.goldPrimary,\r\n            fontSize: \"0.7em\",\r\n            width: 40\r\n        }, \r\n        inactivePairing: {\r\n            color: colors.theme.white,\r\n            background: colors.theme.sectionBackground,\r\n            fontSize: \"0.7em\",\r\n            width: 40\r\n        },\r\n        pairingLevel: {\r\n            color: colors.theme.black,\r\n            background: colors.theme.goldPrimary,\r\n            fontSize: \"0.7em\",\r\n            width: 40\r\n        },\r\n        notes: {\r\n            whiteSpace: 'pre-wrap'\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nimport BuildView from '../../../components/BuildView'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport { saveBuild } from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildReview = (props) => {\r\n  const {\r\n    data,\r\n    editAction\r\n  } = props\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(false)\r\n\r\n  const save = async () => {\r\n    setButtonDisabled(false) // true\r\n    const response = await saveBuild(data)\r\n\r\n    //console.log(response)\r\n  }\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <h2 style={styles.previewBuildHeader}>\r\n            Preview Build\r\n          </h2>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BuildView data={data} editAction={editAction} /*saveAction={save} */ />\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildReview;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  saveButton: {\r\n    backgroundColor: colors.theme.goldBackground\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport FragmentBuildMyths from './fragments/Myths'\r\nimport FragmentBuildItems from './fragments/Items'\r\nimport FragmentBuildLoadout from './fragments/Loadout'\r\nimport FragmentBuildAbilities from './fragments/Abilities'\r\nimport FragmentBuildPairings from './fragments/Pairings'\r\nimport FragmentBuildReview from './fragments/Review'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nconst CreateBuild = () => {\r\n  document.title = \"Etherean.gg - Create Build\"\r\n  \r\n  const steps = {\r\n    // reorder as needed\r\n    myth: 1,\r\n    items: 2,\r\n    loadout: 3,\r\n    abilities: 4,\r\n    pairings: 5,\r\n    review: 6\r\n  }\r\n\r\n  const [step, setStep] = useState(steps.myth)\r\n  const [errors, setErrors] = useState([])\r\n  \r\n  const [myth, setMyth] = useState({})\r\n  const [items, setItems] = useState([{ id: 0, order: 0, build: [] }])\r\n  const [loadout, setLoadout] = useState({ remainingPoints: 8, selectedStats: [], primaryTactic: -1, secondaryTactic: -1, secondaryStatList: [] })\r\n  const [abilities, setAbilities] = useState()\r\n  const [pairings, setPairings] = useState({ threats: [{ id: 1 }], synergies: [{ id: 1}] })\r\n\r\n  const [count, setCount] = useState(0)\r\n\r\n  const moveStep = (direction) => { \r\n    if(direction > 0) {\r\n      const tempErrors = listErrors()\r\n\r\n      if(tempErrors.length > 0 ) {\r\n        return\r\n      }\r\n    }\r\n\r\n    setStep(step + direction) \r\n  }\r\n\r\n  const getStep = () => {\r\n    switch(step) {\r\n      // pass up state\r\n      case steps.myth: return <FragmentBuildMyths data={myth} setData={setMyth} />\r\n      case steps.items: return <FragmentBuildItems data={items} setData={setItems} />\r\n      case steps.loadout: return <FragmentBuildLoadout data={loadout} setData={setLoadout} />\r\n      case steps.abilities: return <FragmentBuildAbilities data={{ data: myth.data?.abilities, notes: abilities?.notes }} setData={setAbilities} />\r\n      case steps.pairings: return <FragmentBuildPairings data={pairings} setData={setPairings} />\r\n      case steps.review: return <FragmentBuildReview data={{myth, items, loadout, abilities, pairings}} editAction={() => setStep(1)} />\r\n    }\r\n  }\r\n\r\n  const listErrors = () => {\r\n    let tempErrors = []\r\n\r\n    if(step === steps.myth) {\r\n      if(!myth.title) {\r\n        tempErrors.push({ field: 'title', message: 'You have not provided a title' })\r\n      } else if(myth.title.length < 5) {\r\n        tempErrors.push({ field: 'title', message: 'The title of the build should be 5 or more characters' })\r\n      }\r\n\r\n      if(!myth.role?.name) {\r\n        tempErrors.push({ field: 'role', message: 'You have not selected a role' })\r\n      }\r\n\r\n      if(!myth.data?.name) {\r\n        tempErrors.push({ field: 'myth', message: 'You have not selected a myth' })\r\n      } else if(!myth.data?.background) {\r\n        tempErrors.push({ field: 'background', message: 'You have not selected a background' })\r\n      }\r\n    }    \r\n\r\n    if(step === steps.items) {\r\n      items.map((section, index) => {\r\n        if(!section.title) {\r\n          tempErrors.push({ field: `section-${index}`, message: `Item section #${index+1} needs a title` })\r\n        } else if (section.title.length < 5) {\r\n          tempErrors.push({ field: `section-${index}`, message: `Item section titled \"${section.title}\" (#${index+1}) needs a title with at least 5 characters` })\r\n        }\r\n\r\n        if(section.build.length === 0) {\r\n          if(!section.title) {\r\n            tempErrors.push({ field: `section-${index}`, message: `Item Section #${index+1} has no items` })\r\n          } else {\r\n            tempErrors.push({ field: `section-${index}`, message: `Item Section titled \"${section.title}\" (#${index+1}) has no items` })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if(step === steps.abilities) {\r\n      if(!abilities) {\r\n        tempErrors.push({ field: 'abilities', message: 'You have not selected all of your abilities'})\r\n      } else {\r\n        let abilityLevels = 0\r\n        abilities.data.map((ability, _) => {\r\n          abilityLevels += ability?.levels?.length ?? 0\r\n        })\r\n\r\n        if(abilityLevels < 20) {\r\n          tempErrors.push({ field: 'abilities', message: 'You have not selected all of your abilities'})\r\n        }\r\n      }\r\n    }\r\n\r\n    if(step === steps.loadout) {\r\n      if(loadout.remainingPoints > 0) {\r\n        tempErrors.push({ field: 'loadout', message: 'You have not used all of your tactic points'})\r\n      }\r\n    }\r\n\r\n    if(step === steps.pairings) {\r\n      pairings.threats.map((threat, index) => {\r\n        if(threat.myth?.name === undefined) {\r\n          tempErrors.push({ field: 'pairings', message: `Missing myth for threat section #${index+1}` })\r\n        } else if(threat.level === undefined) {\r\n          tempErrors.push({ field: 'pairings', message: `Missing threat level for threat against ${threat.myth.name} (section #${index+1})` })\r\n        }\r\n      })\r\n\r\n      pairings.synergies.map((synergy, index) => {\r\n        if(synergy.myth?.name === undefined) {\r\n          tempErrors.push({ field: 'pairings', message: `Missing myth for synergy section #${index+1}` })\r\n        } else if(synergy.level === undefined) {\r\n          tempErrors.push({ field: 'pairings', message: `Missing synergy level for synergy with ${synergy.myth.name} (section #${index+1})` })\r\n        }\r\n      })\r\n\r\n      if(tempErrors.length > 0 && pairings.threats.length + pairings.synergies.length > 0) {\r\n        tempErrors.push({field: 'pairings', message: 'Pairings are optional, you may delete any section you do not need'})\r\n      }\r\n    }\r\n\r\n    setErrors(tempErrors)\r\n    setCount(count+1)\r\n\r\n    // needed for a logic check\r\n    return tempErrors\r\n  }\r\n\r\n  // TODO: Can this be cleaned up with an array?\r\n  return (\r\n    <Grid container \r\n      style={styles.createContent}\r\n      alignContent='center'\r\n      alignItems='center'>\r\n        { step !== steps.review && \r\n          <Grid item xs style={styles.buildContent}>\r\n            <h3 style={styles.header}>Create a build</h3>\r\n            <div>\r\n              <Grid container style={styles.steps}>\r\n                <Grid item xs /* onClick={() => setStep(steps.myth)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={ \r\n                      step === steps.myth ? styles.stepNumberCurrent :\r\n                      styles.stepNumberBehind\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.myth ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">1</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Start your build\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.items)} */>\r\n                  <Grid container>\r\n                  <Grid item xs={12} style={\r\n                      step === steps.items ? styles.stepNumberCurrent\r\n                        : step > steps.items ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.items ? colors.theme.white : colors.theme.goldPrimary}} x=\"33\" y=\"40\">2</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Select Items\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.loadout)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={\r\n                      step === steps.loadout ? styles.stepNumberCurrent\r\n                        : step > steps.loadout ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.loadout ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">3</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Select Loadout & Familiar\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.abilities)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={\r\n                      step === steps.abilities ? styles.stepNumberCurrent\r\n                        : step > steps.abilities ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.abilities ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">4</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Ability Level Up\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.pairings)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12}style={\r\n                      step === steps.pairings ? styles.stepNumberCurrent\r\n                        : step > steps.pairings ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.pairings ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">5</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Threats & Synergies\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs>\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={\r\n                      step === steps.review ? styles.stepNumberCurrent\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.review ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">6</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Preview & Publish\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        }\r\n        <Grid container>\r\n          <Grid item xs>\r\n            { errors.length > 0 && \r\n              <>\r\n                <Typography>There are one or more errors on this page, please correct the following:</Typography>\r\n                { errors.map((error, _) => \r\n                  <Typography>{error.message}</Typography>\r\n                )}\r\n              </>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs />\r\n          { step !== steps.myth && step < steps.review &&\r\n          <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n            <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n          </Grid>\r\n          }\r\n          { step !== steps.review && \r\n          <Grid item xs={2} onClick={() => moveStep(1)}>\r\n            <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n          </Grid>\r\n          }\r\n        </Grid>\r\n        { getStep() }\r\n        <Grid container>\r\n          <Grid item xs />\r\n          { step !== steps.myth && steps < steps.review &&\r\n          <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n            <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n          </Grid>\r\n          }\r\n          { step < steps.review && \r\n          <Grid item xs={2} onClick={() => moveStep(1)}>\r\n            <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n          </Grid>\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateBuild;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.theme.white\r\n  },\r\n  steps: {\r\n    marginTop: 30,\r\n    marginBottom: 35,\r\n\r\n    textAlign: \"center\",\r\n    fontSize: \"0.8em\",\r\n    color: colors.theme.white\r\n  },\r\n  stepNumberBehind: {\r\n    color: colors.theme.goldPrimary,\r\n    marginBottom: 5,\r\n\r\n    opacity: 0.7\r\n  },\r\n  stepNumberCurrent: {\r\n    marginBottom: 5,\r\n  },\r\n  stepNumberAhead: {\r\n    marginBottom: 5,\r\n\r\n    opacity: 0.20\r\n  },\r\n\r\n  buttonNextStep: {\r\n    fontSize: \"0.7em\",\r\n    backgroundColor: colors.theme.goldPrimary,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  },\r\n  buttonPreviousStep: {\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.goldPrimary,\r\n    border: `1px solid ${colors.theme.goldPrimary}`,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport BuildView from '../../components/BuildView'\r\nimport { searchBuildsBySlug } from '../../state/actions/ethereal.actions'\r\n\r\nconst ViewBuild = () => {\r\n  document.title = \"Etherean.gg - View Build\"\r\n\r\n  const { buildSlug } = useParams()\r\n  const [build, setBuild] = useState({})\r\n\r\n  useEffect(() => {      \r\n    // browser throws an error if you don't define it and then call it ¯\\_(ツ)_/¯\r\n    const retrieveBuild = async (buildSlug) => {\r\n      setBuild(await searchBuildsBySlug(buildSlug))\r\n    }\r\n\r\n    retrieveBuild(buildSlug)\r\n  }, [])\r\n\r\n  return (\r\n    build?.id ? \r\n    <Grid container>\r\n      <BuildView data={build} />\r\n    </Grid> :\r\n    <Grid>\r\n      No Build Found\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ViewBuild;","import CreateBuild from '../pages/builds/Create'\r\nimport ViewBuild from '../pages/builds/View'\r\nimport NotFound from '../pages/NotFound'\r\n\r\nconst routes = [\r\n  // Will need to test out build viewing with slug in iframe\r\n\r\n  // Builds\r\n  { path: \"/builds/create\", key: \"CREATE_BUILD\", exact: true, component: CreateBuild },\r\n  { path: \"/builds/view/:buildSlug\", key: \"VIEW_BUILD_SLUG\", component: ViewBuild },\r\n  { path: \"/builds/view\", key: \"VIEW_BUILD_LIST\", exact: true, component: ViewBuild },\r\n\r\n  { path: \"/:buildSlug\", key: \"ROOT\", exact: true, component: CreateBuild },\r\n\r\n  // Without slash needed for github pages\r\n  { path: \"\", key: \"ROOT\", exact: true, component: CreateBuild },\r\n\r\n  // Catch All Else\r\n  { path: \"/:NotFound\", component: NotFound }\r\n];\r\n\r\nexport default routes;","import  React from 'react'\r\n\r\nconst NotFound = () => {\r\n    document.title = \"Etherean.gg - 404 Not Found\"\r\n\r\n    return (\r\n        <div>Page Not Found</div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\nimport { Route} from 'react-router-dom'\r\n\r\nexport const RouteAndSubRoutes = route => {\r\n    return (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n                <route.component { ...props}\r\n                routes={route.routes} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RouteAndSubRoutes;","import { createReducer} from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    GET_FAMILIARS,\r\n    GET_ITEMS,\r\n    GET_MYTHS\r\n} from './../actions/ethereal.actions'\r\n\r\nconst initialState = {\r\n    isFetching: false\r\n}\r\n\r\n// Not used, redux may be over complicating this?\r\nconst etherealReducer = createReducer(initialState, {\r\n    [GET_FAMILIARS]: (state, action) => {\r\n        state.familiars = action.payload\r\n    },\r\n\r\n    [GET_ITEMS]: (state, action) => {\r\n        state.items = action.payload\r\n    },\r\n\r\n    [GET_MYTHS]: (state, action) => {\r\n        state.myth = action.payload\r\n    }\r\n});\r\n\r\nexport default etherealReducer;","import { combineReducers } from 'redux'\r\nimport * as etherealReducer from './ethereal.reducers'\r\n\r\nconst allReducers = combineReducers({...etherealReducer});\r\n\r\nexport default allReducers;","import { createStore, applyMiddleware } from 'redux'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\n\r\nimport allReducers from './reducers/all.reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'authentication',\r\n  storage: storage,\r\n  whitelist: []\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\nconst middleware = applyMiddleware(thunk, logger);\r\nconst store = createStore(persistedReducer, {}, middleware);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport routes from './routes'\r\nimport { Switch } from 'react-router-dom'\r\nimport RouteAndSubRoutes from './routes/RouteAndSubRoutes'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'  \r\nimport { Provider } from 'react-redux'\r\n\r\nimport store, { persistor } from './state'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from './styles/theme'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { \r\n  faArrowsAlt,\r\n  faFileAlt,\r\n  faFilter,\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  faArrowsAlt,\r\n  faFileAlt,\r\n  faFilter,\r\n  faTrashAlt\r\n)\r\n\r\nconst AppBase = () => {\r\n  const useStyles = makeStyles({\r\n    '@global': {\r\n        '*::-webkit-scrollbar': {\r\n          width: '0.4em'\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          '-webkit-box-shadow': `inset 0 0 6px ${colors.theme.scrollLane}`\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: colors.theme.scrollBar,\r\n          outline: `1px solid ${colors.theme.scrollBar}`\r\n        }\r\n    },\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  useStyles()\r\n\r\n  return (\r\n    <div name=\"wrapper\" style={styles.wrapper}>\r\n      <div name=\"content\" style={styles.content}>\r\n        <React.StrictMode>\r\n          <Provider store={store}>\r\n            <PersistGate\r\n              loading=\"Loading...\"\r\n              persistor={persistor}\r\n            >\r\n              <BrowserRouter>\r\n                <Switch> {\r\n                  routes.map(\r\n                    (route, index) => \r\n                      <RouteAndSubRoutes key={index} {...route} />\r\n                    )\r\n                }\r\n                </Switch>\r\n              </BrowserRouter>\r\n            </PersistGate>\r\n          </Provider>\r\n        </React.StrictMode>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    height: \"100%\",\r\n\r\n    backgroundColor: colors.theme.siteBackground,\r\n  },\r\n  content: {\r\n    margin: \"auto\",\r\n    padding: \"4vh\",\r\n\r\n    height: \"100%\",\r\n    minHeight: \"92vh\",\r\n    maxWidth: \"1000px\",\r\n\r\n    backgroundColor: colors.theme.contentBackground,\r\n    color: colors.theme.white,\r\n  }\r\n}\r\n\r\nexport default AppBase;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { theme } from './styles/theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}