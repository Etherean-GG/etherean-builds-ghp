{"version":3,"sources":["styles/theme.js","state/actions/ethereal.actions.js","pages/builds/fragments/Myths.jsx","components/Builds/SectionHeaderItem.jsx","components/CollapsibleItemSection.jsx","components/Builds/Item.jsx","components/ItemList.jsx","pages/builds/fragments/Items.jsx","components/Builds/DynamicAbility.jsx","components/Builds/SelectedStat.jsx","components/Builds/StaticAbility.jsx","components/Builds/StatPicker.jsx","pages/builds/fragments/Loadout.jsx","pages/builds/fragments/Abilities.jsx","pages/builds/fragments/Pairings.jsx","components/BuildView.jsx","pages/builds/fragments/Review.jsx","pages/builds/Create.jsx","pages/builds/View.jsx","routes/index.js","pages/NotFound.jsx","routes/RouteAndSubRoutes.js","state/reducers/ethereal.reducers.js","state/reducers/all.reducers.js","state/index.js","App.js","serviceWorker.js","index.js"],"names":["theme","createMuiTheme","typography","fontFamily","join","colors","siteBackground","contentBackground","contentBorder","scrollBar","scrollLane","sectionHeaderBackground","sectionBackground","goldPrimary","goldSecondary","goldBackground","statsFirst","statsSecond","statsThird","statsFourth","white","black","grey","red","silver","aqua","blue","gray","green","magenta","purple","yellow","API_DOMAIN","searchBuildsBySlug","slug","a","axios","get","response","data","getMythList","getItemList","FragmentBuildMyths","props","setData","useState","count","setCount","myths","setMyths","roles","setRoles","useEffect","retrieveMyths","mythList","sort","b","name","retrieveRoles","image","classes","makeStyles","root","border","color","input","useStyles","Grid","container","style","styles","content","item","xs","Typography","label","required","TextField","className","InputProps","fullWidth","variant","defaultValue","title","onChange","e","tempData","saveTitle","target","value","map","role","index","key","roleContainer","Button","onClick","saveRole","roleImage","opacity","width","height","src","process","alt","roleDescription","myth","textAlign","paddingBottom","backgroundURLs","abilities","_","levels","class","imageURL","concat","saveMyth","xmlns","viewBox","id","d","transform","href","x","y","clipPath","stroke","fill","strokeWidth","background","backgroundImageWrapper","saveBackground","strokeMiterlimit","alignContent","alignItem","marginTop","marginBottom","roleUnselected","marginLeft","marginRight","SectionHeaderItem","justify","alignItems","backgroundImage","backgroundSize","backgroundRepeat","minWidth","minHeight","CollapsibleItemSection","sectionIndex","sectionId","deleteSection","defaultExpanded","padding","section","Accordion","borderRadius","AccordionSummary","summary","expandIcon","event","stopPropagation","onFocus","direction","faDragIcon","icon","faArrowsAlt","size","placeholder","sectionHeaderItemsContainer","sectionHeaderItem","deleteSectionButton","faTrashIcon","faTrashAlt","AccordionDetails","details","children","margin","justifyContent","paddingLeft","backgroundColor","fontSize","Item","itemCost","cost","itemName","cursor","scrollableList","maxHeight","overflow","itemList","paddingTop","searchField","itemFilter","ItemList","items","filteredItems","setFilteredItems","filter","length","filteredList","i","toUpperCase","includes","filterItems","faFilter","FragmentBuildItems","setItemList","addSection","tempSections","Math","max","s","order","build","addItem","hasBoots","some","endsWith","push","removeItem","retrieveItemList","buttonAddSection","sIndex","iIndex","selectedItem","multiline","rows","notes","saveNotes","header","DynamicAbility","ability","abilityIndex","maxLevel","selectLevel","helperText","type","Array","disabled","specialAbilityLevelOne","levelSelected","levelDefault","SelectedStat","stat","removeStat","isHovering","setIsHovering","onMouseEnter","onMouseLeave","display","position","zIndex","statCost","points","statName","StaticAbility","slot","StatPicker","isPrimary","remainingPoints","addStat","splitCosts","setSplitCosts","splitColors","setSplitColors","statCosts","splice","statColors","pickerRow","FragmentBuildLoadout","combatTactics","setCombatTactics","stats","retrieveCombatTactics","selectedStats","selectDropdown","menuItem","statContainer","selectedStat","removeStatAt","Select","primaryTactic","secondaryTactic","statList","tactic","secondaryStatList","inputProps","MenuItem","disclaimer","font","tacticOption","familiarContainer","borderColor","paddingRight","FragmentBuildAbilities","level","selected","slice","dynamicAbilities","FragmentBuildPairings","BuildView","editAction","createdOn","Date","rootContainer","Avatar","getMonth","getDate","getFullYear","buttons","edit","headerTitle","itemIndex","loadout","levelIndex","publish","pairings","FragmentBuildReview","console","log","previewBuildHeader","saveButton","CreateBuild","document","steps","review","step","setStep","errors","setErrors","setMyth","setItems","setLoadout","setAbilities","setPairings","moveStep","listErrors","tempErrors","field","message","abilityLevels","createContent","buildContent","stepNumberCurrent","stepNumberBehind","data-name","stepNumberAhead","error","buttonPreviousStep","buttonNextStep","getStep","ViewBuild","buildSlug","useParams","setBuild","retrieveBuild","routes","path","exact","component","RouteAndSubRoutes","route","render","etherealReducer","createReducer","isFetching","state","action","familiars","payload","allReducers","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","middleware","applyMiddleware","thunk","logger","store","createStore","persistor","persistStore","library","add","wrapper","maxWidth","AppBase","outline","StrictMode","loading","Boolean","window","location","hostname","match","ReactDOM","ThemeProvider","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b46f9814.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: ['\"Open Sans\"', 'sans-serif'].join(',')\r\n     }\r\n})\r\n\r\nexport const colors = {\r\n    // site theme colors\r\n    theme: {\r\n        siteBackground: \"#090909\",\r\n\r\n        contentBackground: \"#121212\",\r\n        contentBorder: \"#707070\",\r\n        \r\n        scrollBar: '#FFFFFF3D',\r\n        scrollLane: '#1E1E1E',\r\n\r\n        sectionHeaderBackground: \"#272727\",\r\n        sectionBackground: \"#2C2C2C\",\r\n\r\n        goldPrimary: \"#C39445\",\r\n        goldSecondary: \"#655233\",\r\n        goldBackground: \"#CAA65B\",\r\n\r\n        statsFirst: \"#FFFFFF\",\r\n        statsSecond: \"#208C62\",\r\n        statsThird: \"#2090E5\",\r\n        statsFourth: \"#654FA7\",\r\n\r\n        white: \"#FFFFFF\",\r\n        black: \"#1E1E1E\",\r\n        grey: \"#797979\",\r\n        red: \"#A52A2A\",\r\n        silver: \"#C0C0C0\"\r\n    },\r\n\r\n    // general colors\r\n    aqua: \"#00FFF\",\r\n\r\n    black: \"#000000\",\r\n    \r\n    blue: \"#000FF\",\r\n    \r\n    gray: \"#808080\",\r\n\r\n    green: \"#00800\",\r\n    \r\n    magenta: \"#FF00FF\",\r\n    \r\n    purple: \"#800080\",\r\n    \r\n    red: \"#FF0000\",\r\n    \r\n    white: \"#FFFFFF\",\r\n    \r\n    yellow: \"#FFFF00\",\r\n}\r\n\r\nexport default colors","import axios from 'axios'\r\n\r\n// Production\r\nconst API_DOMAIN = 'https://ethereanggapi.azurewebsites.net/api'\r\n//const API_DOMAIN = 'https://localhost:44390/api'\r\n\r\nexport const GET_FAMILIARS = \"GET/familiars\"\r\nexport const GET_ITEMS = \"GET/items\"\r\nexport const GET_MYTHS = \"GET/myths\"\r\n\r\nexport const saveBuild = async (build) => {\r\n    try {\r\n        const response = await axios.post(`${API_DOMAIN}/builds`, build)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const searchBuildsBySlug = async (slug) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/builds?slug=${slug}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getBuildList = async (filter) => {\r\n    try {\r\n        // do something with filter...\r\n        let filterQuery = \"&\"\r\n\r\n        const response = await axios.get(`${API_DOMAIN}/builds?${filterQuery}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMythList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMyth = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getItemList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/items`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getCombatTacticsList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/combat-tactics`)\r\n        return response.data\r\n    } catch(e) { }\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getMythList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildMyths = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [myths, setMyths] = useState([])\r\n  const [roles, setRoles] = useState([])\r\n\r\n  useEffect(() => {\r\n    const retrieveMyths = async () => {\r\n      const mythList = await getMythList()\r\n      setMyths(mythList.sort((a, b) => (a.name > b.name) ? 1 : -1))\r\n    }\r\n\r\n    const retrieveRoles = async () => {\r\n      setRoles([{\r\n        name: 'Ice',\r\n        image: '/images/roles/ice.png'\r\n      },{\r\n        name: 'Jungle',\r\n        image: '/images/roles/jungle.png'\r\n      },{\r\n        name: 'Void',\r\n        image: '/images/roles/void.png'\r\n      },{\r\n        name: 'Fire',\r\n        image: '/images/roles/fire.png'\r\n      },{\r\n        name: 'Support',\r\n        image: '/images/roles/support.png'\r\n      }])\r\n    }\r\n\r\n    retrieveMyths()\r\n    retrieveRoles()\r\n  }, [])  \r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  const saveTitle = (title) => {\r\n    let tempData = data\r\n    tempData.title = title\r\n    \r\n    setData(tempData)\r\n  }\r\n\r\n  const saveMyth = (myth) => {\r\n    let tempData = data\r\n    tempData.data = myth\r\n    tempData.data.image = myth.backgroundURLs[0]\r\n\r\n    tempData.data.abilities.map((_, index) => {\r\n      tempData.data.abilities[index].levels = []\r\n    })\r\n    tempData.data.abilities = [{name: tempData.data.class.className, imageURL: tempData.data.class.imageURL, levels: []}].concat(tempData.data.abilities)\r\n\r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveRole = (role) => {\r\n    let tempData = data\r\n    tempData.role = role\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveBackground = (background) => {\r\n    let tempData = data\r\n    tempData.data.background = background\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={styles.content}>\r\n          <Grid item xs={12}>\r\n            <Typography \r\n              style={styles.label}\r\n              required\r\n            >1. Name your Build</Typography>\r\n            <TextField \r\n              name=\"title\"\r\n              className={ classes.root }\r\n              InputProps={{ className: classes.input }}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              defaultValue={data.title}\r\n              onChange={(e) => { \r\n                  saveTitle(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Typography style={styles.label} xs={12}>2. Select Role</Typography>\r\n            <Grid container>\r\n            { /* TODO: Convert to loop from external source / api */ }\r\n              { roles.map((role, index) =>\r\n                <Grid item xs key={`role-${role.name}`} >\r\n                  <Grid container style={styles.roleContainer} >\r\n                    <Grid item xs={12}>\r\n                      <Button onClick={() => saveRole(role)}>\r\n                        <img style={{ \r\n                            ...styles.roleImage,\r\n                            opacity: data.role?.name === role.name ? 1 : 0.2 \r\n                          }}\r\n                          width={60}\r\n                          height={60}\r\n                          src={`${process.env.PUBLIC_URL}/${role.image}`} \r\n                          alt={`${role.name} role`} />\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography style={styles.roleDescription}>\r\n                        {role.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n                <Grid item xs={6} />\r\n            </Grid>\r\n          </Grid>  \r\n\r\n          <Grid item xs={12}>\r\n            <Typography  style={styles.label} xs={12}>3. Select Myth</Typography>\r\n            <Grid container>\r\n              { myths.map((myth, index) =>\r\n                <Grid item xs\r\n                  key={`myth-${index}`}\r\n                  style={{ textAlign: 'center', paddingBottom: 15 }}>\r\n                  <Button onClick={() => saveMyth(myth)}\r\n                    style={{opacity: data?.data?.name === myth.name ? 1 : 0.5 }}>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 62 62\">\r\n                        <defs>\r\n                          <clipPath id=\"mythClipPath\">\r\n                            <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" />\r\n                          </clipPath>\r\n                        </defs>\r\n                        <image href={myth.backgroundURLs[0]} width={120} height={61} x={-27} y={0} clipPath=\"url(#mythClipPath)\" />\r\n                        <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" stroke={colors.theme.goldPrimary} fill=\"none\" strokeWidth=\"1\" />\r\n                      </svg>\r\n                  </Button>\r\n                  <Typography>\r\n                    {myth.name}\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>  \r\n            <Typography style={styles.label}>4. Select Background</Typography>\r\n            <Grid container>\r\n            { data.data && data.data.backgroundURLs.map((background, index) =>\r\n              <Grid item style={styles.backgroundImageWrapper}\r\n                key={`background-${background}`}>\r\n                <Button onClick={() => saveBackground(background) }\r\n                  style={{opacity: data.data.background === background ? 1 : 0.5}}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"275\" height=\"125\" viewBox=\"0 0 221.999 104\">\r\n                      <clipPath id=\"backgroundClipPath\">\r\n                      <path d=\"M517.123,345.19l-14.742,17.854V447.19H707.638l14.742-17.854V345.19Z\" transform=\"translate(-501.381 -344.19)\"\r\n                        fill=\"none\" stroke={colors.theme.goldPrimary} strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                      </clipPath>\r\n                      <image href={background} width={275} height={125} x={-27} y={0} clipPath=\"url(#backgroundClipPath)\" />\r\n                      <path d=\"M517.123,345.19l-14.742,17.854V447.19H707.638l14.742-17.854V345.19Z\" transform=\"translate(-501.381 -344.19)\"\r\n                        fill=\"none\" stroke={colors.theme.goldPrimary} strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                    </svg>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            </Grid>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildMyths;\r\n\r\nconst styles = {\r\n  content: {\r\n    alignContent: 'center',\r\n    alignItem: 'center'\r\n  },\r\n\r\n  label: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  roleContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  roleImage: {\r\n    \r\n  },\r\n  roleDescription: {\r\n    color: colors.theme.white\r\n  },\r\n  roleUnselected: {\r\n    opacity: 90\r\n  },\r\n\r\n  backgroundImageWrapper: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nexport const SectionHeaderItem = (props) => {\r\n    const {\r\n        image\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${image})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 40,\r\n                    minHeight: 40,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SectionHeaderItem","import React from 'react'\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport SectionHeaderItem from './Builds/SectionHeaderItem'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faArrowsAlt,\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport colors from '../styles/theme'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst CollapsibleItemSection = (props) => {\r\n    const {\r\n      title,\r\n      data,\r\n      sectionIndex,\r\n      sectionId,\r\n      saveTitle,\r\n      deleteSection,\r\n      defaultExpanded\r\n    } = props\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n          padding: 12\r\n        }\r\n      },\r\n      \r\n      input: {\r\n        color: colors.theme.white\r\n      },\r\n    })\r\n  \r\n    const classes = useStyles()\r\n\r\n    return (\r\n      <Grid container\r\n        style={styles.section}\r\n        alignContent='center'\r\n        alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Accordion style={{borderRadius: 5}} \r\n            defaultExpanded={defaultExpanded}>\r\n            <AccordionSummary\r\n              style={styles.summary}\r\n              expandIcon={<ExpandMoreIcon style={{ fill: colors.theme.white }} />} >\r\n              <Grid container\r\n                onClick={(event) => event.stopPropagation()}\r\n                onFocus={(event) => event.stopPropagation()} \r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                <Grid item xs={1}\r\n                  style={{marginRight: -10}}>\r\n                  <FontAwesomeIcon\r\n                    styles={styles.faDragIcon}\r\n                    icon={faArrowsAlt} color=\"white\" size=\"lg\" />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <TextField \r\n                    placeholder=\"Title\"\r\n                    className={ classes.root }\r\n                    InputProps={{\r\n                      className: classes.input\r\n                    }}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    defaultValue={title}\r\n                    onChange={(e) => { \r\n                      saveTitle(sectionIndex, e.target.value)\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Grid container style={styles.sectionHeaderItemsContainer} >\r\n                  { data && data.map((item, index) => \r\n                    <Grid item style={styles.sectionHeaderItem}>\r\n                      <SectionHeaderItem key={`itemheader--${index}`} image={item.imageURL} />\r\n                    </Grid>\r\n                  )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={1}\r\n                  direction=\"row-reverse\">\r\n                    <Button \r\n                        style={styles.deleteSectionButton}\r\n                        onClick={() => deleteSection(sectionId)}>\r\n                      <Grid container\r\n                        direction=\"column\"\r\n                        style={styles.faTrashIcon}>\r\n                        <Grid item>\r\n                          <FontAwesomeIcon\r\n                          styles={styles.faTrashIcon}\r\n                          icon={faTrashAlt} color=\"white\" size=\"lg\" />\r\n                        </Grid>\r\n                        <Grid item\r\n                          style={styles.label}>\r\n                          Delete\r\n                        </Grid>\r\n                      </Grid>\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={styles.details}>\r\n              {props.children}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\nexport default CollapsibleItemSection;\r\n\r\n\r\nconst styles = {\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  deleteSectionButton: {\r\n    margin: 0,\r\n    padding: 0,\r\n    color: colors.theme.white\r\n  },\r\n  sectionHeaderItemsContainer: {\r\n    justifyContent: 'flex-start'\r\n  },\r\n  sectionHeaderItem: {\r\n    paddingLeft: 10\r\n  },\r\n  summary: {\r\n    backgroundColor: colors.theme.sectionHeaderBackground,\r\n\r\n    height: 65\r\n  },\r\n  details: {\r\n    backgroundColor: colors.theme.sectionBackground,\r\n  },\r\n  label: {\r\n    color: colors.theme.white,\r\n    fontSize: \"0.8em\"\r\n  },\r\n  faDragIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  },\r\n  faTrashIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const Item = (props) => {\r\n    const {\r\n        item,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            onClick={() => setData(section, item)}\r\n            style={styles.item}>\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${item.imageURL})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 75,\r\n                    minHeight: 75,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n            </Grid>\r\n            <Grid container style={{ textAlign: 'center' }}>\r\n                <Grid item xs />\r\n                <Grid item xs={2}>\r\n                    <img src={`${process.env.PUBLIC_URL}/images/currency_gold.png`} width={10} height={10} alt=\"currency - gold\" />\r\n                </Grid>\r\n                <Grid item xs={5} style={styles.itemCost}>\r\n                    <Typography>\r\n                        {item.cost}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs />\r\n            </Grid>\r\n            <Grid item xs\r\n                style={styles.itemName}>\r\n                {item.name}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\nconst styles = {\r\n    item: {\r\n        cursor: \"pointer\"\r\n    },\r\n    itemName: {\r\n        color: colors.theme.white,\r\n        textAlign: 'center',\r\n        fontSize: 12\r\n    },\r\n    itemCost: {\r\n        background: `1px solid ${colors.theme.goldBackground}`,\r\n\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Item from '../components/Builds/Item'\r\n\r\nimport {\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faFilter\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst ItemList = (props) => {\r\n    const {\r\n        items,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    const [filteredItems, setFilteredItems] = useState(items)\r\n\r\n    useEffect(() => {\r\n        setFilteredItems(props.items)\r\n    }, [props.items])\r\n\r\n    const toggleFilter = () => {\r\n        \r\n    }\r\n\r\n    const filterItems = (filter) => {\r\n        if(filter && filter.length > 0) {\r\n            const filteredList = items.filter(i => i.name.toUpperCase().includes(filter.toUpperCase()))\r\n            setFilteredItems(filteredList)\r\n        } else {\r\n            setFilteredItems(items)\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-input\": {\r\n            padding: 12\r\n          }\r\n        },\r\n        \r\n        input: {\r\n          color: colors.theme.white\r\n        },\r\n      })\r\n    \r\n      const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container\r\n            alignContent='center'\r\n            alignItems='center'\r\n            style={styles.section}>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={6}>\r\n                <Grid container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    alignContent=\"center\">\r\n                    <Grid item xs={10}>\r\n                        <TextField \r\n                            style={styles.searchField}\r\n                            className={ classes.root }\r\n                            InputProps={{ className: classes.input }}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Search Items\"\r\n                            onChange={(e) => filterItems(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={1} />\r\n                    <Grid item xs={1}\r\n                        style={styles.itemFilter}>\r\n                        <Grid container\r\n                            justify=\"center\"\r\n                            alignContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"column\">\r\n                            <Grid item>\r\n                                <FontAwesomeIcon icon={faFilter} color=\"white\" \r\n                                    onClick={toggleFilter} />\r\n                            </Grid>\r\n                            <Grid item\r\n                                style={styles.label}>\r\n                                Filter\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container \r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"flex-begin\"\r\n                style={styles.scrollableList}>\r\n                { filteredItems && filteredItems.map((item, index) => \r\n                    <Grid item\r\n                        style={styles.item}>\r\n                            <Item key={`item-${index}`} section={section} item={item} setData={setData} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    section: {\r\n        color: colors.theme.white\r\n    },\r\n    label: {\r\n        color: colors.theme.white,\r\n        fontSize: \"0.8em\"\r\n    },\r\n    scrollableList: {\r\n        maxHeight: 400,\r\n        overflow: \"auto\",\r\n\r\n        marginTop: 20,\r\n        marginRight: 15\r\n    },\r\n    itemList: {\r\n        margin: 15,\r\n        width: \"100%\",\r\n\r\n        backgroundColor: colors.theme.sectionBackground\r\n    },\r\n    item: {\r\n        backgroundColor: colors.theme.black,\r\n        padding: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        margin: 10,\r\n        width: 100,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    searchField: {\r\n        marginTop: 10\r\n    },\r\n\r\n    itemFilter: {\r\n        opacity: 0.2,\r\n        cursor: \"not-allowed\"\r\n    }\r\n} \r\n\r\nexport default ItemList","import React, { useEffect, useState } from 'react';\r\n\r\nimport CollapsibleItemSection from '../../../components/CollapsibleItemSection'\r\nimport ItemList from '../../../components/ItemList'\r\nimport Item from '../../../components/Builds/Item'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getItemList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildItems = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [itemList, setItemList] = useState([])\r\n\r\n  const addSection = () => {\r\n    let tempSections = data\r\n    const id = Math.max(...tempSections.map(s => s.id), 0);\r\n    \r\n    tempSections = tempSections.concat({ id: id+1, order: id+1, build: []})\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  \r\n  const deleteSection = (sectionId) => {\r\n    let tempSections = data\r\n    tempSections = data.filter(s => s.id !== sectionId)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const addItem = (index, item) => {\r\n    let tempSections = data\r\n\r\n    const hasBoots = tempSections[index].build.some(b => b.name.endsWith('Boots')) || item.name.endsWith('Boots');\r\n\r\n    if(tempSections[index].build.length >= (hasBoots ? 7 : 6)) { return }\r\n    if(tempSections[index].build.filter(i => i.name === item.name).length > 0) { return }\r\n\r\n    tempSections[index].build.push(item)\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const removeItem = (index, item) => {\r\n    let tempSections = data\r\n    tempSections[index].build = tempSections[index].build.filter(i => i.name !== item.name)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveTitle = (index, title) => {\r\n    let tempSections = data\r\n\r\n    tempSections[index].title = title\r\n\r\n    setData(tempSections)\r\n  }\r\n\r\n  const saveNotes = (index, notes) => {\r\n    let tempSections = data\r\n    tempSections[index].notes = notes\r\n\r\n    setData(tempSections)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const retrieveItemList = async () => {\r\n      setItemList(await getItemList())\r\n    }\r\n\r\n    retrieveItemList()\r\n  }, [])\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n      { data.map((section, sIndex) => \r\n        <CollapsibleItemSection \r\n          key={`sections-items-${section.id}`}\r\n          style={styles.section}\r\n          sectionIndex={sIndex}\r\n          sectionId={section.id}\r\n          title={section.title}\r\n          defaultExpanded={data.length === 1}\r\n          data={section.build}\r\n          saveTitle={saveTitle}\r\n          deleteSection={deleteSection}>\r\n            <Grid container>\r\n              { section.build.map((item, iIndex) => \r\n                <Grid item xs={1} style={styles.selectedItem}>\r\n                  <Item\r\n                    key={`itemsection-${sIndex}-item-${iIndex}`}\r\n                    section={sIndex} \r\n                    item={item} \r\n                    setData={removeItem} />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs />\r\n              <Grid item xs={12}>\r\n                <ItemList key={`item-list-${sIndex}`} items={itemList} section={sIndex} build={section.build} setData={addItem} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField multiline rows={6} \r\n                  variant=\"outlined\"\r\n                  style={styles.notes} \r\n                  className={ classes.root }\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                  placeholder=\"Notes...\"\r\n                  defaultValue={section.notes}\r\n                  onChange={(e) => { \r\n                    saveNotes(sIndex, e.target.value)\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n        </CollapsibleItemSection>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildItems;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  buttonAddSection: {\r\n    backgroundColor: colors.theme.goldPrimary,\r\n    fontSize: \"0.7em\",\r\n    marginTop: 10,\r\n    marginBottom: 15\r\n  },\r\n\r\n  selectedItem: {\r\n    marginRight: 20,\r\n    color: colors.theme.white\r\n  },\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const DynamicAbility = (props) => {\r\n    const {\r\n        ability,\r\n        abilityIndex,\r\n        maxLevel,\r\n        selectLevel,\r\n        helperText = false\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={1}>\r\n                <img style={styles.image}\r\n                    src={ability.imageURL}\r\n                    alt={`ability ${ability.name}`} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Typography style={styles.name}>\r\n                            {ability.type} - {ability.name} \r\n                            { helperText ? ` (max: ${maxLevel})` : '' }\r\n                            { helperText\r\n                                ? ability.type === 'Special Ability' ? ' Unlocked at 1, 9, 17'\r\n                                : ability.type === 'Ultimate' ? ' Unlocked at 5, 13, 20'\r\n                                : ''\r\n                                : ''\r\n                            }\r\n                        </Typography>\r\n                    </Grid>\r\n                    { ability && [...Array(maxAbilityLevel)].map((_, index) =>\r\n                        <Button disabled = {ability.type === 'Special Ability' && index === 0}\r\n                            style={ (ability.type === \"Special Ability\" && index === 0) \r\n                                ? styles.specialAbilityLevelOne  \r\n                                : ability.levels.includes(index+1) \r\n                                    ? styles.levelSelected \r\n                                    : styles.levelDefault}\r\n                            onClick={() => \r\n                                selectLevel(abilityIndex, index+1, !ability.levels.includes(index+1))\r\n                            }\r\n                            key={`ability-${ability.name}-${index}-${ability.levels.includes(index+1)}`}>\r\n                            {index+1}\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DynamicAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    specialAbilityLevelOne: {\r\n        backgroundColor: colors.theme.silver,\r\n        color: colors.theme.black,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n    levelDefault: {\r\n        backgroundColor: colors.theme.black,\r\n        color: colors.theme.white,\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n    levelSelected: {\r\n        backgroundColor: colors.theme.goldPrimary,\r\n        color: colors.theme.black,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    }\r\n}","import React, { useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const SelectedStat = (props) => {\r\n    const {\r\n        stat,\r\n        removeStat\r\n    } = props\r\n\r\n    const [isHovering, setIsHovering] = useState(false)\r\n\r\n    return (\r\n        <Grid container style={styles.container}\r\n            onMouseEnter={() => {if(removeStat) setIsHovering(true)}}\r\n            onMouseLeave={() => {if(removeStat) setIsHovering(false)}}>\r\n            <Button style={{...styles.removeStat, cursor: removeStat ? 'pointer' : 'default'}}\r\n                onClick={removeStat}>\r\n                <div style={{\r\n                        display: isHovering ? 'block' : 'none', \r\n                        position: 'absolute', width: '100%', height: '100%', zIndex: 999, backgroundColor: `${colors.theme.red}33`\r\n                    }}>\r\n                    <FontAwesomeIcon icon={faTrashAlt} color=\"white\" size=\"lg\" style={{marginTop: 15}} />\r\n                </div>\r\n                <Grid item xs={2} style={{\r\n                        opacity: isHovering ? 0.2 : 1,\r\n                        ...styles.statCost, \r\n                        backgroundColor: stat.color,\r\n                        color: stat.cost === 4 ? colors.theme.white : colors.theme.black\r\n                    }}>\r\n                    <Typography>\r\n                        {stat.points}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs style={{ opacity: isHovering ? 0.2 : 1 }}>\r\n                    <Typography style={styles.statName}>\r\n                        {stat.name}\r\n                    </Typography>\r\n                </Grid>\r\n            </Button>\r\n        </Grid>\r\n    )\r\n} \r\n\r\nexport default SelectedStat\r\n\r\nconst styles = {\r\n    container: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n\r\n    statName: {\r\n        color: colors.theme.goldPrimary,\r\n        paddingLeft: 10,\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    statCost: {\r\n        textAlign: 'center',\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        borderRadius: 7,\r\n        width: 15,\r\n        margin: 2,\r\n        marginLeft: 10\r\n    },\r\n\r\n    removeStat: {\r\n        width: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        minHeight: 50\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const StaticAbility = (props) => {\r\n    const {\r\n        ability\r\n    } = props\r\n\r\n    // TODO: Implement Hover details?\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Grid item xs={2}>\r\n                        <img style={styles.image}\r\n                            src={ability.imageURL} \r\n                            alt={`ability ${ability.name}`} />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.name}>\r\n                                    {ability.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.slot}>\r\n                                    {ability.slot}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StaticAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    name: {\r\n        fontSize: 15,\r\n        color: colors.theme.white\r\n    },\r\n    slot: {\r\n        fontSize: 10,\r\n        color: colors.theme.white\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const StatPicker = (props) => {\r\n    const {\r\n        name,\r\n        isPrimary,\r\n        remainingPoints,\r\n        addStat\r\n    } = props\r\n\r\n    const [splitCosts, setSplitCosts] = useState([])\r\n    const [splitColors, setSplitColors] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(isPrimary) {\r\n            setSplitCosts(statCosts.splice(0, 3))\r\n            setSplitColors(statColors.splice(0, 3))\r\n        } else {\r\n            setSplitCosts(statCosts.splice(1, 3))\r\n            setSplitColors(statColors.splice(1, 3))\r\n        }\r\n    }, [])\r\n\r\n    const statPoints = [1, 4, 10]\r\n    const statCosts = [1, 2, 3, 4]\r\n    const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n\r\n    return (\r\n        <>\r\n        { name &&\r\n        <Grid container style={styles.pickerRow}>\r\n            <Grid item xs={6}>\r\n                <Typography style={styles.label}>\r\n                    {name}\r\n                </Typography>\r\n            </Grid>\r\n            { statPoints.map((points, index) => \r\n            <Grid item xs={2} style={{border: `1px solid ${splitColors[index]}`, opacity: remainingPoints >= splitCosts[index] ? 1 : 0.3 }}>\r\n                <Button\r\n                    disabled={remainingPoints - splitCosts[index] < 0}\r\n                    onClick={() => addStat({\r\n                        name: name, \r\n                        points: points, \r\n                        cost: splitCosts[index],\r\n                        color: splitColors[index],\r\n                        isPrimary: isPrimary\r\n                    })}>\r\n                    <Typography\r\n                        style={{color: splitColors[index]}}>\r\n                        + {points}\r\n                    </Typography>\r\n                </Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatPicker\r\n\r\nconst styles = {\r\n    label: {\r\n      color: colors.theme.white\r\n    },\r\n    pickerRow: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        alignItems: 'center',\r\n        \r\n        paddingLeft: 15,\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    }\r\n  }","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  SelectedStat,\r\n  StatPicker\r\n} from '../../../components/Builds'\r\n\r\nconst FragmentBuildLoadout = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n  \r\n  const [combatTactics, setCombatTactics] = useState([])\r\n  const [count, setCount] = useState(0)\r\n\r\n  const statCosts = [1, 2, 3, 4]\r\n  const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n  \r\n  useEffect(() => {\r\n    const retrieveCombatTactics = async (id) => {\r\n      //setCombatTactics(await getCombatTacticsList())\r\n      setCombatTactics([{\r\n          name: 'Assault',\r\n          stats: ['Attack Speed', 'Life Steal', 'Penetration']\r\n        },{\r\n          name: 'Demolition',\r\n          stats: ['Crtical Chance', 'Critical Damage', 'Mythical Damage']\r\n        },{\r\n          name: 'Protect',\r\n          stats: ['Armor', 'Defensive Power', 'Magic Resist']\r\n        },{\r\n          name: 'Reinforcement',\r\n          stats: ['Health per 5', 'Mana per 5', 'Persistence']\r\n        }\r\n      ])\r\n    }\r\n\r\n    retrieveCombatTactics()\r\n  }, [])\r\n\r\n  const handleSelectedTactic = (event) => {\r\n    let tempData = data\r\n    tempData.remainingPoints = 8\r\n    tempData.selectedStats = []\r\n    tempData.primaryTactic = event.target.value\r\n    tempData.secondaryTactic = 0\r\n\r\n    let statList = []\r\n    combatTactics.map((tactic, index) => {\r\n      if(index !== event.target.value) {\r\n        tactic.stats.map((stat) => {\r\n          statList.push({\r\n            tactic: tactic.name,\r\n            stat: stat\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    tempData.secondaryStatList = statList\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const handleSelectedSecondary = (event) => {\r\n    let tempData = data\r\n    tempData.selectedStats = tempData.selectedStats.filter(stat => stat.isPrimary)\r\n    tempData.secondaryTactic = event.target.value\r\n    \r\n    tempData.remainingPoints = 8\r\n    tempData.selectedStats.map((stat) => {\r\n      tempData.remainingPoints = tempData.remainingPoints - stat.cost\r\n    })\r\n    \r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const addStat = (stat) => {\r\n    let tempData = data\r\n    tempData.remainingPoints = tempData.remainingPoints - stat.cost\r\n\r\n    tempData.selectedStats.push({\r\n      ...stat\r\n    })\r\n    \r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const removeStatAt = (index) => {\r\n    let tempData = data\r\n\r\n    const stat = tempData.selectedStats[index]\r\n    tempData.selectedStats.splice(index, 1)\r\n    tempData.remainingPoints = tempData.remainingPoints + stat.cost\r\n    \r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    selectDropdown: {\r\n      border: `1px solid ${colors.theme.white}`,\r\n      color: colors.theme.white,\r\n      width: '100%',\r\n\r\n      \".MuiSvgIcon-root .MuiSelect-icon\": {\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n\r\n    menuItem: {\r\n     marginLeft: 10 \r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Grid container style={{alignItems: 'center', alignContent: 'center' }}>\r\n            <Grid item xs={7} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>Selected Combat Stats</Typography>\r\n            </Grid>\r\n            <Typography style={styles.label}>Stat Costs:</Typography>\r\n            { statCosts.map((cost, index) => \r\n                  <Typography style={{\r\n                      ...styles.statCosts,\r\n                      backgroundColor: statColors[index], \r\n                      color: index < 3 ? colors.theme.black : colors.theme.white\r\n                    }}>{cost}</Typography>\r\n            )}\r\n            <Grid item xs={2}>\r\n              <Typography style={{...styles.label, textAlign: \"right\"}}>Remaining Points:</Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography style={styles.remainingPoints}>{data.remainingPoints}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container style={styles.statContainer}>\r\n              { data.selectedStats.map((stat, index) => \r\n              <Grid item xs={3} style={styles.selectedStat}>\r\n                <SelectedStat stat={stat} removeStat={() => removeStatAt(index)} />\r\n              </Grid>\r\n              )}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Primary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    value={data.primaryTactic}\r\n                    onChange={handleSelectedTactic}\r\n                    className={ classes.selectDropdown } \r\n                    inputProps={{ className:classes.menuItem }}>\r\n                      { !(data.primaryTactic >= 0) &&\r\n                      <MenuItem \r\n                        className={classes.menuItem}\r\n                        value={-1}>Pick Primary Tactic</MenuItem>\r\n                      }\r\n                    { combatTactics && combatTactics.map((tactic, index) =>\r\n                      <MenuItem className={classes.menuItem}\r\n                        value={index}>{tactic.name}</MenuItem>\r\n                    )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    { combatTactics[data.primaryTactic] && combatTactics[data.primaryTactic].stats.map((stat, index) => \r\n                      <Grid item xs={12}>\r\n                        <StatPicker isPrimary={true} \r\n                          remainingPoints={data.remainingPoints}\r\n                          name={stat} \r\n                          addStat={addStat} />\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Secondary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    disabled={data.primaryTactic === -1}\r\n                    width={1}\r\n                    value={data.secondaryTactic}\r\n                    onChange={handleSelectedSecondary}\r\n                    className={ classes.selectDropdown }\r\n                    inputProps={{ className:classes.menuItem }}\r\n                    >\r\n                      { data.primaryTactic === -1 &&\r\n                      <MenuItem />\r\n                      }\r\n                      { data.secondaryStatList && data.secondaryStatList.map((stat, index) =>\r\n                      <MenuItem value={index}>{`[${stat.tactic}] ${stat.stat}`}</MenuItem>\r\n                      )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      { data.secondaryTactic >= 0 &&\r\n                      <StatPicker isPrimary={false} \r\n                        name={data.secondaryStatList[data.secondaryTactic].stat} \r\n                        remainingPoints={data.remainingPoints}\r\n                        addStat={addStat} />\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} style={styles.disclaimer}>\r\n              <Typography>\r\n                The stats above are Etherean.GG's best guess at what to expect in the loadout system. <br />\r\n                These are subject to change when ECOS releases.\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        { /* \r\n        <Grid item xs={12} style={styles.familiarContainer}>\r\n          <Grid container>\r\n            <Grid item xs={12} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>2. Select Familiar</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container>\r\n                <Grid item xs={1} style={{ \r\n                    background: \"no-repeat center/150% url('https://undyinggames.com/assets/Images/News/FamiliarCard.png')\", \r\n                    border: `1px solid ${colors.theme.goldPrimary}`,\r\n                    marginTop: 10,\r\n                    height: 150, \r\n                    width: 250 }}>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        */ }\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildLoadout;\r\n\r\nconst styles = {\r\n  disclaimer: {\r\n    textAlign: 'center',\r\n    marginTop: 20\r\n  },\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  label: {\r\n    font: 10,\r\n    color: colors.theme.white,\r\n    marginRight: 2\r\n  },\r\n\r\n  tacticOption: {\r\n    paddingLeft: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  familiarContainer: {\r\n    marginTop: 25\r\n  },\r\n\r\n  remainingPoints: {\r\n    background: colors.theme.goldPrimary,\r\n    color: colors.theme.black,\r\n    \r\n    width: 25,\r\n    marginLeft: 10,\r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n    border: 1,\r\n    borderRadius: 3,\r\n    borderColor: colors.white\r\n  }, \r\n  statCosts: {\r\n    border: `1px solid ${colors.theme.goldBackground}`,\r\n    borderRadius: 5,\r\n    width: 20, \r\n    margin: 5, \r\n    marginRight: 2, \r\n    \r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  statContainer: {\r\n    minHeight: 175,\r\n    marginTop: 15,\r\n    marginBottom: 25\r\n  },\r\n  selectedStat: {\r\n    height: 75,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    paddingLeft: 10,\r\n    paddingRight: 10\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  DynamicAbility,\r\n  StaticAbility\r\n} from '../../../components/Builds'\r\n\r\nconst FragmentBuildAbilities = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  // Hacking a state change :(\r\n  const [count, setCount] = useState(0)\r\n\r\n  const selectLevel = (abilityIndex, level, selected) => {\r\n    let tempData = data\r\n    tempData.data.map((_, index) => {\r\n      tempData.data[index].levels = tempData.data[index].levels.filter(i => i !== level)\r\n    })\r\n\r\n    if(selected) {\r\n      tempData.data[abilityIndex].levels.push(level)\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveNotes = (notes) => {\r\n    let tempData = data;\r\n    tempData.notes = notes;\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              { data.data && data.data[2] && \r\n              <StaticAbility ability={data.data[2]} />\r\n              }\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              { data.data &&\r\n              <StaticAbility ability={data.data[0]} />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            { data.data && data.data.slice(3, 8).map((ability, index) =>\r\n              <Grid item xs={12} style={styles.dynamicAbilities}\r\n                  key={`ability-${index}`}>\r\n                  <DynamicAbility ability={ability} abilityIndex={index+3} maxLevel={index === 0 || index === 4 ? 3 : 5} selectLevel={selectLevel} helperText={true} />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField multiline rows={6} \r\n              variant=\"outlined\"\r\n              style={styles.notes} \r\n              className={ classes.root }\r\n              InputProps={{\r\n                className: classes.input\r\n              }}\r\n              placeholder=\"Notes...\"\r\n              defaultValue={data?.notes}\r\n              onChange={(e) => { \r\n                saveNotes(e.target.value)\r\n              }} />\r\n          </Grid>\r\n        </Grid> \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildAbilities;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  dynamicAbilities: {\r\n    marginTop: 35,\r\n    marginBottom: 10\r\n  },\r\n\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildPairings = () => {\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'\r\n      style={{minHeight:400, alignContent: 'start'}}>\r\n        <Grid item xs={12}>\r\n          <h3 style={styles.header}>Coming Soon<sup style={{fontSize:10}}>TM</sup></h3>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildPairings;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport Item from '../components/Builds/Item'\r\nimport SelectedStat from '../components/Builds/SelectedStat'\r\n\r\nimport {\r\n    StaticAbility\r\n} from '../components/Builds/StaticAbility'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst BuildView = (props) => {\r\n    const {\r\n        data,\r\n        editAction\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n    const createdOn = new Date()\r\n    const monthNames = [\"JANUARY\", \"FEBRUARY\", \"MARCH\", \"APRIL\", \"MAY\", \"JUNE\", \"JULY\", \"AUGUST\", \"SEPTEMBER\", \"OCTOBER\", \"NOVEMBER\", \"DECEMBER\"]\r\n\r\n    return (\r\n    <Grid container style={styles.rootContainer}>\r\n        <Grid item xs={12}>\r\n            <Typography>{data.myth.data.name.toUpperCase()} BUILD GUIDE {/* BY {data.author} */}</Typography>\r\n        </Grid>\r\n        <Grid container style={{ \r\n            minHeight: 250,\r\n            backgroundImage: `url(${data.myth.data.background})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover' }}>\r\n            <Grid container style={{ alignContent: 'center', alignItems: 'center', marginLeft: 10}}>\r\n                <Grid item xs={1} >\r\n                    <Avatar variant=\"square\"\r\n                        src={`${process.env.PUBLIC_URL}/${data.myth.role.image}`} />\r\n                </Grid>\r\n                <Grid item xs={11}>\r\n                    <h2>{data.myth.title}</h2>\r\n                </Grid>\r\n                <Grid item xs={1} />\r\n                <Grid item xs={11}>\r\n                    <Typography>\r\n                        CREATED ON {monthNames[createdOn.getMonth()]} {createdOn.getDate()}, {createdOn.getFullYear()}\r\n                    </Typography>\r\n                </Grid>\r\n                { editAction &&\r\n                <Grid item xs={12}>\r\n                    <Grid container style={styles.buttons}>\r\n                        <Grid item xs={1} />\r\n                        <Grid item xs>\r\n                            <Button style={styles.buttons.edit} onClick={editAction}>\r\n                                {'< EDIT'}\r\n                            </Button>\r\n                        </Grid>\r\n                        { /*\r\n                        <Grid item xs>\r\n                            <Button style={styles.buttons.publish}>\r\n                                {'PUBLISH >'}\r\n                            </Button>\r\n                        </Grid>\r\n                        */ }\r\n                        <Grid item xs={8}>\r\n                            \r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                }\r\n            </Grid>\r\n        </Grid>\r\n        \r\n        <h2 style={styles.headerTitle}>ITEMS</h2>\r\n        <Grid item xs={12}>\r\n            { data.items.map((section, index) => \r\n                <Grid container>\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <h2 style={styles.items.title}>{section.title}</h2>\r\n                        </Grid>\r\n                        { section.build.map((item, itemIndex) => \r\n                            <Grid item xs={1}>\r\n                                <Item item={item} />\r\n                            </Grid>\r\n                        )}\r\n                    </Grid>\r\n                    <Grid container style={styles.items.notes}>\r\n                        <Grid item xs={12}>\r\n                            <Typography>{section.notes}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <h2 style={styles.headerTitle}>LOADOUT</h2>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <h2>Combat Stats</h2>\r\n        </Grid>\r\n        <Grid container style={styles.statContainer}>\r\n            { data.loadout.selectedStats.map((stat, _) => \r\n            <Grid item xs={3} style={styles.loadout.selectedStat}>\r\n                <SelectedStat stat={stat} />\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n\r\n        <h2 style={styles.headerTitle}>ABILITY ORDER</h2>\r\n        <Grid item xs={12}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <StaticAbility ability={data.abilities.data[2]} />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <StaticAbility ability={data.abilities.data[0]} />\r\n                </Grid>\r\n            </Grid>\r\n            { data.abilities.data.slice(3, 8).map((ability, abilityIndex) => \r\n                <Grid container style={styles.abilities.dynamicAbilities}>\r\n                    <Grid item xs={1}>\r\n                        <img style={styles.abilities.image}\r\n                            src={ability.imageURL}\r\n                            alt={`ability ${ability.name}`} />\r\n                    </Grid>\r\n                    <Grid item xs={11}>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.name}>\r\n                                    {ability.type} - {ability.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            { [...Array(maxAbilityLevel)].map((_, levelIndex) => \r\n                                <Button style={ (ability.type === \"Special Ability\" && levelIndex === 0) || ability.levels.includes(levelIndex+1) \r\n                                        ? styles.abilities.levelSelected \r\n                                        : styles.abilities.levelDefault\r\n                                }\r\n                                    disabled={true}\r\n                                    key={`ability-${ability.name}-${levelIndex}-${ability.levels.includes(levelIndex+1)}`}>\r\n                                    {levelIndex+1}\r\n                                </Button>\r\n                            )}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n            <Grid container style={styles.abilities.notes}>\r\n                <Grid item>\r\n                    {data.abilities.notes}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    </Grid>\r\n    )\r\n}\r\n\r\nexport default BuildView\r\n\r\nconst styles = {\r\n    rootContainer: {\r\n        color: colors.theme.white\r\n    },\r\n    headerTitle: {\r\n        color: colors.theme.goldPrimary,\r\n    },\r\n\r\n    buttons: {\r\n        marginTop: 15,\r\n        edit: {\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            color: colors.theme.goldPrimary\r\n        },\r\n        publish: {\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            backgroundColor: colors.theme.goldPrimary\r\n        }\r\n    },\r\n\r\n    items: {\r\n        title: {\r\n            marginTop: 0\r\n        },\r\n        notes: {\r\n            marginTop: 15,\r\n            marginBottom: 15\r\n        }\r\n    },\r\n\r\n    loadout: {\r\n        selectedStat: {\r\n            height: 75,\r\n            marginTop: 5,\r\n            marginBottom: 5,\r\n            paddingRight: 10\r\n          }\r\n    },\r\n\r\n    abilities: {\r\n        dynamicAbilities: {\r\n            marginTop: 15\r\n        },\r\n        image: {\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            height: 75,\r\n            width: 75\r\n        },\r\n        levelDefault: {\r\n            backgroundColor: colors.theme.black,\r\n            color: colors.theme.white,\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        },\r\n        levelSelected: {\r\n            backgroundColor: colors.theme.goldPrimary,\r\n            color: colors.theme.black,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        },\r\n        notes: {\r\n            marginTop: 15\r\n        }\r\n    },\r\n\r\n    pairings: {\r\n\r\n    }\r\n}","import React, { useState } from 'react';\r\n\r\nimport BuildView from '../../../components/BuildView'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport { saveBuild } from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildReview = (props) => {\r\n  const {\r\n    data,\r\n    editAction\r\n  } = props\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(false)\r\n\r\n  console.log(data)\r\n\r\n  const save = async () => {\r\n    setButtonDisabled(false) // true\r\n    const response = await saveBuild(data)\r\n\r\n    console.log(response)\r\n  }\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <h2 style={styles.previewBuildHeader}>\r\n            Preview Build\r\n          </h2>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BuildView data={data} editAction={editAction} />\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildReview;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  saveButton: {\r\n    backgroundColor: colors.theme.goldBackground\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport FragmentBuildMyths from './fragments/Myths'\r\nimport FragmentBuildItems from './fragments/Items'\r\nimport FragmentBuildLoadout from './fragments/Loadout'\r\nimport FragmentBuildAbilities from './fragments/Abilities'\r\nimport FragmentBuildPairings from './fragments/Pairings'\r\nimport FragmentBuildReview from './fragments/Review'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nconst CreateBuild = () => {\r\n  document.title = \"Etherean.gg - Create Build\"\r\n  \r\n  const steps = {\r\n    // reorder as needed\r\n    myth: 1,\r\n    items: 2,\r\n    loadout: 3,\r\n    abilities: 4,\r\n    pairings: 5,\r\n    review: 6\r\n  }\r\n\r\n  const [step, setStep] = useState(steps.myth)\r\n  const [errors, setErrors] = useState([])\r\n  \r\n  const [myth, setMyth] = useState({})\r\n  const [items, setItems] = useState([{ id: 0, order: 0, build: [] }])\r\n  const [loadout, setLoadout] = useState({ remainingPoints: 8, selectedStats: [], primaryTactic: -1, secondaryTactic: -1, secondaryStatList: [] })\r\n  const [abilities, setAbilities] = useState()\r\n  const [pairings, setPairings] = useState({})\r\n\r\n  const [count, setCount] = useState(0)\r\n\r\n  const moveStep = (direction) => { \r\n    if(direction > 0) {\r\n      const tempErrors = listErrors()\r\n\r\n      if(tempErrors.length > 0 ) {\r\n        return\r\n      }\r\n    }\r\n\r\n    setStep(step + direction) \r\n  }\r\n\r\n  const getStep = () => {\r\n    switch(step) {\r\n      // pass up state\r\n      case steps.myth: return <FragmentBuildMyths data={myth} setData={setMyth} />\r\n      case steps.items: return <FragmentBuildItems data={items} setData={setItems} />\r\n      case steps.loadout: return <FragmentBuildLoadout data={loadout} setData={setLoadout} />\r\n      case steps.abilities: return <FragmentBuildAbilities data={{ data: myth.data?.abilities, notes: '' }} setData={setAbilities} />\r\n      case steps.pairings: return <FragmentBuildPairings data={pairings} setData={setPairings} />\r\n      case steps.review: return <FragmentBuildReview data={{myth, items, loadout, abilities, pairings}} editAction={() => setStep(1)} />\r\n    }\r\n  }\r\n\r\n  const listErrors = () => {\r\n    let tempErrors = []\r\n\r\n    if(step === steps.myth) {\r\n      if(!myth.title) {\r\n        tempErrors.push({ field: 'title', message: 'You have not provided a title' })\r\n      } else if(myth.title.length < 5) {\r\n        tempErrors.push({ field: 'title', message: 'The title of the build should be 5 or more characters' })\r\n      }\r\n\r\n      if(!myth.role?.name) {\r\n        tempErrors.push({ field: 'role', message: 'You have not selected a role' })\r\n      }\r\n\r\n      if(!myth.data?.name) {\r\n        tempErrors.push({ field: 'myth', message: 'You have not selected a myth' })\r\n      }\r\n\r\n      if(!myth.data?.background) {\r\n        tempErrors.push({ field: 'background', message: 'You have not selected a background' })\r\n      }\r\n    }    \r\n\r\n    if(step === steps.items) {\r\n      items.map((section, index) => {\r\n        if(!section.title) {\r\n          tempErrors.push({ field: `section-${index}`, message: `Item section #${index+1} needs a title` })\r\n        } else if (section.title.length < 5) {\r\n          tempErrors.push({ field: `section-${index}`, message: `Item section titled \"${section.title}\" (#${index+1}) needs a title with at least 5 characters` })\r\n        }\r\n\r\n        if(section.build.length === 0) {\r\n          if(!section.title) {\r\n            tempErrors.push({ field: `section-${index}`, message: `Item Section #${index+1} has no items` })\r\n          } else {\r\n            tempErrors.push({ field: `section-${index}`, message: `Item Section titled \"${section.title}\" (#${index+1}) has no items` })\r\n          }\r\n        }\r\n      })\r\n    }\r\n\r\n    if(step === steps.abilities) {\r\n      if(!abilities) {\r\n        tempErrors.push({ field: 'abilities', message: 'You have not selected all of your abilities'})\r\n      } else {\r\n        let abilityLevels = 0\r\n        abilities.data.map((ability, _) => {\r\n          abilityLevels += ability?.levels?.length ?? 0\r\n        })\r\n\r\n        if(abilityLevels < 20) {\r\n          tempErrors.push({ field: 'abilities', message: 'You have not selected all of your abilities'})\r\n        }\r\n      }\r\n    }\r\n\r\n    if(step === steps.loadout) {\r\n      if(loadout.remainingPoints > 0) {\r\n        tempErrors.push({ field: 'loadout', message: 'You have not used all of your tactic points'})\r\n      }\r\n    }\r\n\r\n    if(step === steps.pairings) {\r\n\r\n    }\r\n\r\n    setErrors(tempErrors)\r\n    setCount(count+1)\r\n    return tempErrors\r\n  }\r\n\r\n  // TODO: Can this be cleaned up with an array?\r\n  return (\r\n    <Grid container \r\n      style={styles.createContent}\r\n      alignContent='center'\r\n      alignItems='center'>\r\n        { step !== steps.review && \r\n          <Grid item xs style={styles.buildContent}>\r\n            <h3 style={styles.header}>Create a build</h3>\r\n            <div>\r\n              <Grid container style={styles.steps}>\r\n                <Grid item xs /* onClick={() => setStep(steps.myth)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={ \r\n                      step === steps.myth ? styles.stepNumberCurrent :\r\n                      styles.stepNumberBehind\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.myth ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">1</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Start your build\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.items)} */>\r\n                  <Grid container>\r\n                  <Grid item xs={12} style={\r\n                      step === steps.items ? styles.stepNumberCurrent\r\n                        : step > steps.items ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.items ? colors.theme.white : colors.theme.goldPrimary}} x=\"33\" y=\"40\">2</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Select Items\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.loadout)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={\r\n                      step === steps.loadout ? styles.stepNumberCurrent\r\n                        : step > steps.loadout ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.loadout ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">3</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Select Loadout & Familiar\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.abilities)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={\r\n                      step === steps.abilities ? styles.stepNumberCurrent\r\n                        : step > steps.abilities ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.abilities ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">4</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Ability Level Up\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs /* onClick={() => setStep(steps.pairings)} */ >\r\n                  <Grid container>\r\n                    <Grid item xs={12}style={\r\n                      step === steps.pairings ? styles.stepNumberCurrent\r\n                        : step > steps.pairings ? styles.stepNumberBehind\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.pairings ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">5</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Threats & Synergies\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs>\r\n                  <Grid container>\r\n                    <Grid item xs={12} style={\r\n                      step === steps.review ? styles.stepNumberCurrent\r\n                        : styles.stepNumberAhead\r\n                    }>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                        <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                          <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"2\"/>\r\n                          <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" strokeMiterlimit=\"10\" strokeWidth=\"1\"/>\r\n                        </g>\r\n                        <text style={{font: 15, fill: step >= steps.review ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">6</text>\r\n                      </svg>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      Preview & Publish\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n        }\r\n        <Grid container>\r\n          <Grid item xs>\r\n            { errors.length > 0 && \r\n              <>\r\n                <Typography>There are one or more errors on this page, please correct the following:</Typography>\r\n                { errors.map((error, _) => \r\n                  <Typography>{error.message}</Typography>\r\n                )}\r\n              </>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs />\r\n          { step !== steps.myth && step < steps.review &&\r\n          <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n            <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n          </Grid>\r\n          }\r\n          { step !== steps.review && \r\n          <Grid item xs={2} onClick={() => moveStep(1)}>\r\n            <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n          </Grid>\r\n          }\r\n        </Grid>\r\n        { getStep() }\r\n        <Grid container>\r\n          <Grid item xs />\r\n          { step !== steps.myth && steps < steps.review &&\r\n          <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n            <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n          </Grid>\r\n          }\r\n          { step < steps.review && \r\n          <Grid item xs={2} onClick={() => moveStep(1)}>\r\n            <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n          </Grid>\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateBuild;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.theme.white\r\n  },\r\n  steps: {\r\n    marginTop: 30,\r\n    marginBottom: 35,\r\n\r\n    textAlign: \"center\",\r\n    fontSize: \"0.8em\",\r\n    color: colors.theme.white\r\n  },\r\n  stepNumberBehind: {\r\n    color: colors.theme.goldPrimary,\r\n    marginBottom: 5,\r\n\r\n    opacity: 0.7\r\n  },\r\n  stepNumberCurrent: {\r\n    marginBottom: 5,\r\n  },\r\n  stepNumberAhead: {\r\n    marginBottom: 5,\r\n\r\n    opacity: 0.20\r\n  },\r\n\r\n  buttonNextStep: {\r\n    fontSize: \"0.7em\",\r\n    backgroundColor: colors.theme.goldPrimary,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  },\r\n  buttonPreviousStep: {\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.goldPrimary,\r\n    border: `1px solid ${colors.theme.goldPrimary}`,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport BuildView from '../../components/BuildView'\r\nimport { searchBuildsBySlug } from '../../state/actions/ethereal.actions'\r\n\r\nconst ViewBuild = () => {\r\n  document.title = \"Etherean.gg - View Build\"\r\n\r\n  const { buildSlug } = useParams()\r\n  const [build, setBuild] = useState({})\r\n\r\n  useEffect(() => {      \r\n    // browser throws an error if you don't define it and then call it ¯\\_(ツ)_/¯\r\n    const retrieveBuild = async (buildSlug) => {\r\n      setBuild(await searchBuildsBySlug(buildSlug))\r\n    }\r\n\r\n    retrieveBuild(buildSlug)\r\n  }, [])\r\n\r\n  return (\r\n    build?.id ? \r\n    <Grid container>\r\n      <BuildView data={build} />\r\n    </Grid> :\r\n    <Grid>\r\n      No Build Found\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ViewBuild;","import CreateBuild from '../pages/builds/Create'\r\nimport ViewBuild from '../pages/builds/View'\r\nimport NotFound from '../pages/NotFound'\r\n\r\nconst routes = [\r\n  // Will need to test out build viewing with slug in iframe\r\n\r\n  // Builds\r\n  { path: \"/builds/create\", key: \"CREATE_BUILD\", exact: true, component: CreateBuild },\r\n  { path: \"/builds/view/:buildSlug\", key: \"VIEW_BUILD_SLUG\", component: ViewBuild },\r\n  { path: \"/builds/view\", key: \"VIEW_BUILD_LIST\", exact: true, component: ViewBuild },\r\n\r\n  { path: \"/:buildSlug\", key: \"ROOT\", exact: true, component: CreateBuild },\r\n\r\n  // Without slash needed for github pages\r\n  { path: \"\", key: \"ROOT\", exact: true, component: CreateBuild },\r\n\r\n  // Catch All Else\r\n  { path: \"/:NotFound\", component: NotFound }\r\n];\r\n\r\nexport default routes;","import  React from 'react'\r\n\r\nconst NotFound = () => {\r\n    document.title = \"Etherean.gg - 404 Not Found\"\r\n\r\n    return (\r\n        <div>Page Not Found</div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\nimport { Route} from 'react-router-dom'\r\n\r\nexport const RouteAndSubRoutes = route => {\r\n    return (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n                <route.component { ...props}\r\n                routes={route.routes} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RouteAndSubRoutes;","import { createReducer} from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    GET_FAMILIARS,\r\n    GET_ITEMS,\r\n    GET_MYTHS\r\n} from './../actions/ethereal.actions'\r\n\r\nconst initialState = {\r\n    isFetching: false\r\n}\r\n\r\n// Not used, redux may be over complicating this?\r\nconst etherealReducer = createReducer(initialState, {\r\n    [GET_FAMILIARS]: (state, action) => {\r\n        state.familiars = action.payload\r\n    },\r\n\r\n    [GET_ITEMS]: (state, action) => {\r\n        state.items = action.payload\r\n    },\r\n\r\n    [GET_MYTHS]: (state, action) => {\r\n        state.myth = action.payload\r\n    }\r\n});\r\n\r\nexport default etherealReducer;","import { combineReducers } from 'redux'\r\nimport * as etherealReducer from './ethereal.reducers'\r\n\r\nconst allReducers = combineReducers({...etherealReducer});\r\n\r\nexport default allReducers;","import { createStore, applyMiddleware } from 'redux'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\n\r\nimport allReducers from './reducers/all.reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'authentication',\r\n  storage: storage,\r\n  whitelist: []\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\nconst middleware = applyMiddleware(thunk, logger);\r\nconst store = createStore(persistedReducer, {}, middleware);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport routes from './routes'\r\nimport { Switch } from 'react-router-dom'\r\nimport RouteAndSubRoutes from './routes/RouteAndSubRoutes'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'  \r\nimport { Provider } from 'react-redux'\r\n\r\nimport store, { persistor } from './state'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from './styles/theme'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { \r\n  faArrowsAlt,\r\n  faFilter,\r\n  faTrashAlt \r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  faArrowsAlt,\r\n  faTrashAlt,\r\n  faFilter\r\n)\r\n\r\nconst AppBase = () => {\r\n  const useStyles = makeStyles({\r\n    '@global': {\r\n        '*::-webkit-scrollbar': {\r\n          width: '0.4em'\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          '-webkit-box-shadow': `inset 0 0 6px ${colors.theme.scrollLane}`\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: colors.theme.scrollBar,\r\n          outline: `1px solid ${colors.theme.scrollBar}`\r\n        }\r\n    },\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  useStyles()\r\n\r\n  return (\r\n    <div name=\"wrapper\" style={styles.wrapper}>\r\n      <div name=\"content\" style={styles.content}>\r\n        <React.StrictMode>\r\n          <Provider store={store}>\r\n            <PersistGate\r\n              loading=\"Loading...\"\r\n              persistor={persistor}\r\n            >\r\n              <BrowserRouter>\r\n                <Switch> {\r\n                  routes.map(\r\n                    (route, index) => \r\n                      <RouteAndSubRoutes key={index} {...route} />\r\n                    )\r\n                }\r\n                </Switch>\r\n              </BrowserRouter>\r\n            </PersistGate>\r\n          </Provider>\r\n        </React.StrictMode>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    height: \"100%\",\r\n\r\n    backgroundColor: colors.theme.siteBackground,\r\n  },\r\n  content: {\r\n    margin: \"auto\",\r\n    padding: \"4vh\",\r\n\r\n    height: \"100%\",\r\n    minHeight: \"92vh\",\r\n    maxWidth: \"1000px\",\r\n\r\n    backgroundColor: colors.theme.contentBackground,\r\n    color: colors.theme.white,\r\n  }\r\n}\r\n\r\nexport default AppBase;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker === null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType !== null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { theme } from './styles/theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}