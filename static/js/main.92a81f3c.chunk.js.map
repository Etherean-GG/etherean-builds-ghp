{"version":3,"sources":["styles/theme.js","state/actions/ethereal.actions.js","pages/builds/fragments/Myths.jsx","components/Builds/SectionHeaderItem.jsx","components/CollapsibleItemSection.jsx","components/Builds/Item.jsx","components/ItemList.jsx","pages/builds/fragments/Items.jsx","components/Builds/DynamicAbility.jsx","components/Builds/SelectedStat.jsx","components/Builds/StaticAbility.jsx","components/Builds/StatPicker.jsx","pages/builds/fragments/Loadout.jsx","pages/builds/fragments/Abilities.jsx","pages/builds/fragments/Pairings.jsx","components/BuildView.jsx","pages/builds/fragments/Review.jsx","pages/builds/Create.jsx","pages/builds/View.jsx","routes/index.js","pages/NotFound.jsx","routes/RouteAndSubRoutes.js","state/reducers/ethereal.reducers.js","state/reducers/all.reducers.js","state/index.js","App.js","serviceWorker.js","index.js"],"names":["colors","theme","siteBackground","contentBackground","contentBorder","scrollBar","scrollLane","sectionHeaderBackground","sectionBackground","goldPrimary","goldSecondary","goldBackground","statsFirst","statsSecond","statsThird","statsFourth","white","black","grey","aqua","blue","gray","green","magenta","purple","red","yellow","API_DOMAIN","getBuild","id","a","axios","get","response","data","getMythList","getItemList","FragmentBuildMyths","props","setData","useState","count","setCount","myths","setMyths","roles","setRoles","useEffect","retrieveMyths","retrieveRoles","name","image","classes","makeStyles","root","border","color","input","useStyles","Grid","container","style","styles","content","item","xs","Typography","label","required","TextField","className","InputProps","fullWidth","variant","defaultValue","title","onChange","e","tempData","saveTitle","target","value","map","role","index","key","roleContainer","Button","onClick","saveRole","opacity","roleImage","width","height","src","process","roleDescription","myth","textAlign","padding","saveMyth","Avatar","backgroundURLs","background","backgroundImageWrapper","saveBackground","alignContent","alignItem","marginTop","marginBottom","fontSize","roleUnselected","marginLeft","marginRight","SectionHeaderItem","justify","alignItems","backgroundImage","backgroundSize","backgroundRepeat","minWidth","minHeight","CollapsibleItemSection","sectionIndex","sectionId","deleteSection","defaultExpanded","console","log","section","Accordion","borderRadius","AccordionSummary","summary","expandIcon","fill","event","stopPropagation","onFocus","direction","faDragIcon","icon","faArrowsAlt","size","placeholder","sectionHeaderItemsContainer","sectionHeaderItem","imageURL","deleteSectionButton","faTrashIcon","faTrashAlt","AccordionDetails","details","children","margin","justifyContent","paddingLeft","backgroundColor","Item","alt","itemCost","cost","itemName","cursor","scrollableList","maxHeight","overflow","itemList","paddingTop","paddingBottom","searchField","itemFilter","ItemList","items","filteredItems","setFilteredItems","filter","undefined","length","filteredList","i","toUpperCase","includes","filterItems","faFilter","FragmentBuildItems","setItemList","addSection","tempSections","Math","max","s","concat","order","build","notes","addItem","hasBoots","some","b","endsWith","push","removeItem","retrieveItemList","buttonAddSection","sIndex","iIndex","selectedItem","multiline","rows","saveNotes","header","DynamicAbility","ability","abilityIndex","selectLevel","type","Array","_","levels","levelSelected","levelDefault","SelectedStat","stat","removeStat","statCost","points","statName","deleteIcon","StaticAbility","slot","StatPicker","isPrimary","remainingPoints","addStat","splitCosts","setSplitCosts","splitColors","setSplitColors","statCosts","splice","statColors","pickerRow","disabled","FragmentBuildLoadout","setRemainingPoints","combatTactics","setCombatTactics","secondaryStats","setSecondaryStats","selectedStats","setSelectedStats","selectedSecondaryStat","setSelectedSecondaryStat","selectedPrimaryTactic","setSelectedPrimaryTactic","selectedSecondaryTactic","setSelectedSecondaryTactic","stats","retrieveCombatTactics","tempSelectedStats","tempRemainingPoints","selectDropdown","menuItem","tacticsContainer","statContainer","selectedStat","removeStatAt","Select","statList","tactic","inputProps","MenuItem","tempStats","tempCost","familiarContainer","font","tacticOption","borderColor","paddingRight","FragmentBuildAbilities","level","selected","slice","dynamicAbilities","FragmentBuildPairings","BuildView","rootContainer","itemIndex","abilities","levelIndex","loadout","pairings","FragmentBuildReview","CreateBuild","document","steps","step","setStep","setMyth","setItems","setLoadout","setAbilities","setPairings","moveStep","createContent","buildContent","stepNumberCurrent","stepNumberBehind","stepNumberAhead","buttonPreviousStep","buttonNextStep","getStep","ViewBuild","buildId","useParams","setBuild","retrieveBuild","prop","routes","path","exact","component","RouteAndSubRoutes","route","render","etherealReducer","createReducer","isFetching","state","action","familiars","payload","allReducers","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","middleware","applyMiddleware","thunk","logger","store","createStore","persistor","persistStore","library","add","wrapper","maxWidth","AppBase","outline","StrictMode","loading","Boolean","window","location","hostname","match","ReactDOM","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.92a81f3c.chunk.js","sourcesContent":["export const colors = {\r\n    // site theme colors\r\n    theme: {\r\n        siteBackground: \"#090909\",\r\n        \r\n        contentBackground: \"#121212\",\r\n        contentBorder: \"#707070\",\r\n        \r\n        scrollBar: '#FFFFFF3D',\r\n        scrollLane: '#1E1E1E',\r\n\r\n        sectionHeaderBackground: \"#272727\",\r\n        sectionBackground: \"#2C2C2C\",\r\n\r\n        goldPrimary: \"#C39445\",\r\n        goldSecondary: \"#655233\",\r\n        goldBackground: \"#CAA65B\",\r\n\r\n        statsFirst: \"#FFFFFF\",\r\n        statsSecond: \"#208C62\",\r\n        statsThird: \"#2090E5\",\r\n        statsFourth: \"#654FA7\",\r\n\r\n        white: \"#FFFFFF\",\r\n        black: \"#1E1E1E\",\r\n        grey: \"#797979\"\r\n    },\r\n\r\n    // general colors\r\n    aqua: \"#00FFF\",\r\n\r\n    black: \"#000000\",\r\n    \r\n    blue: \"#000FF\",\r\n    \r\n    gray: \"#808080\",\r\n\r\n    green: \"#00800\",\r\n    \r\n    magenta: \"#FF00FF\",\r\n    \r\n    purple: \"#800080\",\r\n    \r\n    red: \"#FF0000\",\r\n    \r\n    white: \"#FFFFFF\",\r\n    \r\n    yellow: \"#FFFF00\",\r\n}\r\n\r\nexport default colors","import axios from 'axios'\r\n\r\n// Production\r\n//const API_DOMAIN = 'https://ethereanggapi.azurewebsites.net/api'\r\nconst API_DOMAIN = 'https://localhost:44390/api'\r\n\r\nexport const GET_FAMILIARS = \"GET/familiars\"\r\nexport const GET_ITEMS = \"GET/items\"\r\nexport const GET_MYTHS = \"GET/myths\"\r\n\r\nexport const getBuild = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/builds/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getBuildList = async (filter) => {\r\n    try {\r\n        // do something with filter...\r\n        let filterQuery = \"&\"\r\n\r\n        const response = await axios.get(`${API_DOMAIN}/builds?${filterQuery}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMythList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMyth = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getItemList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/items`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getCombatTacticsList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/combat-tactics`)\r\n        return response.data\r\n    } catch(e) { }\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getMythList,\r\n  getRoleList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildMyths = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [myths, setMyths] = useState([])\r\n  const [roles, setRoles] = useState([])\r\n\r\n  useEffect(() => {\r\n    const retrieveMyths = async () => {\r\n      setMyths(await getMythList())\r\n    }\r\n\r\n    const retrieveRoles = async () => {\r\n      //setRoles(await getRoleList())\r\n      setRoles([{\r\n        name: 'Ice',\r\n        image: '/images/roles/ice.png'\r\n      },{\r\n        name: 'Jungle',\r\n        image: '/images/roles/jungle.png'\r\n      },{\r\n        name: 'Void',\r\n        image: '/images/roles/void.png'\r\n      },{\r\n        name: 'Fire',\r\n        image: '/images/roles/fire.png'\r\n      },{\r\n        name: 'Support',\r\n        image: '/images/roles/support.png'\r\n      }])\r\n    }\r\n\r\n    retrieveMyths()\r\n    retrieveRoles()\r\n  }, [])  \r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  const saveTitle = (title) => {\r\n    let tempData = data\r\n    tempData.title = title\r\n    \r\n    setData(tempData)\r\n  }\r\n\r\n  const saveMyth = (myth) => {\r\n    let tempData = data\r\n    data.myth = myth\r\n    setData(data)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveRole = (role) => {\r\n    let tempData = data\r\n    tempData.role = role\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveBackground = (background) => {\r\n    let tempData = data\r\n    tempData.myth.background = background\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={styles.content}>\r\n          <Grid item xs={12}>\r\n            <Typography \r\n              style={styles.label}\r\n              required\r\n            >1. Name your Build</Typography>\r\n            <TextField \r\n              name=\"title\"\r\n              className={ classes.root }\r\n              InputProps={{ className: classes.input }}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              defaultValue={data.title}\r\n              onChange={(e) => { \r\n                  saveTitle(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Typography style={styles.label} xs={12}>2. Select Role</Typography>\r\n            <Grid container>\r\n            { /* TODO: Convert to loop from external source / api */ }\r\n              { roles.map((role, index) =>\r\n                <Grid item xs key={`role-${role.name}`} >\r\n                  <Grid container style={styles.roleContainer} >\r\n                    <Grid item xs={12}>\r\n                      <Button onClick={() => saveRole(role)}\r\n                        style={{opacity: data.role?.name === role.name ? 1 : 0.5 }}>\r\n                        <img style={ styles.roleImage }\r\n                          width={60}\r\n                          height={60}\r\n                          src={`${process.env.PUBLIC_URL}/${role.image}`} />\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography style={styles.roleDescription}>\r\n                        {role.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n                <Grid item xs={6} />\r\n            </Grid>\r\n          </Grid>  \r\n\r\n          <Grid item xs={12}>\r\n            <Typography  style={styles.label} xs={12}>3. Select Myth</Typography>\r\n            <Grid container>\r\n              { /* TODO: Convert to loop from external source / api */ }\r\n              { myths.map((myth, index) =>\r\n                <Grid item xs={2}\r\n                  key={`myth-${index}`}\r\n                  style={{textAlign: 'center', padding: 25}}>\r\n                  <Button onClick={() => saveMyth(myth)}\r\n                    style={{opacity: data?.myth?.name === myth.name ? 1 : 0.5 }}>\r\n                    <Avatar\r\n                      variant=\"rounded\"\r\n                      style={{width: 125, height: 125,\r\n                        border: `1px solid ${colors.theme.goldBackground}`}}\r\n                      src={myth.backgroundURLs[0]} />\r\n                  </Button>\r\n                  <Typography>\r\n                    {myth.name}\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>  \r\n            <Typography style={styles.label}>4. Select Background</Typography>\r\n            <Grid container>\r\n            { data.myth && data.myth.backgroundURLs.map((background, index) =>\r\n              <Grid item style={styles.backgroundImageWrapper}\r\n                key={`background-${background}`}>\r\n                <Button onClick={() => saveBackground(background) }\r\n                  style={{opacity: data.myth.background === background ? 1 : 0.5}}>\r\n                  <img src={background} height={150} width={300} \r\n                    style={{border: `1px solid ${colors.theme.goldBackground}`}}/>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            </Grid>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildMyths;\r\n\r\nconst styles = {\r\n  content: {\r\n    alignContent: 'center',\r\n    alignItem: 'center'\r\n  },\r\n\r\n  label: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  roleContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  roleImage: {\r\n    \r\n  },\r\n  roleDescription: {\r\n    color: colors.theme.white,\r\n    fontSize: 10\r\n  },\r\n  roleUnselected: {\r\n    opacity: 90\r\n  },\r\n\r\n  backgroundImageWrapper: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nexport const SectionHeaderItem = (props) => {\r\n    const {\r\n        image\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${image})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 40,\r\n                    minHeight: 40,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SectionHeaderItem","import React from 'react'\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport SectionHeaderItem from './Builds/SectionHeaderItem'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faArrowsAlt,\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport colors from '../styles/theme'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst CollapsibleItemSection = (props) => {\r\n    const {\r\n      title,\r\n      data,\r\n      sectionIndex,\r\n      sectionId,\r\n      saveTitle,\r\n      deleteSection,\r\n      defaultExpanded\r\n    } = props\r\n\r\n    console.log(data)\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n          padding: 12\r\n        }\r\n      },\r\n      \r\n      input: {\r\n        color: colors.theme.white\r\n      },\r\n    })\r\n  \r\n    const classes = useStyles()\r\n\r\n    return (\r\n      <Grid container\r\n        style={styles.section}\r\n        alignContent='center'\r\n        alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Accordion style={{borderRadius: 5}} \r\n            defaultExpanded={defaultExpanded}>\r\n            <AccordionSummary\r\n              style={styles.summary}\r\n              expandIcon={<ExpandMoreIcon style={{ fill: colors.theme.white }} />} >\r\n              <Grid container\r\n                onClick={(event) => event.stopPropagation()}\r\n                onFocus={(event) => event.stopPropagation()} \r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                <Grid item xs={1}\r\n                  style={{marginRight: -10}}>\r\n                  <FontAwesomeIcon\r\n                    styles={styles.faDragIcon}\r\n                    icon={faArrowsAlt} color=\"white\" size=\"lg\" />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <TextField \r\n                    placeholder=\"Title\"\r\n                    className={ classes.root }\r\n                    InputProps={{\r\n                      className: classes.input\r\n                    }}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    defaultValue={title}\r\n                    onChange={(e) => { \r\n                      saveTitle(sectionIndex, e.target.value)\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Grid container style={styles.sectionHeaderItemsContainer} >\r\n                  { data && data.map((item, index) => \r\n                    <Grid item style={styles.sectionHeaderItem}>\r\n                      <SectionHeaderItem key={`itemheader--${index}`} image={item.imageURL} />\r\n                    </Grid>\r\n                  )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={1}\r\n                  direction=\"row-reverse\">\r\n                    <Button \r\n                        style={styles.deleteSectionButton}\r\n                        onClick={() => deleteSection(sectionId)}>\r\n                      <Grid container\r\n                        direction=\"column\"\r\n                        style={styles.faTrashIcon}>\r\n                        <Grid item>\r\n                          <FontAwesomeIcon\r\n                          styles={styles.faTrashIcon}\r\n                          icon={faTrashAlt} color=\"white\" size=\"lg\" />\r\n                        </Grid>\r\n                        <Grid item\r\n                          style={styles.label}>\r\n                          Delete\r\n                        </Grid>\r\n                      </Grid>\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={styles.details}>\r\n              {props.children}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\nexport default CollapsibleItemSection;\r\n\r\n\r\nconst styles = {\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  deleteSectionButton: {\r\n    margin: 0,\r\n    padding: 0,\r\n    color: colors.theme.white\r\n  },\r\n  sectionHeaderItemsContainer: {\r\n    justifyContent: 'flex-start'\r\n  },\r\n  sectionHeaderItem: {\r\n    paddingLeft: 10\r\n  },\r\n  summary: {\r\n    backgroundColor: colors.theme.sectionHeaderBackground,\r\n\r\n    height: 65\r\n  },\r\n  details: {\r\n    backgroundColor: colors.theme.sectionBackground,\r\n  },\r\n  label: {\r\n    color: colors.theme.white,\r\n    fontSize: \"0.8em\"\r\n  },\r\n  faDragIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  },\r\n  faTrashIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const Item = (props) => {\r\n    const {\r\n        item,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            onClick={() => setData(section, item)}\r\n            style={styles.item}>\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${item.imageURL})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 75,\r\n                    minHeight: 75,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n                <Grid container>\r\n                    <Grid item xs />\r\n                    <Grid item xs={2}>\r\n                        <img src={`${process.env.PUBLIC_URL}/images/currency_gold.png`} width={10} height={10} alt=\"currency - gold\" />\r\n                    </Grid>\r\n                    <Grid item xs={5} style={styles.itemCost}>\r\n                        <Typography>\r\n                            {item.cost}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs\r\n                style={styles.itemName}>\r\n                {item.name}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\nconst styles = {\r\n    item: {\r\n        cursor: \"pointer\"\r\n    },\r\n    itemName: {\r\n        color: colors.theme.white,\r\n\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    itemCost: {\r\n        background: `1px solid ${colors.theme.goldBackground}`,\r\n\r\n        margin: 0,\r\n        padding: 0,\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Item from '../components/Builds/Item'\r\n\r\nimport {\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faFilter\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst ItemList = (props) => {\r\n    const {\r\n        items,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    const [filteredItems, setFilteredItems] = useState(items)\r\n\r\n    useEffect(() => {\r\n        setFilteredItems(props.items)\r\n    }, [props.items])\r\n\r\n    const toggleFilter = () => {\r\n        \r\n    }\r\n\r\n    const filterItems = (filter) => {\r\n        if(filter !== undefined && filter.length > 0) {\r\n            const filteredList = items.filter(i => i.name.toUpperCase().includes(filter.toUpperCase()))\r\n            setFilteredItems(filteredList)\r\n        } else {\r\n            setFilteredItems(items)\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-input\": {\r\n            padding: 12\r\n          }\r\n        },\r\n        \r\n        input: {\r\n          color: colors.theme.white\r\n        },\r\n      })\r\n    \r\n      const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container\r\n            alignContent='center'\r\n            alignItems='center'\r\n            style={styles.section}>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={6}>\r\n                <Grid container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    alignContent=\"center\">\r\n                    <Grid item xs={10}>\r\n                        <TextField \r\n                            style={styles.searchField}\r\n                            className={ classes.root }\r\n                            InputProps={{ className: classes.input }}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Search Items\"\r\n                            onChange={(e) => filterItems(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={1} />\r\n                    <Grid item xs={1}\r\n                        style={styles.itemFilter}>\r\n                        <Grid container\r\n                            justify=\"center\"\r\n                            alignContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"column\">\r\n                            <Grid item>\r\n                                <FontAwesomeIcon icon={faFilter} color=\"white\" \r\n                                    onClick={toggleFilter} />\r\n                            </Grid>\r\n                            <Grid item\r\n                                style={styles.label}>\r\n                                Filter\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container \r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"flex-begin\"\r\n                style={styles.scrollableList}>\r\n                { filteredItems && filteredItems.map((item, index) => \r\n                    <Grid item\r\n                        style={styles.item}>\r\n                            <Item key={`item-${index}`} section={section} item={item} setData={setData} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    section: {\r\n        color: colors.theme.white\r\n    },\r\n    label: {\r\n        color: colors.theme.white,\r\n        fontSize: \"0.8em\"\r\n    },\r\n    scrollableList: {\r\n        maxHeight: 400,\r\n        overflow: \"auto\",\r\n\r\n        marginTop: 20,\r\n        marginRight: 15\r\n    },\r\n    itemList: {\r\n        margin: 15,\r\n        width: \"100%\",\r\n\r\n        backgroundColor: colors.theme.sectionBackground\r\n    },\r\n    item: {\r\n        backgroundColor: colors.theme.black,\r\n        padding: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        margin: 10,\r\n        width: 100,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    searchField: {\r\n        marginTop: 10\r\n    },\r\n\r\n    itemFilter: {\r\n        opacity: 0.2,\r\n        cursor: \"not-allowed\"\r\n    }\r\n} \r\n\r\nexport default ItemList","import React, { useEffect, useState } from 'react';\r\n\r\nimport CollapsibleItemSection from '../../../components/CollapsibleItemSection'\r\nimport ItemList from '../../../components/ItemList'\r\nimport Item from '../../../components/Builds/Item'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getItemList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildItems = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [itemList, setItemList] = useState([])\r\n\r\n  const addSection = () => {\r\n    let tempSections = data\r\n    const id = Math.max(...tempSections.map(s => s.id), 0);\r\n    console.log(id)\r\n    \r\n    tempSections = tempSections.concat({ id: id+1, order: id+1, build: [], notes: ''})\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  \r\n  const deleteSection = (sectionId) => {\r\n    console.log(sectionId)\r\n    let tempSections = data\r\n    tempSections = data.filter(s => s.id != sectionId)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const addItem = (index, item) => {\r\n    let tempSections = data\r\n\r\n    const hasBoots = tempSections[index].build.some(b => b.name.endsWith('Boots')) || item.name.endsWith('Boots');\r\n\r\n    if(tempSections[index].build.length >= (hasBoots ? 7 : 6)) { return }\r\n    if(tempSections[index].build.filter(i => i.name === item.name).length > 0) { return }\r\n\r\n    tempSections[index].build.push(item)\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const removeItem = (index, item) => {\r\n    let tempSections = data\r\n    tempSections[index].build = tempSections[index].build.filter(i => i.name !== item.name)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveTitle = (index, title) => {\r\n    let tempSections = data\r\n\r\n    tempSections[index].title = title\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveNotes = (index, notes) => {\r\n    let tempSections = data\r\n    tempSections[index].notes = notes\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const retrieveItemList = async () => {\r\n      setItemList(await getItemList())\r\n    }\r\n\r\n    retrieveItemList()\r\n  }, [])\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n      { data.map((section, sIndex) => \r\n        <CollapsibleItemSection \r\n          key={`sections-items-${section.id}`}\r\n          style={styles.section}\r\n          sectionIndex={sIndex}\r\n          sectionId={section.id}\r\n          title={section.title}\r\n          defaultExpanded={data.length == 1}\r\n          data={section.build}\r\n          saveTitle={saveTitle}\r\n          deleteSection={deleteSection}>\r\n            <Grid container>\r\n              { section.build.map((item, iIndex) => \r\n                <Grid item xs={1} style={styles.selectedItem}>\r\n                  <Item\r\n                    key={`itemsection-${sIndex}-item-${iIndex}`}\r\n                    section={sIndex} \r\n                    item={item} \r\n                    setData={removeItem} />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs />\r\n              <Grid item xs={12}>\r\n                <ItemList key={`item-list-${sIndex}`} items={itemList} section={sIndex} build={section.build} setData={addItem} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField multiline rows={6} \r\n                  variant=\"outlined\"\r\n                  style={styles.notes} \r\n                  className={ classes.root }\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                  placeholder=\"Notes...\"\r\n                  defaultValue={section.notes}\r\n                  onChange={(e) => { \r\n                    saveNotes(sIndex, e.target.value)\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n        </CollapsibleItemSection>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildItems;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  buttonAddSection: {\r\n    backgroundColor: colors.theme.goldPrimary,\r\n    fontSize: \"0.7em\",\r\n    marginTop: 10,\r\n    marginBottom: 15\r\n  },\r\n\r\n  selectedItem: {\r\n    marginRight: 20,\r\n    color: colors.theme.white\r\n  },\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const DynamicAbility = (props) => {\r\n    const {\r\n        ability,\r\n        abilityIndex,\r\n        selectLevel\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={1}>\r\n                <img style={styles.image}\r\n                    src={ability.imageURL} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Typography style={styles.name}>\r\n                            {ability.type} - {ability.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    { ability && [...Array(maxAbilityLevel)].map((_, index) =>\r\n                        <Button style={ability.levels.includes(index+1) ? styles.levelSelected : styles.levelDefault}\r\n                            onClick={() => \r\n                                selectLevel(abilityIndex, index+1, !ability.levels.includes(index+1))\r\n                            }\r\n                            key={`ability-${ability.name}-${index}-${ability.levels.includes(index+1)}`}>\r\n                            {index+1}\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DynamicAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    levelDefault: {\r\n        backgroundColor: colors.theme.black,\r\n        color: colors.theme.white,\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n    levelSelected: {\r\n        backgroundColor: colors.theme.goldPrimary,\r\n        color: colors.theme.black,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const SelectedStat = (props) => {\r\n    const {\r\n        stat,\r\n        removeStat\r\n    } = props\r\n\r\n    return (\r\n        <Grid container style={styles.container}>\r\n            <Grid item xs={1} style={{\r\n                    ...styles.statCost, \r\n                    backgroundColor: stat.color,\r\n                    color: stat.cost === 4 ? colors.theme.white : colors.theme.black\r\n                }}>\r\n                <Typography>\r\n                    {stat.points}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <Typography style={styles.statName}>\r\n                    {stat.name} ({stat.cost})\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={1}\r\n                style={styles.deleteIcon}>\r\n                <Button onClick={removeStat}>\r\n                    <FontAwesomeIcon\r\n                        icon={faTrashAlt} color=\"white\" size=\"sm\" />\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n} \r\n\r\nexport default SelectedStat\r\n\r\nconst styles = {\r\n    container: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        padding: 10,\r\n        borderRadius: '7px 0',\r\n\r\n        alignItems: 'center'\r\n    },\r\n\r\n    statName: {\r\n        color: colors.theme.goldPrimary,\r\n        paddingLeft: 10,\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    statCost: {\r\n        textAlign: 'center',\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        borderRadius: 7,\r\n        width: 15,\r\n        margin: 2\r\n    },\r\n\r\n    deleteIcon: {\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const StaticAbility = (props) => {\r\n    const {\r\n        ability\r\n    } = props\r\n\r\n    // TODO: Implement Hover details?\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Grid item xs={2}>\r\n                        <img style={styles.image}\r\n                            src={ability.imageURL} />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.name}>\r\n                                    {ability.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.slot}>\r\n                                    {ability.slot}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StaticAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    name: {\r\n        fontSize: 15,\r\n        color: colors.theme.white\r\n    },\r\n    slot: {\r\n        fontSize: 10,\r\n        color: colors.theme.white\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const StatPicker = (props) => {\r\n    const {\r\n        name,\r\n        isPrimary,\r\n        remainingPoints,\r\n        addStat\r\n    } = props\r\n\r\n    const [splitCosts, setSplitCosts] = useState([])\r\n    const [splitColors, setSplitColors] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(isPrimary) {\r\n            setSplitCosts(statCosts.splice(0, 3))\r\n            setSplitColors(statColors.splice(0, 3))\r\n        } else {\r\n            setSplitCosts(statCosts.splice(1, 3))\r\n            setSplitColors(statColors.splice(1, 3))\r\n        }\r\n    }, [])\r\n\r\n    const statPoints = [1, 4, 10]\r\n    const statCosts = [1, 2, 3, 4]\r\n    const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n\r\n    return (\r\n        <>\r\n        { name &&\r\n        <Grid container style={styles.pickerRow}>\r\n            <Grid item xs={6}>\r\n                <Typography style={styles.label}>\r\n                    {name}\r\n                </Typography>\r\n            </Grid>\r\n            { statPoints.map((points, index) => \r\n            <Grid item xs={2} style={{border: `1px solid ${splitColors[index]}`}}>\r\n                <Button\r\n                    disabled={remainingPoints - splitCosts[index] < 0}\r\n                    onClick={() => addStat({\r\n                        name: name, \r\n                        points: points, \r\n                        cost: splitCosts[index],\r\n                        color: splitColors[index],\r\n                        isPrimary: isPrimary\r\n                    })}>\r\n                <Typography\r\n                    style={{color: splitColors[index]}}>\r\n                + {points}\r\n                </Typography>\r\n                </Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatPicker\r\n\r\nconst styles = {\r\n    label: {\r\n      color: colors.theme.white\r\n    },\r\n    pickerRow: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        alignItems: 'center',\r\n        \r\n        paddingLeft: 15,\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    }\r\n  }","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  SelectedStat,\r\n  StatPicker\r\n} from '../../../components/Builds'\r\n\r\nimport {\r\n  getCombatTacticsList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildLoadout = (props) => {\r\n  const {\r\n\r\n  } = props\r\n\r\n  const [remainingPoints, setRemainingPoints] = useState(8)\r\n  \r\n  const [combatTactics, setCombatTactics] = useState([])\r\n  const [secondaryStats, setSecondaryStats] = useState([])\r\n\r\n  const [selectedStats, setSelectedStats] = useState([])\r\n  const [selectedSecondaryStat, setSelectedSecondaryStat] = useState({})\r\n\r\n  const [selectedPrimaryTactic, setSelectedPrimaryTactic] = useState(-1)\r\n  const [selectedSecondaryTactic, setSelectedSecondaryTactic] = useState(-1)\r\n\r\n  const statCosts = [1, 2, 3, 4]\r\n  const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n  \r\n  useEffect(() => {\r\n    const retrieveCombatTactics = async (id) => {\r\n      //setCombatTactics(await getCombatTacticsList())\r\n      setCombatTactics([{\r\n          name: 'Assault',\r\n          stats: ['Attack Speed', 'Life Steal', 'Penetration']\r\n        },{\r\n          name: 'Demolition',\r\n          stats: ['Structure Damage', 'Move Speed', 'Spell Vamp']\r\n        },{\r\n          name: 'Protect',\r\n          stats: ['Health', 'Defense', 'Persistence']\r\n        },{\r\n          name: 'Reinforcement',\r\n          stats: ['Defensive Power', 'Cooldowns', 'Mana']\r\n        }\r\n      ])\r\n    }\r\n\r\n    retrieveCombatTactics()\r\n  }, [])\r\n\r\n  const handleSelectedTactic = (event) => {\r\n    setSelectedPrimaryTactic(event.target.value)\r\n    setRemainingPoints(8)\r\n    setSelectedStats([])\r\n\r\n    let statList = []\r\n    combatTactics.map((tactic, index) => {\r\n      if(index !== event.target.value) {\r\n        tactic.stats.map((stat) => {\r\n          statList.push({\r\n            tactic: tactic.name,\r\n            stat: stat\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    setSecondaryStats(statList)\r\n    setSelectedSecondaryTactic(0)\r\n    setSelectedSecondaryStat(statList[0])\r\n  }\r\n\r\n  const handleSelectedSecondary = (event) => {\r\n    setSelectedSecondaryTactic(event.target.value)\r\n    setSelectedSecondaryStat(secondaryStats[event.target.value])\r\n\r\n    const tempStats = selectedStats.filter(stat => stat.isPrimary)\r\n    let tempCost = 8\r\n    tempStats.map((stat) => {\r\n      tempCost = tempCost - stat.cost\r\n    })\r\n\r\n    setSelectedStats(tempStats)\r\n    setRemainingPoints(tempCost)\r\n  }\r\n\r\n  const addStat = (stat) => {\r\n    let tempSelectedStats = selectedStats\r\n    let tempRemainingPoints = remainingPoints\r\n\r\n    tempSelectedStats.push({\r\n      ...stat\r\n    })\r\n\r\n    setSelectedStats(tempSelectedStats)\r\n    setRemainingPoints(tempRemainingPoints - stat.cost)\r\n  }\r\n\r\n  const removeStatAt = (index) => {\r\n    let tempSelectedStats = selectedStats\r\n    let tempRemainingPoints = remainingPoints\r\n\r\n    const stat = tempSelectedStats[index]\r\n    tempSelectedStats.splice(index, 1)\r\n\r\n    setSelectedStats(tempSelectedStats)\r\n    setRemainingPoints(tempRemainingPoints + stat.cost)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    selectDropdown: {\r\n      border: `1px solid ${colors.theme.white}`,\r\n      color: colors.theme.white,\r\n      width: '100%',\r\n\r\n      \".MuiSvgIcon-root .MuiSelect-icon\": {\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n\r\n    menuItem: {\r\n     marginLeft: 10 \r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12} style={styles.tacticsContainer}>\r\n          <Grid container style={{alignItems: 'center', alignContent: 'center' }}>\r\n            <Grid item xs={7} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>1. Selected Combat Stats</Typography>\r\n            </Grid>\r\n            <Typography style={styles.label}>Stat Costs:</Typography>\r\n            { statCosts.map((cost, index) => \r\n                  <Typography style={{\r\n                      ...styles.statCosts,\r\n                      backgroundColor: statColors[index], \r\n                      color: index < 3 ? colors.theme.black : colors.theme.white\r\n                    }}>{cost}</Typography>\r\n            )}\r\n            <Grid item xs={2}>\r\n              <Typography style={{...styles.label, textAlign: \"right\"}}>Remaining Points:</Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography style={styles.remainingPoints}>{remainingPoints}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container style={styles.statContainer}>\r\n              { selectedStats.map((stat, index) => \r\n              <Grid item xs={3} style={styles.selectedStat}>\r\n                <SelectedStat stat={stat} removeStat={() => removeStatAt(index)} />\r\n              </Grid>\r\n              )}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Primary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    value={selectedPrimaryTactic}\r\n                    onChange={handleSelectedTactic}\r\n                    className={ classes.selectDropdown } \r\n                    inputProps={{ className:classes.menuItem }}>\r\n                      { !(selectedPrimaryTactic >= 0) &&\r\n                      <MenuItem \r\n                        className={classes.menuItem}\r\n                        value={-1}>Pick Primary Tactic</MenuItem>\r\n                      }\r\n                    { combatTactics && combatTactics.map((tactic, index) =>\r\n                      <MenuItem className={classes.menuItem}\r\n                        value={index}>{tactic.name}</MenuItem>\r\n                    )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    { combatTactics[selectedPrimaryTactic] && combatTactics[selectedPrimaryTactic].stats.map((stat, index) => \r\n                      <Grid item xs={12}>\r\n                        <StatPicker isPrimary={true} \r\n                          remainingPoints={remainingPoints}\r\n                          name={stat} \r\n                          addStat={addStat} />\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Secondary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    disabled={selectedPrimaryTactic === -1}\r\n                    width={1}\r\n                    value={selectedSecondaryTactic}\r\n                    onChange={handleSelectedSecondary}\r\n                    className={ classes.selectDropdown }\r\n                    inputProps={{ className:classes.menuItem }}\r\n                    >\r\n                      { selectedPrimaryTactic === -1 &&\r\n                      <MenuItem />\r\n                      }\r\n                      { secondaryStats && secondaryStats.map((stat, index) =>\r\n                      <MenuItem value={index}>{`[${stat.tactic}] ${stat.stat}`}</MenuItem>\r\n                      )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      { selectedSecondaryTactic >= 0 &&\r\n                      <StatPicker isPrimary={false} \r\n                        name={selectedSecondaryStat.stat} \r\n                        remainingPoints={remainingPoints}\r\n                        addStat={addStat} />\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} style={styles.familiarContainer}>\r\n          <Grid container>\r\n            <Grid item xs={12} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>2. Select Familiar</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container>\r\n                <Grid item xs={1} style={{ \r\n                    background: \"no-repeat center/150% url('https://undyinggames.com/assets/Images/News/FamiliarCard.png')\", \r\n                    border: `1px solid ${colors.theme.goldPrimary}`,\r\n                    marginTop: 10,\r\n                    height: 150, \r\n                    width: 250 }}>\r\n                  \r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildLoadout;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  label: {\r\n    font: 10,\r\n    color: colors.theme.white,\r\n    marginRight: 2\r\n  },\r\n\r\n  tacticOption: {\r\n    paddingLeft: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  familiarContainer: {\r\n    marginTop: 25\r\n  },\r\n\r\n  remainingPoints: {\r\n    background: colors.theme.goldPrimary,\r\n    color: colors.theme.black,\r\n    \r\n    width: 25,\r\n    marginLeft: 10,\r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n    border: 1,\r\n    borderRadius: 3,\r\n    borderColor: colors.white\r\n  }, \r\n  statCosts: {\r\n    border: `1px solid ${colors.theme.goldBackground}`,\r\n    borderRadius: 5,\r\n    width: 20, \r\n    margin: 5, \r\n    marginRight: 2, \r\n    \r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  statContainer: {\r\n    minHeight: 175,\r\n    marginTop: 15,\r\n    marginBottom: 25\r\n  },\r\n  selectedStat: {\r\n    height: 75,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    paddingLeft: 15,\r\n    paddingRight: 15\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  DynamicAbility,\r\n  StaticAbility\r\n} from '../../../components/Builds'\r\n\r\nconst FragmentBuildAbilities = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  console.log(data)\r\n\r\n  // Hacking a state change :(\r\n  const [count, setCount] = useState(0)\r\n\r\n  const selectLevel = (abilityIndex, level, selected) => {\r\n    let tempData = data\r\n\r\n    tempData.map((_, index) => {\r\n      tempData[index].levels = tempData[index].levels.filter(i => i !== level)\r\n    })\r\n\r\n    if(selected) {\r\n      tempData[abilityIndex].levels.push(level)\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveNotes = (notes) => {\r\n    let tempData = data;\r\n    tempData.notes = notes;\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              { data && data[0] && \r\n              <StaticAbility ability={data[0]} />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            { data && data.slice(1, 7).map((ability, index) =>\r\n             <Grid item xs={12} style={styles.dynamicAbilities}\r\n                key={`ability-${index}`}>\r\n                <DynamicAbility ability={ability} abilityIndex={index+1} selectLevel={selectLevel} />\r\n            </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField multiline rows={6} \r\n              variant=\"outlined\"\r\n              style={styles.notes} \r\n              className={ classes.root }\r\n              InputProps={{\r\n                className: classes.input\r\n              }}\r\n              placeholder=\"Notes...\"\r\n              defaultValue={data?.notes}\r\n              onChange={(e) => { \r\n                saveNotes(e.target.value)\r\n              }} />\r\n          </Grid>\r\n        </Grid> \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildAbilities;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  dynamicAbilities: {\r\n    marginTop: 35,\r\n    marginBottom: 10\r\n  },\r\n\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildPairings = () => {\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'\r\n      style={{minHeight:400, alignContent: 'start'}}>\r\n        <Grid item xs={12}>\r\n          <h3 style={styles.header}>Coming Soon<sup style={{fontSize:10}}>TM</sup></h3>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildPairings;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst BuildView = (props) => {\r\n    const {\r\n        data\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    // TODO: add build validation \r\n    let validBuild = true\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        validBuild ?\r\n            <Grid container style={styles.rootContainer}>\r\n                <h2>Myth</h2>\r\n                <Grid item xs={12}>\r\n                    <Typography>\r\n                        Build Name: {data.myth.title}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography>\r\n                        Myth Name: {data.myth.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Avatar variant=\"square\"\r\n                        src={`${process.env.PUBLIC_URL}/${data.myth.role.image}`} />\r\n                    <Typography>\r\n                        Role Name: {data.myth.role.name}\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <h2>Items</h2>\r\n                <Grid item xs={12}>\r\n                    { data.items.map((section, index) => \r\n                        <Grid container>\r\n                            { section.build.map((item, itemIndex) => \r\n                                <Grid item xs={2}>\r\n                                    {item.name}\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n\r\n                <h2>Loadout & Familiar</h2>\r\n                <Grid item xs={12}>\r\n                    \r\n                </Grid>\r\n\r\n                <h2>Abilities</h2>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            { data.abilities[0].name }\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            { data.abilities[1].name }\r\n                        </Grid>\r\n                    </Grid>\r\n                    { data.abilities.slice(2, 6).map((ability, abilityIndex) => \r\n                        <Grid container>\r\n                            <Grid item xs={1}>\r\n                                {ability.name}    \r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                            { [...Array(maxAbilityLevel)].map((_, levelIndex) => \r\n                                <Button style={ability.levels.includes(levelIndex+1) ? styles.abilities.levelSelected : styles.abilities.levelDefault}\r\n                                    disabled={true}\r\n                                    key={`ability-${ability.name}-${levelIndex}-${ability.levels.includes(levelIndex+1)}`}>\r\n                                    {levelIndex+1}\r\n                                </Button>\r\n                            )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        : \r\n        <Grid container>\r\n        \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BuildView\r\n\r\nconst styles = {\r\n    rootContainer: {\r\n        color: colors.theme.white\r\n    },\r\n    myth: {\r\n        title: {\r\n\r\n        }\r\n    },\r\n    items: {\r\n\r\n    }, \r\n    loadout: {\r\n\r\n    },\r\n    abilities: {\r\n        levelDefault: {\r\n            backgroundColor: colors.theme.black,\r\n            color: colors.theme.white,\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        },\r\n        levelSelected: {\r\n            backgroundColor: colors.theme.goldPrimary,\r\n            color: colors.theme.black,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        }\r\n    },\r\n    pairings: {\r\n\r\n    }\r\n}","import React from 'react';\r\n\r\nimport BuildView from '../../../components/BuildView'\r\n\r\nimport {\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildReview = (props) => {\r\n  const {\r\n    data\r\n  } = props\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Button>Save Build</Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BuildView data={data} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button>Save Build</Button>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildReview;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  todo: {\r\n      color: colors.theme.white\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport FragmentBuildMyths from './fragments/Myths'\r\nimport FragmentBuildItems from './fragments/Items'\r\nimport FragmentBuildLoadout from './fragments/Loadout'\r\nimport FragmentBuildAbilities from './fragments/Abilities'\r\nimport FragmentBuildPairings from './fragments/Pairings'\r\nimport FragmentBuildReview from './fragments/Review'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nconst CreateBuild = () => {\r\n  document.title = \"Etherean.gg - Create Build\"\r\n  \r\n  const steps = {\r\n    // reorder as needed\r\n    myth: 1,\r\n    items: 2,\r\n    loadout: 3,\r\n    abilities: 4,\r\n    pairings: 5,\r\n    review: 6\r\n  }\r\n\r\n  const [step, setStep] = useState(steps.myth)\r\n  \r\n  const [myth, setMyth] = useState({})\r\n  const [items, setItems] = useState([{ id: 0, order: 0, build: [], notes: \"\" }])\r\n  const [loadout, setLoadout] = useState({})\r\n  const [abilities, setAbilities] = useState()\r\n  const [pairings, setPairings] = useState({})\r\n  const [buildData, setBuild] = useState({})\r\n\r\n  const moveStep = (direction) => { \r\n    setStep(step + direction) \r\n  }\r\n\r\n  const getStep = () => {\r\n    switch(step) {\r\n      // pass up state\r\n      case steps.myth: return <FragmentBuildMyths data={myth} setData={setMyth} />\r\n      case steps.items: return <FragmentBuildItems data={items} setData={setItems} />\r\n      case steps.loadout: return <FragmentBuildLoadout data={loadout} setData={setLoadout} />\r\n      case steps.abilities: return <FragmentBuildAbilities data={myth.myth?.abilities} setData={setAbilities} />\r\n      case steps.pairings: return <FragmentBuildPairings data={pairings} setData={setPairings} />\r\n      case steps.review: return <FragmentBuildReview data={{myth, items, loadout, abilities, pairings}} />\r\n    }\r\n  }\r\n\r\n  // TODO: Can this be cleaned up with an array?\r\n  return (\r\n    <Grid container \r\n      style={styles.createContent}\r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs style={styles.buildContent}>\r\n          <h3 style={styles.header}>Create a build</h3>\r\n          <div>\r\n            <Grid container style={styles.steps}>\r\n              <Grid item xs onClick={() => setStep(steps.myth)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={ \r\n                    step === steps.myth ? styles.stepNumberCurrent :\r\n                    styles.stepNumberBehind\r\n                  }>\r\n                    1\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Start your build\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.items)}>\r\n                <Grid container>\r\n                <Grid item xs={12} style={\r\n                    step === steps.items ? styles.stepNumberCurrent\r\n                      : step > steps.items ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    2\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Select Items\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.loadout)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.loadout ? styles.stepNumberCurrent\r\n                      : step > steps.loadout ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    3\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Select Loadout & Familiar\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.abilities)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.abilities ? styles.stepNumberCurrent\r\n                      : step > steps.abilities ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    4\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Ability Level Up\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.pairings)}>\r\n                <Grid container>\r\n                  <Grid item xs={12}style={\r\n                    step === steps.pairings ? styles.stepNumberCurrent\r\n                      : step > steps.pairings ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    5\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Threats & Synergies\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.review ? styles.stepNumberCurrent\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    6\r\n                  </Grid>\r\n                  <Grid item \r\n                    xs={12} onClick={() => setStep(steps.review)}>\r\n                    Preview & Publish\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <Grid container>\r\n            <Grid item xs />\r\n            { step !== steps.myth &&\r\n            <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n              <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n            </Grid>\r\n            }\r\n            { step !== steps.review && \r\n            <Grid item xs={2} onClick={() => moveStep(1)}>\r\n              <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n            </Grid>\r\n            }\r\n          </Grid>\r\n          { getStep() }\r\n          <Grid container>\r\n            <Grid item xs />\r\n            { step !== steps.myth &&\r\n            <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n              <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n            </Grid>\r\n            }\r\n            { step !== steps.review && \r\n            <Grid item xs={2} onClick={() => moveStep(1)}>\r\n              <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n            </Grid>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateBuild;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.theme.white\r\n  },\r\n  steps: {\r\n    marginTop: 30,\r\n    marginBottom: 35,\r\n\r\n    textAlign: \"center\",\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.white\r\n  },\r\n  stepNumberBehind: {\r\n    background: `no-repeat center/33% url('${process.env.PUBLIC_URL}/images/step-border.png')`,\r\n    color: colors.theme.goldPrimary,\r\n\r\n    paddingTop: 20,\r\n    marginBottom: 10,\r\n\r\n    height: 55,\r\n    width: 55,\r\n    \r\n    opacity: 0.7\r\n  },\r\n  stepNumberCurrent: {\r\n    background: `no-repeat center/33% url('${process.env.PUBLIC_URL}/images/step-border.png')`,\r\n\r\n    paddingTop: 20,\r\n    marginBottom: 10,\r\n\r\n    height: 55,\r\n    width: 55\r\n  },\r\n  stepNumberAhead: {\r\n    background: `no-repeat center/33% url('${process.env.PUBLIC_URL}/images/step-border.png')`,\r\n\r\n    paddingTop: 20,\r\n    marginBottom: 10,\r\n\r\n    height: 55,\r\n    width: 55,\r\n\r\n    opacity: 0.20\r\n  },\r\n\r\n  buttonNextStep: {\r\n    fontSize: \"0.7em\",\r\n    backgroundColor: colors.theme.goldPrimary,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  },\r\n  buttonPreviousStep: {\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.goldPrimary,\r\n    border: `1px solid ${colors.theme.goldPrimary}`,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { getBuild } from '../../state/actions/ethereal.actions'\r\n\r\nconst ViewBuild = () => {\r\n  document.title = \"Etherean.gg - View Build\"\r\n\r\n  const { buildId } = useParams()\r\n  const [build, setBuild] = useState({})\r\n\r\n  useEffect(() => {      \r\n    // browser throws an error if you don't define it and then call it ¯\\_(ツ)_/¯\r\n    const retrieveBuild = async (id) => {\r\n      setBuild(await getBuild(id))\r\n    }\r\n\r\n    retrieveBuild(buildId)\r\n  }, [])\r\n\r\n  return (\r\n    build?.id ? \r\n    <Grid container>\r\n      <div style={{color: \"white\"}}>\r\n        ID: {build.id}<br />\r\n        Props: {build.prop}\r\n      </div>\r\n    </Grid> :\r\n    <Grid>\r\n      No Build Found\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ViewBuild;","import CreateBuild from '../pages/builds/Create'\r\nimport ViewBuild from '../pages/builds/View'\r\nimport NotFound from '../pages/NotFound'\r\n\r\nconst routes = [\r\n  { path: \"\", key: \"ROOT\", exact: true, component: CreateBuild },\r\n\r\n  // Builds\r\n  { path: \"/builds/create\", key: \"CREATE_BUILD\", exact: true, component: CreateBuild },\r\n  { path: \"/builds/view\", key: \"VIEW_BUILD_LIST\", exact: true, component: ViewBuild },\r\n  { path: \"/builds/view/:buildId\", key: \"VIEW_BUILD_ID\", component: ViewBuild },\r\n\r\n  // Catch All Else\r\n  { path: \"/:NotFound\", component: NotFound }\r\n];\r\n\r\nexport default routes;","import  React from 'react'\r\n\r\nconst NotFound = () => {\r\n    document.title = \"Etherean.gg - 404 Not Found\"\r\n\r\n    return (\r\n        <div>Page Not Found</div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\nimport { Route} from 'react-router-dom'\r\n\r\nexport const RouteAndSubRoutes = route => {\r\n    return (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n                <route.component { ...props}\r\n                routes={route.routes} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RouteAndSubRoutes;","import { createReducer} from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    GET_FAMILIARS,\r\n    GET_ITEMS,\r\n    GET_MYTHS\r\n} from './../actions/ethereal.actions'\r\n\r\nconst initialState = {\r\n    isFetching: false\r\n}\r\n\r\n// Not used, redux may be over complicating this?\r\nconst etherealReducer = createReducer(initialState, {\r\n    [GET_FAMILIARS]: (state, action) => {\r\n        state.familiars = action.payload\r\n    },\r\n\r\n    [GET_ITEMS]: (state, action) => {\r\n        state.items = action.payload\r\n    },\r\n\r\n    [GET_MYTHS]: (state, action) => {\r\n        state.myth = action.payload\r\n    }\r\n});\r\n\r\nexport default etherealReducer;","import { combineReducers } from 'redux'\r\nimport * as etherealReducer from './ethereal.reducers'\r\n\r\nconst allReducers = combineReducers({...etherealReducer});\r\n\r\nexport default allReducers;","import { createStore, applyMiddleware } from 'redux'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\n\r\nimport allReducers from './reducers/all.reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'authentication',\r\n  storage: storage,\r\n  whitelist: []\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\nconst middleware = applyMiddleware(thunk, logger);\r\nconst store = createStore(persistedReducer, {}, middleware);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport routes from './routes'\r\nimport { Switch } from 'react-router-dom'\r\nimport RouteAndSubRoutes from './routes/RouteAndSubRoutes'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'  \r\nimport { Provider } from 'react-redux'\r\n\r\nimport store, { persistor } from './state'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from './styles/theme'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { \r\n  faArrowsAlt,\r\n  faFilter,\r\n  faTrashAlt \r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  faArrowsAlt,\r\n  faTrashAlt,\r\n  faFilter\r\n)\r\n\r\nconst AppBase = () => {\r\n  const useStyles = makeStyles({\r\n    '@global': {\r\n        '*::-webkit-scrollbar': {\r\n          width: '0.4em'\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          '-webkit-box-shadow': `inset 0 0 6px ${colors.theme.scrollLane}`\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: colors.theme.scrollBar,\r\n          outline: `1px solid ${colors.theme.scrollBar}`\r\n        }\r\n    },\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  useStyles()\r\n\r\n  return (\r\n    <div name=\"wrapper\" style={styles.wrapper}>\r\n      <div name=\"content\" style={styles.content}>\r\n        <React.StrictMode>\r\n          <Provider store={store}>\r\n            <PersistGate\r\n              loading=\"Loading...\"\r\n              persistor={persistor}\r\n            >\r\n              <BrowserRouter>\r\n                <Switch> {\r\n                  routes.map(\r\n                    (route, index) => \r\n                      <RouteAndSubRoutes key={index} {...route} />\r\n                    )\r\n                }\r\n                </Switch>\r\n              </BrowserRouter>\r\n            </PersistGate>\r\n          </Provider>\r\n        </React.StrictMode>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    height: \"100%\",\r\n\r\n    backgroundColor: colors.theme.siteBackground,\r\n  },\r\n  content: {\r\n    margin: \"auto\",\r\n    padding: \"4vh\",\r\n\r\n    height: \"100%\",\r\n    minHeight: \"92vh\",\r\n    maxWidth: \"1000px\",\r\n\r\n    backgroundColor: colors.theme.contentBackground,\r\n    color: colors.theme.white,\r\n  }\r\n}\r\n\r\nexport default AppBase;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}