{"version":3,"sources":["styles/theme.js","state/actions/ethereal.actions.js","pages/builds/fragments/Myths.jsx","components/Builds/SectionHeaderItem.jsx","components/CollapsibleItemSection.jsx","components/Builds/Item.jsx","components/ItemList.jsx","pages/builds/fragments/Items.jsx","components/Builds/DynamicAbility.jsx","components/Builds/SelectedStat.jsx","components/Builds/StaticAbility.jsx","components/Builds/StatPicker.jsx","pages/builds/fragments/Loadout.jsx","pages/builds/fragments/Abilities.jsx","pages/builds/fragments/Pairings.jsx","components/BuildView.jsx","pages/builds/fragments/Review.jsx","pages/builds/Create.jsx","pages/builds/View.jsx","routes/index.js","pages/NotFound.jsx","routes/RouteAndSubRoutes.js","state/reducers/ethereal.reducers.js","state/reducers/all.reducers.js","state/index.js","App.js","serviceWorker.js","index.js"],"names":["colors","theme","siteBackground","contentBackground","contentBorder","scrollBar","scrollLane","sectionHeaderBackground","sectionBackground","goldPrimary","goldSecondary","goldBackground","statsFirst","statsSecond","statsThird","statsFourth","white","black","grey","red","aqua","blue","gray","green","magenta","purple","yellow","API_DOMAIN","getBuild","id","a","axios","get","response","data","getMythList","getItemList","FragmentBuildMyths","props","setData","useState","count","setCount","myths","setMyths","roles","setRoles","useEffect","retrieveMyths","retrieveRoles","name","image","classes","makeStyles","root","border","color","input","useStyles","Grid","container","style","styles","content","item","xs","Typography","label","required","TextField","className","InputProps","fullWidth","variant","defaultValue","title","onChange","e","tempData","saveTitle","target","value","map","role","index","key","roleContainer","Button","onClick","saveRole","roleImage","opacity","width","height","src","process","roleDescription","myth","textAlign","paddingBottom","abilities","class","imageURL","levels","concat","saveMyth","xmlns","viewBox","d","transform","href","backgroundURLs","x","y","clip-path","stroke","fill","stroke-width","background","backgroundImageWrapper","saveBackground","stroke-miterlimit","alignContent","alignItem","marginTop","marginBottom","fontSize","roleUnselected","marginLeft","marginRight","SectionHeaderItem","justify","alignItems","backgroundImage","backgroundSize","backgroundRepeat","minWidth","minHeight","CollapsibleItemSection","sectionIndex","sectionId","deleteSection","defaultExpanded","padding","section","Accordion","borderRadius","AccordionSummary","summary","expandIcon","event","stopPropagation","onFocus","direction","faDragIcon","icon","faArrowsAlt","size","placeholder","sectionHeaderItemsContainer","sectionHeaderItem","deleteSectionButton","faTrashIcon","faTrashAlt","AccordionDetails","details","children","margin","justifyContent","paddingLeft","backgroundColor","Item","alt","itemCost","cost","itemName","cursor","scrollableList","maxHeight","overflow","itemList","paddingTop","searchField","itemFilter","ItemList","items","filteredItems","setFilteredItems","filter","undefined","length","filteredList","i","toUpperCase","includes","filterItems","faFilter","FragmentBuildItems","setItemList","addSection","tempSections","Math","max","s","order","build","notes","addItem","hasBoots","some","b","endsWith","push","removeItem","retrieveItemList","buttonAddSection","sIndex","iIndex","selectedItem","multiline","rows","saveNotes","header","DynamicAbility","ability","abilityIndex","selectLevel","type","Array","_","levelSelected","levelDefault","SelectedStat","stat","removeStat","isHovering","setIsHovering","onMouseEnter","onMouseLeave","display","position","zIndex","statCost","points","statName","StaticAbility","slot","StatPicker","isPrimary","remainingPoints","addStat","splitCosts","setSplitCosts","splitColors","setSplitColors","statCosts","splice","statColors","pickerRow","disabled","FragmentBuildLoadout","setRemainingPoints","combatTactics","setCombatTactics","secondaryStats","setSecondaryStats","selectedStats","setSelectedStats","selectedSecondaryStat","setSelectedSecondaryStat","selectedPrimaryTactic","setSelectedPrimaryTactic","selectedSecondaryTactic","setSelectedSecondaryTactic","stats","retrieveCombatTactics","tempSelectedStats","tempRemainingPoints","selectDropdown","menuItem","tacticsContainer","statContainer","selectedStat","removeStatAt","Select","statList","tactic","inputProps","MenuItem","tempStats","tempCost","familiarContainer","font","tacticOption","borderColor","paddingRight","FragmentBuildAbilities","console","log","level","selected","slice","dynamicAbilities","FragmentBuildPairings","BuildView","rootContainer","Avatar","itemIndex","levelIndex","loadout","pairings","FragmentBuildReview","CreateBuild","document","steps","step","setStep","setMyth","setItems","setLoadout","setAbilities","setPairings","moveStep","createContent","buildContent","stepNumberCurrent","stepNumberBehind","data-name","stepNumberAhead","buttonPreviousStep","buttonNextStep","getStep","ViewBuild","buildId","useParams","setBuild","retrieveBuild","prop","routes","path","exact","component","RouteAndSubRoutes","route","render","etherealReducer","createReducer","isFetching","state","action","familiars","payload","allReducers","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","middleware","applyMiddleware","thunk","logger","store","createStore","persistor","persistStore","library","add","wrapper","maxWidth","AppBase","outline","StrictMode","loading","Boolean","window","location","hostname","match","ReactDOM","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a66d8d48.chunk.js","sourcesContent":["export const colors = {\r\n    // site theme colors\r\n    theme: {\r\n        siteBackground: \"#090909\",\r\n\r\n        contentBackground: \"#121212\",\r\n        contentBorder: \"#707070\",\r\n        \r\n        scrollBar: '#FFFFFF3D',\r\n        scrollLane: '#1E1E1E',\r\n\r\n        sectionHeaderBackground: \"#272727\",\r\n        sectionBackground: \"#2C2C2C\",\r\n\r\n        goldPrimary: \"#C39445\",\r\n        goldSecondary: \"#655233\",\r\n        goldBackground: \"#CAA65B\",\r\n\r\n        statsFirst: \"#FFFFFF\",\r\n        statsSecond: \"#208C62\",\r\n        statsThird: \"#2090E5\",\r\n        statsFourth: \"#654FA7\",\r\n\r\n        white: \"#FFFFFF\",\r\n        black: \"#1E1E1E\",\r\n        grey: \"#797979\",\r\n        red: \"#A52A2A\"\r\n    },\r\n\r\n    // general colors\r\n    aqua: \"#00FFF\",\r\n\r\n    black: \"#000000\",\r\n    \r\n    blue: \"#000FF\",\r\n    \r\n    gray: \"#808080\",\r\n\r\n    green: \"#00800\",\r\n    \r\n    magenta: \"#FF00FF\",\r\n    \r\n    purple: \"#800080\",\r\n    \r\n    red: \"#FF0000\",\r\n    \r\n    white: \"#FFFFFF\",\r\n    \r\n    yellow: \"#FFFF00\",\r\n}\r\n\r\nexport default colors","import axios from 'axios'\r\n\r\n// Production\r\nconst API_DOMAIN = 'https://ethereanggapi.azurewebsites.net/api'\r\n//const API_DOMAIN = 'https://localhost:44390/api'\r\n\r\nexport const GET_FAMILIARS = \"GET/familiars\"\r\nexport const GET_ITEMS = \"GET/items\"\r\nexport const GET_MYTHS = \"GET/myths\"\r\n\r\nexport const getBuild = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/builds/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getBuildList = async (filter) => {\r\n    try {\r\n        // do something with filter...\r\n        let filterQuery = \"&\"\r\n\r\n        const response = await axios.get(`${API_DOMAIN}/builds?${filterQuery}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMythList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMyth = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getItemList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/items`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getCombatTacticsList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/combat-tactics`)\r\n        return response.data\r\n    } catch(e) { }\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getMythList,\r\n  getRoleList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildMyths = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [myths, setMyths] = useState([])\r\n  const [roles, setRoles] = useState([])\r\n\r\n  useEffect(() => {\r\n    const retrieveMyths = async () => {\r\n      setMyths(await getMythList())\r\n    }\r\n\r\n    const retrieveRoles = async () => {\r\n      //setRoles(await getRoleList())\r\n      setRoles([{\r\n        name: 'Ice',\r\n        image: '/images/roles/ice.png'\r\n      },{\r\n        name: 'Jungle',\r\n        image: '/images/roles/jungle.png'\r\n      },{\r\n        name: 'Void',\r\n        image: '/images/roles/void.png'\r\n      },{\r\n        name: 'Fire',\r\n        image: '/images/roles/fire.png'\r\n      },{\r\n        name: 'Support',\r\n        image: '/images/roles/support.png'\r\n      }])\r\n    }\r\n\r\n    retrieveMyths()\r\n    retrieveRoles()\r\n  }, [])  \r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  const saveTitle = (title) => {\r\n    let tempData = data\r\n    tempData.title = title\r\n    \r\n    setData(tempData)\r\n  }\r\n\r\n  const saveMyth = (myth) => {\r\n    let tempData = data\r\n    tempData.myth = myth\r\n    tempData.myth.abilities = [{name: tempData.myth.class.className, imageURL: tempData.myth.class.imageURL, levels: []}].concat(tempData.myth.abilities)\r\n\r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveRole = (role) => {\r\n    let tempData = data\r\n    tempData.role = role\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveBackground = (background) => {\r\n    let tempData = data\r\n    tempData.myth.background = background\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={styles.content}>\r\n          <Grid item xs={12}>\r\n            <Typography \r\n              style={styles.label}\r\n              required\r\n            >1. Name your Build</Typography>\r\n            <TextField \r\n              name=\"title\"\r\n              className={ classes.root }\r\n              InputProps={{ className: classes.input }}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              defaultValue={data.title}\r\n              onChange={(e) => { \r\n                  saveTitle(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Typography style={styles.label} xs={12}>2. Select Role</Typography>\r\n            <Grid container>\r\n            { /* TODO: Convert to loop from external source / api */ }\r\n              { roles.map((role, index) =>\r\n                <Grid item xs key={`role-${role.name}`} >\r\n                  <Grid container style={styles.roleContainer} >\r\n                    <Grid item xs={12}>\r\n                      <Button onClick={() => saveRole(role)}>\r\n                        <img style={{ \r\n                            ...styles.roleImage,\r\n                            opacity: data.role?.name === role.name ? 1 : 0.2 \r\n                          }}\r\n                          width={60}\r\n                          height={60}\r\n                          src={`${process.env.PUBLIC_URL}/${role.image}`} />\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography style={styles.roleDescription}>\r\n                        {role.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n                <Grid item xs={6} />\r\n            </Grid>\r\n          </Grid>  \r\n\r\n          <Grid item xs={12}>\r\n            <Typography  style={styles.label} xs={12}>3. Select Myth</Typography>\r\n            <Grid container>\r\n              { myths.map((myth, index) =>\r\n                <Grid item xs={2}\r\n                  key={`myth-${index}`}\r\n                  style={{ textAlign: 'center', paddingBottom: 15 }}>\r\n                  <Button onClick={() => saveMyth(myth)}\r\n                    style={{opacity: data?.myth?.name === myth.name ? 1 : 0.5 }}>\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100\" height=\"100\" viewBox=\"0 0 62 62\">\r\n                        <defs>\r\n                          <clipPath id=\"mythClipPath\">\r\n                            <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" />\r\n                          </clipPath>\r\n                        </defs>\r\n                        <image href={myth.backgroundURLs[0]} width={120} height={61} x={-27} y={0} clip-path=\"url(#mythClipPath)\" />\r\n                        <path d=\"M212.771,337.46l-8.666,10.5v49.5h51.334l8.666-10.5v-49.5Z\" \r\n                            transform=\"translate(-203.605 -336.96)\" stroke={colors.theme.goldPrimary} fill=\"none\" stroke-width=\"1\" />\r\n                      </svg>\r\n                  </Button>\r\n                  <Typography>\r\n                    {myth.name}\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>  \r\n            <Typography style={styles.label}>4. Select Background</Typography>\r\n            <Grid container>\r\n            { data.myth && data.myth.backgroundURLs.map((background, index) =>\r\n              <Grid item style={styles.backgroundImageWrapper}\r\n                key={`background-${background}`}>\r\n                <Button onClick={() => saveBackground(background) }\r\n                  style={{opacity: data.myth.background === background ? 1 : 0.5}}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"275\" height=\"125\" viewBox=\"0 0 221.999 104\">\r\n                      <clipPath id=\"backgroundClipPath\">\r\n                      <path d=\"M517.123,345.19l-14.742,17.854V447.19H707.638l14.742-17.854V345.19Z\" transform=\"translate(-501.381 -344.19)\"\r\n                        fill=\"none\" stroke={colors.theme.goldPrimary} stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                      </clipPath>\r\n                      <image href={background} width={275} height={125} x={-27} y={0} clip-path=\"url(#backgroundClipPath)\" />\r\n                      <path d=\"M517.123,345.19l-14.742,17.854V447.19H707.638l14.742-17.854V345.19Z\" transform=\"translate(-501.381 -344.19)\"\r\n                        fill=\"none\" stroke={colors.theme.goldPrimary} stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                    </svg>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            </Grid>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildMyths;\r\n\r\nconst styles = {\r\n  content: {\r\n    alignContent: 'center',\r\n    alignItem: 'center'\r\n  },\r\n\r\n  label: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  roleContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  roleImage: {\r\n    \r\n  },\r\n  roleDescription: {\r\n    color: colors.theme.white,\r\n    fontSize: 10\r\n  },\r\n  roleUnselected: {\r\n    opacity: 90\r\n  },\r\n\r\n  backgroundImageWrapper: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nexport const SectionHeaderItem = (props) => {\r\n    const {\r\n        image\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${image})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 40,\r\n                    minHeight: 40,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SectionHeaderItem","import React from 'react'\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport SectionHeaderItem from './Builds/SectionHeaderItem'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faArrowsAlt,\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport colors from '../styles/theme'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst CollapsibleItemSection = (props) => {\r\n    const {\r\n      title,\r\n      data,\r\n      sectionIndex,\r\n      sectionId,\r\n      saveTitle,\r\n      deleteSection,\r\n      defaultExpanded\r\n    } = props\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n          padding: 12\r\n        }\r\n      },\r\n      \r\n      input: {\r\n        color: colors.theme.white\r\n      },\r\n    })\r\n  \r\n    const classes = useStyles()\r\n\r\n    return (\r\n      <Grid container\r\n        style={styles.section}\r\n        alignContent='center'\r\n        alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Accordion style={{borderRadius: 5}} \r\n            defaultExpanded={defaultExpanded}>\r\n            <AccordionSummary\r\n              style={styles.summary}\r\n              expandIcon={<ExpandMoreIcon style={{ fill: colors.theme.white }} />} >\r\n              <Grid container\r\n                onClick={(event) => event.stopPropagation()}\r\n                onFocus={(event) => event.stopPropagation()} \r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                <Grid item xs={1}\r\n                  style={{marginRight: -10}}>\r\n                  <FontAwesomeIcon\r\n                    styles={styles.faDragIcon}\r\n                    icon={faArrowsAlt} color=\"white\" size=\"lg\" />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <TextField \r\n                    placeholder=\"Title\"\r\n                    className={ classes.root }\r\n                    InputProps={{\r\n                      className: classes.input\r\n                    }}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    defaultValue={title}\r\n                    onChange={(e) => { \r\n                      saveTitle(sectionIndex, e.target.value)\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Grid container style={styles.sectionHeaderItemsContainer} >\r\n                  { data && data.map((item, index) => \r\n                    <Grid item style={styles.sectionHeaderItem}>\r\n                      <SectionHeaderItem key={`itemheader--${index}`} image={item.imageURL} />\r\n                    </Grid>\r\n                  )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={1}\r\n                  direction=\"row-reverse\">\r\n                    <Button \r\n                        style={styles.deleteSectionButton}\r\n                        onClick={() => deleteSection(sectionId)}>\r\n                      <Grid container\r\n                        direction=\"column\"\r\n                        style={styles.faTrashIcon}>\r\n                        <Grid item>\r\n                          <FontAwesomeIcon\r\n                          styles={styles.faTrashIcon}\r\n                          icon={faTrashAlt} color=\"white\" size=\"lg\" />\r\n                        </Grid>\r\n                        <Grid item\r\n                          style={styles.label}>\r\n                          Delete\r\n                        </Grid>\r\n                      </Grid>\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={styles.details}>\r\n              {props.children}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\nexport default CollapsibleItemSection;\r\n\r\n\r\nconst styles = {\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  deleteSectionButton: {\r\n    margin: 0,\r\n    padding: 0,\r\n    color: colors.theme.white\r\n  },\r\n  sectionHeaderItemsContainer: {\r\n    justifyContent: 'flex-start'\r\n  },\r\n  sectionHeaderItem: {\r\n    paddingLeft: 10\r\n  },\r\n  summary: {\r\n    backgroundColor: colors.theme.sectionHeaderBackground,\r\n\r\n    height: 65\r\n  },\r\n  details: {\r\n    backgroundColor: colors.theme.sectionBackground,\r\n  },\r\n  label: {\r\n    color: colors.theme.white,\r\n    fontSize: \"0.8em\"\r\n  },\r\n  faDragIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  },\r\n  faTrashIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const Item = (props) => {\r\n    const {\r\n        item,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            onClick={() => setData(section, item)}\r\n            style={styles.item}>\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${item.imageURL})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 75,\r\n                    minHeight: 75,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n            </Grid>\r\n            <Grid container style={{ textAlign: 'center' }}>\r\n                <Grid item xs />\r\n                <Grid item xs={2}>\r\n                    <img src={`${process.env.PUBLIC_URL}/images/currency_gold.png`} width={10} height={10} alt=\"currency - gold\" />\r\n                </Grid>\r\n                <Grid item xs={5} style={styles.itemCost}>\r\n                    <Typography>\r\n                        {item.cost}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs />\r\n            </Grid>\r\n            <Grid item xs\r\n                style={styles.itemName}>\r\n                {item.name}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\nconst styles = {\r\n    item: {\r\n        cursor: \"pointer\"\r\n    },\r\n    itemName: {\r\n        color: colors.theme.white,\r\n        textAlign: 'center',\r\n        fontSize: 12\r\n    },\r\n    itemCost: {\r\n        background: `1px solid ${colors.theme.goldBackground}`,\r\n\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Item from '../components/Builds/Item'\r\n\r\nimport {\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faFilter\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst ItemList = (props) => {\r\n    const {\r\n        items,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    const [filteredItems, setFilteredItems] = useState(items)\r\n\r\n    useEffect(() => {\r\n        setFilteredItems(props.items)\r\n    }, [props.items])\r\n\r\n    const toggleFilter = () => {\r\n        \r\n    }\r\n\r\n    const filterItems = (filter) => {\r\n        if(filter !== undefined && filter.length > 0) {\r\n            const filteredList = items.filter(i => i.name.toUpperCase().includes(filter.toUpperCase()))\r\n            setFilteredItems(filteredList)\r\n        } else {\r\n            setFilteredItems(items)\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-input\": {\r\n            padding: 12\r\n          }\r\n        },\r\n        \r\n        input: {\r\n          color: colors.theme.white\r\n        },\r\n      })\r\n    \r\n      const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container\r\n            alignContent='center'\r\n            alignItems='center'\r\n            style={styles.section}>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={6}>\r\n                <Grid container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    alignContent=\"center\">\r\n                    <Grid item xs={10}>\r\n                        <TextField \r\n                            style={styles.searchField}\r\n                            className={ classes.root }\r\n                            InputProps={{ className: classes.input }}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Search Items\"\r\n                            onChange={(e) => filterItems(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={1} />\r\n                    <Grid item xs={1}\r\n                        style={styles.itemFilter}>\r\n                        <Grid container\r\n                            justify=\"center\"\r\n                            alignContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"column\">\r\n                            <Grid item>\r\n                                <FontAwesomeIcon icon={faFilter} color=\"white\" \r\n                                    onClick={toggleFilter} />\r\n                            </Grid>\r\n                            <Grid item\r\n                                style={styles.label}>\r\n                                Filter\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container \r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"flex-begin\"\r\n                style={styles.scrollableList}>\r\n                { filteredItems && filteredItems.map((item, index) => \r\n                    <Grid item\r\n                        style={styles.item}>\r\n                            <Item key={`item-${index}`} section={section} item={item} setData={setData} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    section: {\r\n        color: colors.theme.white\r\n    },\r\n    label: {\r\n        color: colors.theme.white,\r\n        fontSize: \"0.8em\"\r\n    },\r\n    scrollableList: {\r\n        maxHeight: 400,\r\n        overflow: \"auto\",\r\n\r\n        marginTop: 20,\r\n        marginRight: 15\r\n    },\r\n    itemList: {\r\n        margin: 15,\r\n        width: \"100%\",\r\n\r\n        backgroundColor: colors.theme.sectionBackground\r\n    },\r\n    item: {\r\n        backgroundColor: colors.theme.black,\r\n        padding: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        margin: 10,\r\n        width: 100,\r\n        textAlign: 'center'\r\n    },\r\n\r\n    searchField: {\r\n        marginTop: 10\r\n    },\r\n\r\n    itemFilter: {\r\n        opacity: 0.2,\r\n        cursor: \"not-allowed\"\r\n    }\r\n} \r\n\r\nexport default ItemList","import React, { useEffect, useState } from 'react';\r\n\r\nimport CollapsibleItemSection from '../../../components/CollapsibleItemSection'\r\nimport ItemList from '../../../components/ItemList'\r\nimport Item from '../../../components/Builds/Item'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getItemList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildItems = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [itemList, setItemList] = useState([])\r\n\r\n  const addSection = () => {\r\n    let tempSections = data\r\n    const id = Math.max(...tempSections.map(s => s.id), 0);\r\n    \r\n    tempSections = tempSections.concat({ id: id+1, order: id+1, build: [], notes: ''})\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  \r\n  const deleteSection = (sectionId) => {\r\n    let tempSections = data\r\n    tempSections = data.filter(s => s.id != sectionId)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const addItem = (index, item) => {\r\n    let tempSections = data\r\n\r\n    const hasBoots = tempSections[index].build.some(b => b.name.endsWith('Boots')) || item.name.endsWith('Boots');\r\n\r\n    if(tempSections[index].build.length >= (hasBoots ? 7 : 6)) { return }\r\n    if(tempSections[index].build.filter(i => i.name === item.name).length > 0) { return }\r\n\r\n    tempSections[index].build.push(item)\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const removeItem = (index, item) => {\r\n    let tempSections = data\r\n    tempSections[index].build = tempSections[index].build.filter(i => i.name !== item.name)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveTitle = (index, title) => {\r\n    let tempSections = data\r\n\r\n    tempSections[index].title = title\r\n\r\n    setData(tempSections)\r\n  }\r\n\r\n  const saveNotes = (index, notes) => {\r\n    let tempSections = data\r\n    tempSections[index].notes = notes\r\n\r\n    setData(tempSections)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const retrieveItemList = async () => {\r\n      setItemList(await getItemList())\r\n    }\r\n\r\n    retrieveItemList()\r\n  }, [])\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n      { data.map((section, sIndex) => \r\n        <CollapsibleItemSection \r\n          key={`sections-items-${section.id}`}\r\n          style={styles.section}\r\n          sectionIndex={sIndex}\r\n          sectionId={section.id}\r\n          title={section.title}\r\n          defaultExpanded={data.length == 1}\r\n          data={section.build}\r\n          saveTitle={saveTitle}\r\n          deleteSection={deleteSection}>\r\n            <Grid container>\r\n              { section.build.map((item, iIndex) => \r\n                <Grid item xs={1} style={styles.selectedItem}>\r\n                  <Item\r\n                    key={`itemsection-${sIndex}-item-${iIndex}`}\r\n                    section={sIndex} \r\n                    item={item} \r\n                    setData={removeItem} />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs />\r\n              <Grid item xs={12}>\r\n                <ItemList key={`item-list-${sIndex}`} items={itemList} section={sIndex} build={section.build} setData={addItem} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField multiline rows={6} \r\n                  variant=\"outlined\"\r\n                  style={styles.notes} \r\n                  className={ classes.root }\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                  placeholder=\"Notes...\"\r\n                  defaultValue={section.notes}\r\n                  onChange={(e) => { \r\n                    saveNotes(sIndex, e.target.value)\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n        </CollapsibleItemSection>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>\r\n            ADD A SECTION\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildItems;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  buttonAddSection: {\r\n    backgroundColor: colors.theme.goldPrimary,\r\n    fontSize: \"0.7em\",\r\n    marginTop: 10,\r\n    marginBottom: 15\r\n  },\r\n\r\n  selectedItem: {\r\n    marginRight: 20,\r\n    color: colors.theme.white\r\n  },\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const DynamicAbility = (props) => {\r\n    const {\r\n        ability,\r\n        abilityIndex,\r\n        selectLevel\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={1}>\r\n                <img style={styles.image}\r\n                    src={ability.imageURL} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Typography style={styles.name}>\r\n                            {ability.type} - {ability.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    { ability && [...Array(maxAbilityLevel)].map((_, index) =>\r\n                        <Button style={ability.levels.includes(index+1) ? styles.levelSelected : styles.levelDefault}\r\n                            onClick={() => \r\n                                selectLevel(abilityIndex, index+1, !ability.levels.includes(index+1))\r\n                            }\r\n                            key={`ability-${ability.name}-${index}-${ability.levels.includes(index+1)}`}>\r\n                            {index+1}\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DynamicAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    levelDefault: {\r\n        backgroundColor: colors.theme.black,\r\n        color: colors.theme.white,\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n    levelSelected: {\r\n        backgroundColor: colors.theme.goldPrimary,\r\n        color: colors.theme.black,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    }\r\n}","import React, { useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const SelectedStat = (props) => {\r\n    const {\r\n        stat,\r\n        removeStat\r\n    } = props\r\n\r\n    const [isHovering, setIsHovering] = useState(false)\r\n\r\n    return (\r\n        <Grid container style={styles.container}\r\n            onMouseEnter={() => setIsHovering(true)}\r\n            onMouseLeave={() => setIsHovering(false)}>\r\n            <Button style={styles.removeStat}\r\n                onClick={removeStat}>\r\n                <div style={{\r\n                        display: isHovering ? 'block' : 'none', \r\n                        position: 'absolute', width: '100%', height: '100%', zIndex: 999, backgroundColor: `${colors.theme.red}33`\r\n                    }}>\r\n                    <FontAwesomeIcon icon={faTrashAlt} color=\"white\" size=\"lg\" style={{marginTop: 15}} />\r\n                </div>\r\n                <Grid item xs={2} style={{\r\n                        opacity: isHovering ? 0.2 : 1,\r\n                        ...styles.statCost, \r\n                        backgroundColor: stat.color,\r\n                        color: stat.cost === 4 ? colors.theme.white : colors.theme.black\r\n                    }}>\r\n                    <Typography>\r\n                        {stat.points}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs style={{ opacity: isHovering ? 0.2 : 1 }}>\r\n                    <Typography style={styles.statName}>\r\n                        {stat.name}\r\n                    </Typography>\r\n                </Grid>\r\n            </Button>\r\n        </Grid>\r\n    )\r\n} \r\n\r\nexport default SelectedStat\r\n\r\nconst styles = {\r\n    container: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        textAlign: 'center',\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n\r\n    statName: {\r\n        color: colors.theme.goldPrimary,\r\n        paddingLeft: 10,\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    statCost: {\r\n        textAlign: 'center',\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        borderRadius: 7,\r\n        width: 15,\r\n        margin: 2,\r\n        marginLeft: 10\r\n    },\r\n\r\n    removeStat: {\r\n        width: '100%',\r\n        margin: 0,\r\n        padding: 0,\r\n        minHeight: 50\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const StaticAbility = (props) => {\r\n    const {\r\n        ability\r\n    } = props\r\n\r\n    // TODO: Implement Hover details?\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Grid item xs={2}>\r\n                        <img style={styles.image}\r\n                            src={ability.imageURL} />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.name}>\r\n                                    {ability.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.slot}>\r\n                                    {ability.slot}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StaticAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    name: {\r\n        fontSize: 15,\r\n        color: colors.theme.white\r\n    },\r\n    slot: {\r\n        fontSize: 10,\r\n        color: colors.theme.white\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const StatPicker = (props) => {\r\n    const {\r\n        name,\r\n        isPrimary,\r\n        remainingPoints,\r\n        addStat\r\n    } = props\r\n\r\n    const [splitCosts, setSplitCosts] = useState([])\r\n    const [splitColors, setSplitColors] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(isPrimary) {\r\n            setSplitCosts(statCosts.splice(0, 3))\r\n            setSplitColors(statColors.splice(0, 3))\r\n        } else {\r\n            setSplitCosts(statCosts.splice(1, 3))\r\n            setSplitColors(statColors.splice(1, 3))\r\n        }\r\n    }, [])\r\n\r\n    const statPoints = [1, 4, 10]\r\n    const statCosts = [1, 2, 3, 4]\r\n    const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n\r\n    return (\r\n        <>\r\n        { name &&\r\n        <Grid container style={styles.pickerRow}>\r\n            <Grid item xs={6}>\r\n                <Typography style={styles.label}>\r\n                    {name}\r\n                </Typography>\r\n            </Grid>\r\n            { statPoints.map((points, index) => \r\n            <Grid item xs={2} style={{border: `1px solid ${splitColors[index]}`, opacity: remainingPoints >= splitCosts[index] ? 1 : 0.3 }}>\r\n                <Button\r\n                    disabled={remainingPoints - splitCosts[index] < 0}\r\n                    onClick={() => addStat({\r\n                        name: name, \r\n                        points: points, \r\n                        cost: splitCosts[index],\r\n                        color: splitColors[index],\r\n                        isPrimary: isPrimary\r\n                    })}>\r\n                    <Typography\r\n                        style={{color: splitColors[index]}}>\r\n                        + {points}\r\n                    </Typography>\r\n                </Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatPicker\r\n\r\nconst styles = {\r\n    label: {\r\n      color: colors.theme.white\r\n    },\r\n    pickerRow: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        alignItems: 'center',\r\n        \r\n        paddingLeft: 15,\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    }\r\n  }","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  SelectedStat,\r\n  StatPicker\r\n} from '../../../components/Builds'\r\n\r\nimport {\r\n  getCombatTacticsList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildLoadout = (props) => {\r\n  const {\r\n\r\n  } = props\r\n\r\n  const [remainingPoints, setRemainingPoints] = useState(8)\r\n  \r\n  const [combatTactics, setCombatTactics] = useState([])\r\n  const [secondaryStats, setSecondaryStats] = useState([])\r\n\r\n  const [selectedStats, setSelectedStats] = useState([])\r\n  const [selectedSecondaryStat, setSelectedSecondaryStat] = useState({})\r\n\r\n  const [selectedPrimaryTactic, setSelectedPrimaryTactic] = useState(-1)\r\n  const [selectedSecondaryTactic, setSelectedSecondaryTactic] = useState(-1)\r\n\r\n  const statCosts = [1, 2, 3, 4]\r\n  const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n  \r\n  useEffect(() => {\r\n    const retrieveCombatTactics = async (id) => {\r\n      //setCombatTactics(await getCombatTacticsList())\r\n      setCombatTactics([{\r\n          name: 'Assault',\r\n          stats: ['Attack Speed', 'Life Steal', 'Penetration']\r\n        },{\r\n          name: 'Demolition',\r\n          stats: ['Structure Damage', 'Move Speed', 'Spell Vamp']\r\n        },{\r\n          name: 'Protect',\r\n          stats: ['Health', 'Defense', 'Persistence']\r\n        },{\r\n          name: 'Reinforcement',\r\n          stats: ['Defensive Power', 'Cooldowns', 'Mana']\r\n        }\r\n      ])\r\n    }\r\n\r\n    retrieveCombatTactics()\r\n  }, [])\r\n\r\n  const handleSelectedTactic = (event) => {\r\n    setSelectedPrimaryTactic(event.target.value)\r\n    setRemainingPoints(8)\r\n    setSelectedStats([])\r\n\r\n    let statList = []\r\n    combatTactics.map((tactic, index) => {\r\n      if(index !== event.target.value) {\r\n        tactic.stats.map((stat) => {\r\n          statList.push({\r\n            tactic: tactic.name,\r\n            stat: stat\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    setSecondaryStats(statList)\r\n    setSelectedSecondaryTactic(0)\r\n    setSelectedSecondaryStat(statList[0])\r\n  }\r\n\r\n  const handleSelectedSecondary = (event) => {\r\n    setSelectedSecondaryTactic(event.target.value)\r\n    setSelectedSecondaryStat(secondaryStats[event.target.value])\r\n\r\n    const tempStats = selectedStats.filter(stat => stat.isPrimary)\r\n    let tempCost = 8\r\n    tempStats.map((stat) => {\r\n      tempCost = tempCost - stat.cost\r\n    })\r\n\r\n    setSelectedStats(tempStats)\r\n    setRemainingPoints(tempCost)\r\n  }\r\n\r\n  const addStat = (stat) => {\r\n    let tempSelectedStats = selectedStats\r\n    let tempRemainingPoints = remainingPoints\r\n\r\n    tempSelectedStats.push({\r\n      ...stat\r\n    })\r\n\r\n    setSelectedStats(tempSelectedStats)\r\n    setRemainingPoints(tempRemainingPoints - stat.cost)\r\n  }\r\n\r\n  const removeStatAt = (index) => {\r\n    let tempSelectedStats = selectedStats\r\n    let tempRemainingPoints = remainingPoints\r\n\r\n    const stat = tempSelectedStats[index]\r\n    tempSelectedStats.splice(index, 1)\r\n\r\n    setSelectedStats(tempSelectedStats)\r\n    setRemainingPoints(tempRemainingPoints + stat.cost)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    selectDropdown: {\r\n      border: `1px solid ${colors.theme.white}`,\r\n      color: colors.theme.white,\r\n      width: '100%',\r\n\r\n      \".MuiSvgIcon-root .MuiSelect-icon\": {\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n\r\n    menuItem: {\r\n     marginLeft: 10 \r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12} style={styles.tacticsContainer}>\r\n          <Grid container style={{alignItems: 'center', alignContent: 'center' }}>\r\n            <Grid item xs={7} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>1. Selected Combat Stats</Typography>\r\n            </Grid>\r\n            <Typography style={styles.label}>Stat Costs:</Typography>\r\n            { statCosts.map((cost, index) => \r\n                  <Typography style={{\r\n                      ...styles.statCosts,\r\n                      backgroundColor: statColors[index], \r\n                      color: index < 3 ? colors.theme.black : colors.theme.white\r\n                    }}>{cost}</Typography>\r\n            )}\r\n            <Grid item xs={2}>\r\n              <Typography style={{...styles.label, textAlign: \"right\"}}>Remaining Points:</Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography style={styles.remainingPoints}>{remainingPoints}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container style={styles.statContainer}>\r\n              { selectedStats.map((stat, index) => \r\n              <Grid item xs={3} style={styles.selectedStat}>\r\n                <SelectedStat stat={stat} removeStat={() => removeStatAt(index)} />\r\n              </Grid>\r\n              )}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Primary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    value={selectedPrimaryTactic}\r\n                    onChange={handleSelectedTactic}\r\n                    className={ classes.selectDropdown } \r\n                    inputProps={{ className:classes.menuItem }}>\r\n                      { !(selectedPrimaryTactic >= 0) &&\r\n                      <MenuItem \r\n                        className={classes.menuItem}\r\n                        value={-1}>Pick Primary Tactic</MenuItem>\r\n                      }\r\n                    { combatTactics && combatTactics.map((tactic, index) =>\r\n                      <MenuItem className={classes.menuItem}\r\n                        value={index}>{tactic.name}</MenuItem>\r\n                    )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    { combatTactics[selectedPrimaryTactic] && combatTactics[selectedPrimaryTactic].stats.map((stat, index) => \r\n                      <Grid item xs={12}>\r\n                        <StatPicker isPrimary={true} \r\n                          remainingPoints={remainingPoints}\r\n                          name={stat} \r\n                          addStat={addStat} />\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Secondary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    disabled={selectedPrimaryTactic === -1}\r\n                    width={1}\r\n                    value={selectedSecondaryTactic}\r\n                    onChange={handleSelectedSecondary}\r\n                    className={ classes.selectDropdown }\r\n                    inputProps={{ className:classes.menuItem }}\r\n                    >\r\n                      { selectedPrimaryTactic === -1 &&\r\n                      <MenuItem />\r\n                      }\r\n                      { secondaryStats && secondaryStats.map((stat, index) =>\r\n                      <MenuItem value={index}>{`[${stat.tactic}] ${stat.stat}`}</MenuItem>\r\n                      )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      { selectedSecondaryTactic >= 0 &&\r\n                      <StatPicker isPrimary={false} \r\n                        name={selectedSecondaryStat.stat} \r\n                        remainingPoints={remainingPoints}\r\n                        addStat={addStat} />\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} style={styles.familiarContainer}>\r\n          <Grid container>\r\n            <Grid item xs={12} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>2. Select Familiar</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container>\r\n                <Grid item xs={1} style={{ \r\n                    background: \"no-repeat center/150% url('https://undyinggames.com/assets/Images/News/FamiliarCard.png')\", \r\n                    border: `1px solid ${colors.theme.goldPrimary}`,\r\n                    marginTop: 10,\r\n                    height: 150, \r\n                    width: 250 }}>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildLoadout;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  label: {\r\n    font: 10,\r\n    color: colors.theme.white,\r\n    marginRight: 2\r\n  },\r\n\r\n  tacticOption: {\r\n    paddingLeft: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  familiarContainer: {\r\n    marginTop: 25\r\n  },\r\n\r\n  remainingPoints: {\r\n    background: colors.theme.goldPrimary,\r\n    color: colors.theme.black,\r\n    \r\n    width: 25,\r\n    marginLeft: 10,\r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n    border: 1,\r\n    borderRadius: 3,\r\n    borderColor: colors.white\r\n  }, \r\n  statCosts: {\r\n    border: `1px solid ${colors.theme.goldBackground}`,\r\n    borderRadius: 5,\r\n    width: 20, \r\n    margin: 5, \r\n    marginRight: 2, \r\n    \r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  statContainer: {\r\n    minHeight: 175,\r\n    marginTop: 15,\r\n    marginBottom: 25\r\n  },\r\n  selectedStat: {\r\n    height: 75,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    paddingLeft: 10,\r\n    paddingRight: 10\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  DynamicAbility,\r\n  StaticAbility\r\n} from '../../../components/Builds'\r\n\r\nconst FragmentBuildAbilities = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  console.log(data)\r\n\r\n  // Hacking a state change :(\r\n  const [count, setCount] = useState(0)\r\n\r\n  const selectLevel = (abilityIndex, level, selected) => {\r\n    let tempData = data\r\n    tempData.map((_, index) => {\r\n      tempData[index].levels = tempData[index].levels.filter(i => i !== level)\r\n    })\r\n\r\n    if(selected) {\r\n      tempData[abilityIndex].levels.push(level)\r\n    }\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveNotes = (notes) => {\r\n    let tempData = data;\r\n    tempData.notes = notes;\r\n\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              { data && data[2] && \r\n              <StaticAbility ability={data[2]} />\r\n              }\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              { data && \r\n              <StaticAbility ability={data[0]} />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            { data && data.slice(3, 8).map((ability, index) =>\r\n             <Grid item xs={12} style={styles.dynamicAbilities}\r\n                key={`ability-${index}`}>\r\n                <DynamicAbility ability={ability} abilityIndex={index+3} selectLevel={selectLevel} />\r\n            </Grid>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField multiline rows={6} \r\n              variant=\"outlined\"\r\n              style={styles.notes} \r\n              className={ classes.root }\r\n              InputProps={{\r\n                className: classes.input\r\n              }}\r\n              placeholder=\"Notes...\"\r\n              defaultValue={data?.notes}\r\n              onChange={(e) => { \r\n                saveNotes(e.target.value)\r\n              }} />\r\n          </Grid>\r\n        </Grid> \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildAbilities;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  dynamicAbilities: {\r\n    marginTop: 35,\r\n    marginBottom: 10\r\n  },\r\n\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildPairings = () => {\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'\r\n      style={{minHeight:400, alignContent: 'start'}}>\r\n        <Grid item xs={12}>\r\n          <h3 style={styles.header}>Coming Soon<sup style={{fontSize:10}}>TM</sup></h3>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildPairings;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst BuildView = (props) => {\r\n    const {\r\n        data\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    // TODO: add build validation \r\n    let validBuild = true\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        validBuild ?\r\n            <Grid container style={styles.rootContainer}>\r\n                <h2>Myth</h2>\r\n                <Grid item xs={12}>\r\n                    <Typography>\r\n                        Build Name: {data.myth.title}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography>\r\n                        Myth Name: {data.myth.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Avatar variant=\"square\"\r\n                        src={`${process.env.PUBLIC_URL}/${data.myth.role.image}`} />\r\n                    <Typography>\r\n                        Role Name: {data.myth.role.name}\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <h2>Items</h2>\r\n                <Grid item xs={12}>\r\n                    { data.items.map((section, index) => \r\n                        <Grid container>\r\n                            { section.build.map((item, itemIndex) => \r\n                                <Grid item xs={2}>\r\n                                    {item.name}\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n\r\n                <h2>Loadout & Familiar</h2>\r\n                <Grid item xs={12}>\r\n                    \r\n                </Grid>\r\n\r\n                <h2>Abilities</h2>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            { data.abilities[0].name }\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            { data.abilities[1].name }\r\n                        </Grid>\r\n                    </Grid>\r\n                    { data.abilities.slice(2, 6).map((ability, abilityIndex) => \r\n                        <Grid container>\r\n                            <Grid item xs={1}>\r\n                                {ability.name}    \r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                            { [...Array(maxAbilityLevel)].map((_, levelIndex) => \r\n                                <Button style={ability.levels.includes(levelIndex+1) ? styles.abilities.levelSelected : styles.abilities.levelDefault}\r\n                                    disabled={true}\r\n                                    key={`ability-${ability.name}-${levelIndex}-${ability.levels.includes(levelIndex+1)}`}>\r\n                                    {levelIndex+1}\r\n                                </Button>\r\n                            )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        : \r\n        <Grid container>\r\n        \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BuildView\r\n\r\nconst styles = {\r\n    rootContainer: {\r\n        color: colors.theme.white\r\n    },\r\n    myth: {\r\n        title: {\r\n\r\n        }\r\n    },\r\n    items: {\r\n\r\n    }, \r\n    loadout: {\r\n\r\n    },\r\n    abilities: {\r\n        levelDefault: {\r\n            backgroundColor: colors.theme.black,\r\n            color: colors.theme.white,\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        },\r\n        levelSelected: {\r\n            backgroundColor: colors.theme.goldPrimary,\r\n            color: colors.theme.black,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        }\r\n    },\r\n    pairings: {\r\n\r\n    }\r\n}","import React from 'react';\r\n\r\nimport BuildView from '../../../components/BuildView'\r\n\r\nimport {\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildReview = (props) => {\r\n  const {\r\n    data\r\n  } = props\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Button>Save Build</Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BuildView data={data} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button>Save Build</Button>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildReview;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  todo: {\r\n      color: colors.theme.white\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport FragmentBuildMyths from './fragments/Myths'\r\nimport FragmentBuildItems from './fragments/Items'\r\nimport FragmentBuildLoadout from './fragments/Loadout'\r\nimport FragmentBuildAbilities from './fragments/Abilities'\r\nimport FragmentBuildPairings from './fragments/Pairings'\r\nimport FragmentBuildReview from './fragments/Review'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nconst CreateBuild = () => {\r\n  document.title = \"Etherean.gg - Create Build\"\r\n  \r\n  const steps = {\r\n    // reorder as needed\r\n    myth: 1,\r\n    items: 2,\r\n    loadout: 3,\r\n    abilities: 4,\r\n    pairings: 5,\r\n    review: 6\r\n  }\r\n\r\n  const [step, setStep] = useState(steps.myth)\r\n  \r\n  const [myth, setMyth] = useState({})\r\n  const [items, setItems] = useState([{ id: 0, order: 0, build: [], notes: \"\" }])\r\n  const [loadout, setLoadout] = useState({})\r\n  const [abilities, setAbilities] = useState()\r\n  const [pairings, setPairings] = useState({})\r\n  const [buildData, setBuild] = useState({})\r\n\r\n  const moveStep = (direction) => { \r\n    setStep(step + direction) \r\n  }\r\n\r\n  console.log(step)\r\n\r\n  const getStep = () => {\r\n    switch(step) {\r\n      // pass up state\r\n      case steps.myth: return <FragmentBuildMyths data={myth} setData={setMyth} />\r\n      case steps.items: return <FragmentBuildItems data={items} setData={setItems} />\r\n      case steps.loadout: return <FragmentBuildLoadout data={loadout} setData={setLoadout} />\r\n      case steps.abilities: return <FragmentBuildAbilities data={myth.myth?.abilities} setData={setAbilities} />\r\n      case steps.pairings: return <FragmentBuildPairings data={pairings} setData={setPairings} />\r\n      case steps.review: return <FragmentBuildReview data={{myth, items, loadout, abilities, pairings}} />\r\n    }\r\n  }\r\n\r\n  // TODO: Can this be cleaned up with an array?\r\n  return (\r\n    <Grid container \r\n      style={styles.createContent}\r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs style={styles.buildContent}>\r\n          <h3 style={styles.header}>Create a build</h3>\r\n          <div>\r\n            <Grid container style={styles.steps}>\r\n              <Grid item xs onClick={() => setStep(steps.myth)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={ \r\n                    step === steps.myth ? styles.stepNumberCurrent :\r\n                    styles.stepNumberBehind\r\n                  }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                      <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                        <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"1\"/>\r\n                      </g>\r\n                      <text style={{font: 15, fill: step >= steps.myth ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">1</text>\r\n                    </svg>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Start your build\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.items)}>\r\n                <Grid container>\r\n                <Grid item xs={12} style={\r\n                    step === steps.items ? styles.stepNumberCurrent\r\n                      : step > steps.items ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                      <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                        <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"1\"/>\r\n                      </g>\r\n                      <text style={{font: 15, fill: step >= steps.items ? colors.theme.white : colors.theme.goldPrimary}} x=\"33\" y=\"40\">2</text>\r\n                    </svg>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Select Items\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.loadout)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.loadout ? styles.stepNumberCurrent\r\n                      : step > steps.loadout ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                      <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                        <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"1\"/>\r\n                      </g>\r\n                      <text style={{font: 15, fill: step >= steps.loadout ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">3</text>\r\n                    </svg>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Select Loadout & Familiar\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.abilities)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.abilities ? styles.stepNumberCurrent\r\n                      : step > steps.abilities ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                      <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                        <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"1\"/>\r\n                      </g>\r\n                      <text style={{font: 15, fill: step >= steps.abilities ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">4</text>\r\n                    </svg>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Ability Level Up\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.pairings)}>\r\n                <Grid container>\r\n                  <Grid item xs={12}style={\r\n                    step === steps.pairings ? styles.stepNumberCurrent\r\n                      : step > steps.pairings ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                      <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                        <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"1\"/>\r\n                      </g>\r\n                      <text style={{font: 15, fill: step >= steps.pairings ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">5</text>\r\n                    </svg>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Threats & Synergies\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.review ? styles.stepNumberCurrent\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"73.539\" height=\"73.539\" viewBox=\"0 0 73.539 73.539\">\r\n                      <g id=\"Group_39\" data-name=\"Group 39\" transform=\"translate(90.089 -185.063) rotate(45)\">\r\n                        <path id=\"Path_4\" data-name=\"Path 4\" d=\"M102.909,169.562l-8.752,8.752v32.5l8.752,8.752h32.5l8.752-8.752v-32.5l-8.752-8.752Z\" transform=\"translate(0)\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"2\"/>\r\n                        <path id=\"Path_5\" data-name=\"Path 5\" d=\"M106.159,174.562l-7,7v26l7,7h26l7-7v-26l-7-7Z\" fill=\"none\" stroke=\"#c39445\" stroke-miterlimit=\"10\" stroke-width=\"1\"/>\r\n                      </g>\r\n                      <text style={{font: 15, fill: step >= steps.review ? colors.theme.white : colors.theme.goldPrimary }} x=\"33\" y=\"40\">6</text>\r\n                    </svg>\r\n                  </Grid>\r\n                  <Grid item \r\n                    xs={12} onClick={() => setStep(steps.review)}>\r\n                    Preview & Publish\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <Grid container>\r\n            <Grid item xs />\r\n            { step !== steps.myth &&\r\n            <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n              <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n            </Grid>\r\n            }\r\n            { step !== steps.review && \r\n            <Grid item xs={2} onClick={() => moveStep(1)}>\r\n              <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n            </Grid>\r\n            }\r\n          </Grid>\r\n          { getStep() }\r\n          <Grid container>\r\n            <Grid item xs />\r\n            { step !== steps.myth &&\r\n            <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n              <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n            </Grid>\r\n            }\r\n            { step !== steps.review && \r\n            <Grid item xs={2} onClick={() => moveStep(1)}>\r\n              <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n            </Grid>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateBuild;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.theme.white\r\n  },\r\n  steps: {\r\n    marginTop: 30,\r\n    marginBottom: 35,\r\n\r\n    textAlign: \"center\",\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.white\r\n  },\r\n  stepNumberBehind: {\r\n    color: colors.theme.goldPrimary,\r\n    marginBottom: 5,\r\n\r\n    opacity: 0.7\r\n  },\r\n  stepNumberCurrent: {\r\n    marginBottom: 5,\r\n  },\r\n  stepNumberAhead: {\r\n    marginBottom: 5,\r\n\r\n    opacity: 0.20\r\n  },\r\n\r\n  buttonNextStep: {\r\n    fontSize: \"0.7em\",\r\n    backgroundColor: colors.theme.goldPrimary,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  },\r\n  buttonPreviousStep: {\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.goldPrimary,\r\n    border: `1px solid ${colors.theme.goldPrimary}`,\r\n\r\n    marginTop: 20,\r\n    marginBottom: 20\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { getBuild } from '../../state/actions/ethereal.actions'\r\n\r\nconst ViewBuild = () => {\r\n  document.title = \"Etherean.gg - View Build\"\r\n\r\n  const { buildId } = useParams()\r\n  const [build, setBuild] = useState({})\r\n\r\n  useEffect(() => {      \r\n    // browser throws an error if you don't define it and then call it ¯\\_(ツ)_/¯\r\n    const retrieveBuild = async (id) => {\r\n      setBuild(await getBuild(id))\r\n    }\r\n\r\n    retrieveBuild(buildId)\r\n  }, [])\r\n\r\n  return (\r\n    build?.id ? \r\n    <Grid container>\r\n      <div style={{color: \"white\"}}>\r\n        ID: {build.id}<br />\r\n        Props: {build.prop}\r\n      </div>\r\n    </Grid> :\r\n    <Grid>\r\n      No Build Found\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ViewBuild;","import CreateBuild from '../pages/builds/Create'\r\nimport ViewBuild from '../pages/builds/View'\r\nimport NotFound from '../pages/NotFound'\r\n\r\nconst routes = [\r\n  { path: \"\", key: \"ROOT\", exact: true, component: CreateBuild },\r\n\r\n  // Builds\r\n  { path: \"/builds/create\", key: \"CREATE_BUILD\", exact: true, component: CreateBuild },\r\n  { path: \"/builds/view\", key: \"VIEW_BUILD_LIST\", exact: true, component: ViewBuild },\r\n  { path: \"/builds/view/:buildId\", key: \"VIEW_BUILD_ID\", component: ViewBuild },\r\n\r\n  // Catch All Else\r\n  { path: \"/:NotFound\", component: NotFound }\r\n];\r\n\r\nexport default routes;","import  React from 'react'\r\n\r\nconst NotFound = () => {\r\n    document.title = \"Etherean.gg - 404 Not Found\"\r\n\r\n    return (\r\n        <div>Page Not Found</div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\nimport { Route} from 'react-router-dom'\r\n\r\nexport const RouteAndSubRoutes = route => {\r\n    return (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n                <route.component { ...props}\r\n                routes={route.routes} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RouteAndSubRoutes;","import { createReducer} from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    GET_FAMILIARS,\r\n    GET_ITEMS,\r\n    GET_MYTHS\r\n} from './../actions/ethereal.actions'\r\n\r\nconst initialState = {\r\n    isFetching: false\r\n}\r\n\r\n// Not used, redux may be over complicating this?\r\nconst etherealReducer = createReducer(initialState, {\r\n    [GET_FAMILIARS]: (state, action) => {\r\n        state.familiars = action.payload\r\n    },\r\n\r\n    [GET_ITEMS]: (state, action) => {\r\n        state.items = action.payload\r\n    },\r\n\r\n    [GET_MYTHS]: (state, action) => {\r\n        state.myth = action.payload\r\n    }\r\n});\r\n\r\nexport default etherealReducer;","import { combineReducers } from 'redux'\r\nimport * as etherealReducer from './ethereal.reducers'\r\n\r\nconst allReducers = combineReducers({...etherealReducer});\r\n\r\nexport default allReducers;","import { createStore, applyMiddleware } from 'redux'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\n\r\nimport allReducers from './reducers/all.reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'authentication',\r\n  storage: storage,\r\n  whitelist: []\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\nconst middleware = applyMiddleware(thunk, logger);\r\nconst store = createStore(persistedReducer, {}, middleware);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport routes from './routes'\r\nimport { Switch } from 'react-router-dom'\r\nimport RouteAndSubRoutes from './routes/RouteAndSubRoutes'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'  \r\nimport { Provider } from 'react-redux'\r\n\r\nimport store, { persistor } from './state'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from './styles/theme'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { \r\n  faArrowsAlt,\r\n  faFilter,\r\n  faTrashAlt \r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  faArrowsAlt,\r\n  faTrashAlt,\r\n  faFilter\r\n)\r\n\r\nconst AppBase = () => {\r\n  const useStyles = makeStyles({\r\n    '@global': {\r\n        '*::-webkit-scrollbar': {\r\n          width: '0.4em'\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          '-webkit-box-shadow': `inset 0 0 6px ${colors.theme.scrollLane}`\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: colors.theme.scrollBar,\r\n          outline: `1px solid ${colors.theme.scrollBar}`\r\n        }\r\n    },\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  useStyles()\r\n\r\n  return (\r\n    <div name=\"wrapper\" style={styles.wrapper}>\r\n      <div name=\"content\" style={styles.content}>\r\n        <React.StrictMode>\r\n          <Provider store={store}>\r\n            <PersistGate\r\n              loading=\"Loading...\"\r\n              persistor={persistor}\r\n            >\r\n              <BrowserRouter>\r\n                <Switch> {\r\n                  routes.map(\r\n                    (route, index) => \r\n                      <RouteAndSubRoutes key={index} {...route} />\r\n                    )\r\n                }\r\n                </Switch>\r\n              </BrowserRouter>\r\n            </PersistGate>\r\n          </Provider>\r\n        </React.StrictMode>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    height: \"100%\",\r\n\r\n    backgroundColor: colors.theme.siteBackground,\r\n  },\r\n  content: {\r\n    margin: \"auto\",\r\n    padding: \"4vh\",\r\n\r\n    height: \"100%\",\r\n    minHeight: \"92vh\",\r\n    maxWidth: \"1000px\",\r\n\r\n    backgroundColor: colors.theme.contentBackground,\r\n    color: colors.theme.white,\r\n  }\r\n}\r\n\r\nexport default AppBase;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}