{"version":3,"sources":["styles/theme.js","state/actions/ethereal.actions.js","pages/builds/fragments/Myths.jsx","components/Builds/SectionHeaderItem.jsx","components/CollapsibleItemSection.jsx","components/Builds/Item.jsx","components/ItemList.jsx","pages/builds/fragments/Items.jsx","components/Builds/DynamicAbility.jsx","components/Builds/SelectedStat.jsx","components/Builds/StaticAbility.jsx","components/Builds/StatPicker.jsx","pages/builds/fragments/Loadout.jsx","pages/builds/fragments/Abilities.jsx","pages/builds/fragments/Pairings.jsx","components/BuildView.jsx","pages/builds/fragments/Review.jsx","pages/builds/Create.jsx","pages/builds/View.jsx","routes/index.js","pages/NotFound.jsx","routes/RouteAndSubRoutes.js","state/reducers/ethereal.reducers.js","state/reducers/all.reducers.js","state/index.js","App.js","serviceWorker.js","index.js"],"names":["colors","theme","siteBackground","contentBackground","contentBorder","scrollBar","scrollLane","sectionHeaderBackground","sectionBackground","goldPrimary","goldSecondary","goldBackground","statsFirst","statsSecond","statsThird","statsFourth","white","black","grey","aqua","blue","gray","green","magenta","purple","red","yellow","API_DOMAIN","getBuild","id","a","axios","get","response","data","getMythList","getItemList","FragmentBuildMyths","props","setData","useState","count","setCount","myths","setMyths","roles","setRoles","useEffect","retrieveMyths","retrieveRoles","name","image","classes","makeStyles","root","border","color","input","useStyles","Grid","container","style","styles","content","item","xs","Typography","label","required","TextField","className","InputProps","fullWidth","variant","defaultValue","title","onChange","e","tempData","saveTitle","target","value","map","role","index","key","roleContainer","Button","onClick","saveRole","opacity","Avatar","roleImage","src","process","roleDescription","myth","textAlign","padding","saveMyth","width","height","backgroundURLs","background","backgroundImageWrapper","saveBackground","alignContent","alignItem","marginTop","marginBottom","fontSize","roleUnselected","marginLeft","marginRight","SectionHeaderItem","justify","alignItems","backgroundImage","backgroundSize","backgroundRepeat","minWidth","minHeight","CollapsibleItemSection","sectionId","deleteSection","section","Accordion","borderRadius","defaultExpanded","AccordionSummary","summary","expandIcon","fill","event","stopPropagation","onFocus","direction","faDragIcon","icon","faArrowsAlt","size","placeholder","sectionHeaderItemsContainer","sectionHeaderItem","imageURL","faTrashIcon","faTrashAlt","AccordionDetails","details","children","justifyContent","paddingLeft","backgroundColor","Item","itemCost","cost","itemName","cursor","margin","scrollableList","maxHeight","overflow","itemList","paddingTop","paddingBottom","ItemList","items","filteredItems","setFilteredItems","filter","undefined","length","filteredList","i","toUpperCase","includes","filterItems","faFilter","FragmentBuildItems","sections","setSections","setItemList","addItem","tempSections","build","push","removeItem","retrieveItemList","sIndex","iIndex","selectedItem","multiline","rows","notes","saveNotes","buttonAddSection","concat","order","addSection","header","DynamicAbility","ability","abilityIndex","selectLevel","type","Array","_","levels","levelSelected","levelDefault","disabled","SelectedStat","stat","removeStat","statCost","points","statName","deleteIcon","StaticAbility","slot","StatPicker","isPrimary","remainingPoints","addStat","splitCosts","setSplitCosts","splitColors","setSplitColors","statCosts","splice","statColors","pickerRow","FragmentBuildLoadout","setRemainingPoints","combatTactics","setCombatTactics","secondaryStats","setSecondaryStats","selectedStats","setSelectedStats","selectedSecondaryStat","setSelectedSecondaryStat","selectedPrimaryTactic","setSelectedPrimaryTactic","selectedSecondaryTactic","setSelectedSecondaryTactic","stats","retrieveCombatTactics","tempSelectedStats","tempRemainingPoints","selectDropdown","menuItem","tacticsContainer","statContainer","selectedStat","removeStatAt","Select","statList","tactic","inputProps","MenuItem","tempStats","tempCost","familiarContainer","font","tacticOption","borderColor","paddingRight","FragmentBuildAbilities","level","slice","dynamicAbilities","FragmentBuildPairings","BuildView","console","log","rootContainer","itemIndex","abilities","levelIndex","loadout","pairings","FragmentBuildReview","CreateBuild","document","steps","step","setStep","setMyth","setItems","setLoadout","setAbilities","setPairings","moveStep","createContent","buildContent","stepNumberCurrent","stepNumberBehind","stepNumberAhead","getStep","buttonPreviousStep","buttonNextStep","ViewBuild","buildId","useParams","setBuild","retrieveBuild","prop","routes","path","exact","component","RouteAndSubRoutes","route","render","etherealReducer","createReducer","isFetching","state","action","familiars","payload","allReducers","combineReducers","persistConfig","storage","whitelist","persistedReducer","persistReducer","middleware","applyMiddleware","thunk","logger","store","createStore","persistor","persistStore","library","add","wrapper","maxWidth","AppBase","outline","StrictMode","loading","Boolean","window","location","hostname","match","ReactDOM","App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.74dd85f9.chunk.js","sourcesContent":["export const colors = {\r\n    // site theme colors\r\n    theme: {\r\n        siteBackground: \"#090909\",\r\n        \r\n        contentBackground: \"#121212\",\r\n        contentBorder: \"#707070\",\r\n        \r\n        scrollBar: '#FFFFFF3D',\r\n        scrollLane: '#1E1E1E',\r\n\r\n        sectionHeaderBackground: \"#272727\",\r\n        sectionBackground: \"#2C2C2C\",\r\n\r\n        goldPrimary: \"#C39445\",\r\n        goldSecondary: \"#655233\",\r\n        goldBackground: \"#CAA65B\",\r\n\r\n        statsFirst: \"#FFFFFF\",\r\n        statsSecond: \"#208C62\",\r\n        statsThird: \"#2090E5\",\r\n        statsFourth: \"#654FA7\",\r\n\r\n        white: \"#FFFFFF\",\r\n        black: \"#1E1E1E\",\r\n        grey: \"#797979\"\r\n    },\r\n\r\n    // general colors\r\n    aqua: \"#00FFF\",\r\n\r\n    black: \"#000000\",\r\n    \r\n    blue: \"#000FF\",\r\n    \r\n    gray: \"#808080\",\r\n\r\n    green: \"#00800\",\r\n    \r\n    magenta: \"#FF00FF\",\r\n    \r\n    purple: \"#800080\",\r\n    \r\n    red: \"#FF0000\",\r\n    \r\n    white: \"#FFFFFF\",\r\n    \r\n    yellow: \"#FFFF00\",\r\n}\r\n\r\nexport default colors","import axios from 'axios'\r\n\r\nconst API_DOMAIN = 'https://localhost:44390/api'\r\n//const API_DOMAIN = '' // Production URL\r\n\r\nexport const GET_FAMILIARS = \"GET/familiars\"\r\nexport const GET_ITEMS = \"GET/items\"\r\nexport const GET_MYTHS = \"GET/myths\"\r\n\r\nexport const getBuild = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/builds/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getBuildList = async (filter) => {\r\n    try {\r\n        // do something with filter...\r\n        let filterQuery = \"&\"\r\n\r\n        const response = await axios.get(`${API_DOMAIN}/builds?${filterQuery}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMythList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getMyth = async (id) => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/myths/${id}`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getItemList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/items`)\r\n        return response.data\r\n    } catch(e) { }\r\n}\r\n\r\nexport const getCombatTacticsList = async () => {\r\n    try {\r\n        const response = await axios.get(`${API_DOMAIN}/combat-tactics`)\r\n        return response.data\r\n    } catch(e) { }\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getMythList,\r\n  getRoleList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildMyths = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [myths, setMyths] = useState([])\r\n  const [roles, setRoles] = useState([])\r\n\r\n  useEffect(() => {\r\n    const retrieveMyths = async () => {\r\n      setMyths(await getMythList())\r\n    }\r\n\r\n    const retrieveRoles = async () => {\r\n      //setRoles(await getRoleList())\r\n      setRoles([{\r\n        name: 'Ice',\r\n        image: '/images/roles/ice.png'\r\n      },{\r\n        name: 'Jungle',\r\n        image: '/images/roles/jungle.png'\r\n      },{\r\n        name: 'Void',\r\n        image: '/images/roles/void.png'\r\n      },{\r\n        name: 'Fire',\r\n        image: '/images/roles/fire.png'\r\n      },{\r\n        name: 'Support',\r\n        image: '/images/roles/support.png'\r\n      }])\r\n    }\r\n\r\n    retrieveMyths()\r\n    retrieveRoles()\r\n  }, [])  \r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  const saveTitle = (title) => {\r\n    let tempData = data\r\n    tempData.title = title\r\n    \r\n    setData(tempData)\r\n  }\r\n\r\n  const saveMyth = (myth) => {\r\n    let tempData = data\r\n    data.myth = myth\r\n    setData(data)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveRole = (role) => {\r\n    let tempData = data\r\n    tempData.role = role\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  const saveBackground = (background) => {\r\n    let tempData = data\r\n    tempData.myth.background = background\r\n    \r\n    setData(tempData)\r\n    setCount(count + 1)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container style={styles.content}>\r\n          <Grid item xs={12}>\r\n            <Typography \r\n              style={styles.label}\r\n              required\r\n            >1. Name your Build</Typography>\r\n            <TextField \r\n              name=\"title\"\r\n              className={ classes.root }\r\n              InputProps={{ className: classes.input }}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              defaultValue={data.title}\r\n              onChange={(e) => { \r\n                  saveTitle(e.target.value)\r\n              }}\r\n            />\r\n          </Grid>\r\n          \r\n          <Grid item xs={12}>\r\n            <Typography style={styles.label} xs={12}>2. Select Role</Typography>\r\n            <Grid container>\r\n            { /* TODO: Convert to loop from external source / api */ }\r\n              { roles.map((role, index) =>\r\n                <Grid item xs={1} key={`role-${role.name}`} >\r\n                  <Grid container style={styles.roleContainer} >\r\n                    <Grid item xs={12}>\r\n                      <Button onClick={() => saveRole(role)}\r\n                        style={{opacity: data.role?.name === role.name ? 1 : 0.5 }}>\r\n                        <Avatar style={ styles.roleImage }\r\n                          variant=\"square\"\r\n                          src={`${process.env.PUBLIC_URL}/${role.image}`} />\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography style={styles.roleDescription}>\r\n                        {role.name}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n                <Grid item xs />\r\n            </Grid>\r\n          </Grid>  \r\n\r\n          <Grid item xs={12}>\r\n            <Typography  style={styles.label} xs={12}>3. Select Myth</Typography>\r\n            <Grid container>\r\n              { /* TODO: Convert to loop from external source / api */ }\r\n              { myths.map((myth, index) =>\r\n                <Grid item xs={2}\r\n                  key={`myth-${index}`}\r\n                  style={{textAlign: 'center', padding: 25}}>\r\n                  <Button onClick={() => saveMyth(myth)}\r\n                    style={{opacity: data?.myth?.name === myth.name ? 1 : 0.5 }}>\r\n                    <Avatar\r\n                      variant=\"rounded\"\r\n                      style={{width: 125, height: 125,\r\n                        border: `1px solid ${colors.theme.goldBackground}`}}\r\n                      src={myth.backgroundURLs[0]} />\r\n                  </Button>\r\n                  <Typography>\r\n                    {myth.name}\r\n                  </Typography>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>  \r\n            <Typography style={styles.label}>4. Select Background</Typography>\r\n            <Grid container>\r\n            { data.myth && data.myth.backgroundURLs.map((background, index) =>\r\n              <Grid item style={styles.backgroundImageWrapper}\r\n                key={`background-${background}`}>\r\n                <Button onClick={() => saveBackground(background) }\r\n                  style={{opacity: data.myth.background === background ? 1 : 0.5,}}>\r\n                  <img src={background} height={100} width={200} \r\n                    style={{border: `1px solid ${colors.theme.goldBackground}`}}/>\r\n                </Button>\r\n              </Grid>\r\n            )}\r\n            </Grid>\r\n          </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildMyths;\r\n\r\nconst styles = {\r\n  content: {\r\n    alignContent: 'center',\r\n    alignItem: 'center'\r\n  },\r\n\r\n  label: {\r\n    marginTop: 30,\r\n    marginBottom: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  roleContainer: {\r\n    textAlign: 'center'\r\n  },\r\n  roleImage: {\r\n    border: `1px solid ${colors.theme.goldPrimary}`\r\n  },\r\n  roleDescription: {\r\n    color: colors.theme.white,\r\n    fontSize: 10\r\n  },\r\n  roleUnselected: {\r\n    opacity: 90\r\n  },\r\n\r\n  backgroundImageWrapper: {\r\n    marginLeft: 15,\r\n    marginRight: 15,\r\n    marginBottom: 15,\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid\r\n} from '@material-ui/core'\r\n\r\nexport const SectionHeaderItem = (props) => {\r\n    const {\r\n        image\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${image})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 40,\r\n                    minHeight: 40,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default SectionHeaderItem","import React from 'react'\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionSummary,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport SectionHeaderItem from './Builds/SectionHeaderItem'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faArrowsAlt,\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport colors from '../styles/theme'\r\n\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\nconst CollapsibleItemSection = (props) => {\r\n    const {\r\n      title,\r\n      data,\r\n      sectionId,\r\n      saveTitle,\r\n      deleteSection\r\n    } = props\r\n\r\n    const useStyles = makeStyles({\r\n      root: {\r\n        \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n          border: `1px solid ${colors.theme.grey}`,\r\n          color: colors.theme.white\r\n        },\r\n        \"& .MuiOutlinedInput-input\": {\r\n          padding: 12\r\n        }\r\n      },\r\n      \r\n      input: {\r\n        color: colors.theme.white\r\n      },\r\n    })\r\n  \r\n    const classes = useStyles()\r\n\r\n    return (\r\n      <Grid container\r\n        style={styles.section}\r\n        alignContent='center'\r\n        alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Accordion style={{borderRadius: 5}} \r\n            defaultExpanded={true}>\r\n            <AccordionSummary\r\n              style={styles.summary}\r\n              expandIcon={<ExpandMoreIcon style={{ fill: colors.theme.white }} />} >\r\n              <Grid container\r\n                onClick={(event) => event.stopPropagation()}\r\n                onFocus={(event) => event.stopPropagation()} \r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n                >\r\n                <Grid item xs={1}\r\n                  style={{marginRight: -10}}>\r\n                  <FontAwesomeIcon\r\n                    styles={styles.faDragIcon}\r\n                    icon={faArrowsAlt} color=\"white\" size=\"lg\" />\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                  <TextField \r\n                    placeholder=\"Title\"\r\n                    className={ classes.root }\r\n                    InputProps={{\r\n                      className: classes.input\r\n                    }}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    defaultValue={title}\r\n                    onChange={(e) => { \r\n                      saveTitle(sectionId, e.target.value)\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Grid container style={styles.sectionHeaderItemsContainer} >\r\n                  { data && data.map((item, index) => \r\n                    <Grid item style={styles.sectionHeaderItem}>\r\n                      <SectionHeaderItem key={`itemheader--${index}`} image={item.imageURL} />\r\n                    </Grid>\r\n                  )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item xs={1}\r\n                  direction=\"row-reverse\">\r\n                  <Grid container\r\n                    direction=\"column\"\r\n                    style={styles.faTrashIcon}>\r\n                    <Grid item>\r\n                      <FontAwesomeIcon\r\n                          styles={styles.faTrashIcon}\r\n                          icon={faTrashAlt} color=\"white\" size=\"lg\" />\r\n                    </Grid>\r\n                    <Grid item\r\n                      style={styles.label}>\r\n                        Delete\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={styles.details}>\r\n              {props.children}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n  \r\nexport default CollapsibleItemSection;\r\n\r\n\r\nconst styles = {\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  sectionHeaderItemsContainer: {\r\n    justifyContent: 'flex-start'\r\n  },\r\n  sectionHeaderItem: {\r\n    paddingLeft: 10\r\n  },\r\n  summary: {\r\n    backgroundColor: colors.theme.sectionHeaderBackground,\r\n\r\n    height: 65\r\n  },\r\n  details: {\r\n    backgroundColor: colors.theme.sectionBackground,\r\n  },\r\n  label: {\r\n    color: colors.theme.white,\r\n    fontSize: \"0.8em\"\r\n  },\r\n  faDragIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  },\r\n  faTrashIcon: {\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    justify: \"center\"\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const Item = (props) => {\r\n    const {\r\n        item,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    return (\r\n        <Grid container\r\n            direction=\"column\"\r\n            justify=\"center\"\r\n            alignItems=\"center\"\r\n            onClick={() => setData(section, item)}\r\n            style={styles.item}>\r\n            <Grid item xs={2}\r\n                style={{\r\n                    backgroundImage: `url(${item.imageURL})`,\r\n                    backgroundSize: \"100%\",\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    minWidth: 75,\r\n                    minHeight: 75,\r\n                    height: \"100%\",\r\n                    width: \"100%\",\r\n                }}>\r\n                <Grid container>\r\n                    <Grid item xs style={styles.itemCost}>\r\n                        <Typography>\r\n                            {item.cost}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs\r\n                style={styles.itemName}>\r\n                {item.name}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Item\r\n\r\nconst styles = {\r\n    item: {\r\n        cursor: \"pointer\"\r\n    },\r\n    itemName: {\r\n        color: colors.theme.white,\r\n\r\n        marginTop: 10,\r\n        fontSize: 12\r\n    },\r\n    itemCost: {\r\n        background: `1px solid ${colors.theme.goldBackground}`,\r\n\r\n        margin: 0,\r\n        padding: 0,\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport Item from '../components/Builds/Item'\r\n\r\nimport {\r\n    Grid,\r\n    TextField\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faFilter\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst ItemList = (props) => {\r\n    const {\r\n        items,\r\n        section,\r\n        setData\r\n    } = props\r\n\r\n    const [filteredItems, setFilteredItems] = useState(items)\r\n\r\n    useEffect(() => {\r\n        setFilteredItems(props.items)\r\n    }, [props.items])\r\n\r\n    const toggleFilter = () => {\r\n        \r\n    }\r\n\r\n    const filterItems = (filter) => {\r\n        if(filter !== undefined && filter.length > 0) {\r\n            const filteredList = items.filter(i => i.name.toUpperCase().includes(filter.toUpperCase()))\r\n            setFilteredItems(filteredList)\r\n        } else {\r\n            setFilteredItems(items)\r\n        }\r\n    }\r\n\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n            border: `1px solid ${colors.theme.grey}`,\r\n            color: colors.theme.white\r\n          },\r\n          \"& .MuiOutlinedInput-input\": {\r\n            padding: 12\r\n          }\r\n        },\r\n        \r\n        input: {\r\n          color: colors.theme.white\r\n        },\r\n      })\r\n    \r\n      const classes = useStyles()\r\n\r\n    return (\r\n        <Grid container\r\n            alignContent='center'\r\n            alignItems='center'\r\n            style={styles.section}>\r\n            <Grid item xs={6}></Grid>\r\n            <Grid item xs={6}>\r\n                <Grid container\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    alignContent=\"center\">\r\n                    <Grid item xs={10}>\r\n                        <TextField \r\n                            className={ classes.root }\r\n                            InputProps={{ className: classes.input }}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            placeholder=\"Search Items\"\r\n                            onChange={(e) => filterItems(e.target.value)}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={1} />\r\n                    <Grid item xs={1}>\r\n                        <Grid container\r\n                            justify=\"center\"\r\n                            alignContent=\"center\"\r\n                            alignItems=\"center\"\r\n                            direction=\"column\">\r\n                            <Grid item>\r\n                                <FontAwesomeIcon icon={faFilter} color=\"white\" \r\n                                    onClick={toggleFilter} />\r\n                            </Grid>\r\n                            <Grid item\r\n                                style={styles.label}>\r\n                                Filter\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container \r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"flex-begin\"\r\n                style={styles.scrollableList}>\r\n                { filteredItems && filteredItems.map((item, index) => \r\n                    <Grid item\r\n                        style={styles.item}>\r\n                            <Item key={`item-${index}`} section={section} item={item} setData={setData} />\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    section: {\r\n        color: colors.theme.white\r\n    },\r\n    label: {\r\n        color: colors.theme.white,\r\n        fontSize: \"0.8em\"\r\n    },\r\n    scrollableList: {\r\n        maxHeight: 400,\r\n        overflow: \"auto\",\r\n\r\n        marginTop: 20,\r\n        marginRight: 15\r\n    },\r\n    itemList: {\r\n        margin: 15,\r\n        width: \"100%\",\r\n\r\n        backgroundColor: colors.theme.sectionBackground\r\n    },\r\n    item: {\r\n        backgroundColor: colors.theme.black,\r\n        padding: 1,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n        margin: 10,\r\n        width: 100,\r\n        textAlign: 'center'\r\n    }\r\n} \r\n\r\nexport default ItemList","import React, { useEffect, useState } from 'react';\r\n\r\nimport CollapsibleItemSection from '../../../components/CollapsibleItemSection'\r\nimport ItemList from '../../../components/ItemList'\r\nimport Item from '../../../components/Builds/Item'\r\n\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  getItemList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildItems = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  const [count, setCount] = useState(0)\r\n  const [sections, setSections] = useState(data)\r\n  const [itemList, setItemList] = useState([])\r\n\r\n  const addSection = () => {\r\n    let tempSections = sections\r\n    const id = tempSections.length + 1\r\n    \r\n    setSections(tempSections.concat({ id: id, order: id, build: []}))\r\n    setData(tempSections)\r\n  }\r\n\r\n  const addItem = (index, item) => {\r\n    let tempSections = sections\r\n    if(tempSections[index].build.length >= 7) { return }\r\n    if(tempSections[index].build.filter(i => i.name === item.name).length > 0) { return }\r\n\r\n    tempSections[index].build.push(item)\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const removeItem = (index, item) => {\r\n    let tempSections = sections\r\n    tempSections[index].build = tempSections[index].build.filter(i => i.name !== item.name)\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveTitle = (index, title) => {\r\n    let tempSections = sections\r\n    tempSections[index].title = title\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  const saveNotes = (index, notes) => {\r\n    let tempSections = sections\r\n    tempSections[index].notes = notes\r\n\r\n    setData(tempSections)\r\n    setCount(count+1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const retrieveItemList = async () => {\r\n      setItemList(await getItemList())\r\n    }\r\n\r\n    retrieveItemList()\r\n  }, [])\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-input\": {\r\n        padding: 12\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n      { data.map((section, sIndex) => \r\n        <CollapsibleItemSection \r\n          key={`sections-items-${section.id}`}\r\n          style={styles.section}\r\n          sectionId={sIndex}\r\n          title={section.title}\r\n          data={section.build}\r\n          saveTitle={saveTitle}>\r\n            <Grid container>\r\n              { section.build.map((item, iIndex) => \r\n                <Grid item xs={1} style={styles.selectedItem}>\r\n                  <Item\r\n                     section={sIndex} \r\n                     item={item} \r\n                     setData={removeItem} />\r\n                </Grid>\r\n              )}\r\n              <Grid item xs />\r\n              <Grid item xs={12}>\r\n              <ItemList key={`item-list-${sIndex}`} items={itemList} section={sIndex} build={section.build} setData={addItem} />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField multiline rows={6} \r\n                  variant=\"outlined\"\r\n                  style={styles.notes} \r\n                  className={ classes.root }\r\n                  InputProps={{\r\n                    className: classes.input\r\n                  }}\r\n                  placeholder=\"Notes...\"\r\n                  defaultValue={section.notes}\r\n                  onChange={(e) => { \r\n                    saveNotes(sIndex, e.target.value)\r\n                  }} />\r\n              </Grid>\r\n            </Grid>\r\n        </CollapsibleItemSection>\r\n      )}\r\n      <Grid item xs={12}>\r\n        <Button style={styles.buttonAddSection}\r\n          onClick={() => addSection()}>ADD A SECTION</Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildItems;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  section: {\r\n    marginBottom: 10\r\n  },\r\n  buttonAddSection: {\r\n    fontSize: \"0.7em\",\r\n    marginTop: 10\r\n  },\r\n\r\n  selectedItem: {\r\n    marginRight: 20\r\n  },\r\n  notes: {\r\n    width: \"100%\",\r\n\r\n    marginTop: 15\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const DynamicAbility = (props) => {\r\n    const {\r\n        ability,\r\n        abilityIndex,\r\n        selectLevel\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={1}>\r\n                <img style={styles.image}\r\n                    src={ability.imageURL} />\r\n            </Grid>\r\n            <Grid item xs>\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                        <Typography style={styles.name}>\r\n                            {ability.type} - {ability.name}\r\n                        </Typography>\r\n                    </Grid>\r\n                    { ability && [...Array(maxAbilityLevel)].map((_, index) =>\r\n                        <Button style={ability.levels.includes(index+1) ? styles.levelSelected : styles.levelDefault}\r\n                            disabled={ability.levels.includes(index+1)}\r\n                            onClick={() => selectLevel(abilityIndex, index+1)}\r\n                            key={`ability-${ability.name}-${index}-${ability.levels.includes(index+1)}`}>\r\n                            {index+1}\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default DynamicAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    levelDefault: {\r\n        backgroundColor: colors.theme.black,\r\n        color: colors.theme.white,\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    },\r\n    levelSelected: {\r\n        backgroundColor: colors.theme.goldPrimary,\r\n        color: colors.theme.black,\r\n        \r\n        minWidth: 0,\r\n        margin: 5,\r\n        width: 35\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const SelectedStat = (props) => {\r\n    const {\r\n        stat,\r\n        removeStat\r\n    } = props\r\n\r\n    return (\r\n        <Grid container style={styles.container}>\r\n            <Grid item xs={1} style={{\r\n                    ...styles.statCost, \r\n                    backgroundColor: stat.color,\r\n                    color: stat.cost === 4 ? colors.theme.white : colors.theme.black\r\n                }}>\r\n                <Typography>\r\n                    {stat.points}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n                <Typography style={styles.statName}>\r\n                    {stat.name} ({stat.cost})\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={1}\r\n                style={styles.deleteIcon}>\r\n                <Button onClick={removeStat}>\r\n                    <FontAwesomeIcon\r\n                        icon={faTrashAlt} color=\"white\" size=\"sm\" />\r\n                </Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n} \r\n\r\nexport default SelectedStat\r\n\r\nconst styles = {\r\n    container: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        padding: 10,\r\n        borderRadius: '7px 0',\r\n\r\n        alignItems: 'center'\r\n    },\r\n\r\n    statName: {\r\n        color: colors.theme.goldPrimary,\r\n        paddingLeft: 10,\r\n        alignItems: 'center',\r\n        alignContent: 'center'\r\n    },\r\n    statCost: {\r\n        textAlign: 'center',\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        borderRadius: 7,\r\n        width: 15,\r\n        margin: 2\r\n    },\r\n\r\n    deleteIcon: {\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end'\r\n    }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport colors from '../../styles/theme'\r\n\r\nexport const StaticAbility = (props) => {\r\n    const {\r\n        ability\r\n    } = props\r\n\r\n    // TODO: Implement Hover details?\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <Grid container>\r\n                    <Grid item xs={2}>\r\n                        <img style={styles.image}\r\n                            src={ability.imageURL} />\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.name}>\r\n                                    {ability.name}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Typography style={styles.slot}>\r\n                                    {ability.slot}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default StaticAbility\r\n\r\nconst styles = {\r\n    image: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        height: 75,\r\n        width: 75\r\n    },\r\n    name: {\r\n        fontSize: 15,\r\n        color: colors.theme.white\r\n    },\r\n    slot: {\r\n        fontSize: 10,\r\n        color: colors.theme.white\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n    Button,\r\n    Grid, \r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nexport const StatPicker = (props) => {\r\n    const {\r\n        name,\r\n        isPrimary,\r\n        remainingPoints,\r\n        addStat\r\n    } = props\r\n\r\n    const [splitCosts, setSplitCosts] = useState([])\r\n    const [splitColors, setSplitColors] = useState([])\r\n\r\n    useEffect(() => {\r\n        if(isPrimary) {\r\n            setSplitCosts(statCosts.splice(0, 3))\r\n            setSplitColors(statColors.splice(0, 3))\r\n        } else {\r\n            setSplitCosts(statCosts.splice(1, 3))\r\n            setSplitColors(statColors.splice(1, 3))\r\n        }\r\n    }, [])\r\n\r\n    const statPoints = [1, 4, 10]\r\n    const statCosts = [1, 2, 3, 4]\r\n    const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n\r\n    return (\r\n        <>\r\n        { name &&\r\n        <Grid container style={styles.pickerRow}>\r\n            <Grid item xs={6}>\r\n                <Typography style={styles.label}>\r\n                    {name}\r\n                </Typography>\r\n            </Grid>\r\n            { statPoints.map((points, index) => \r\n            <Grid item xs={2} style={{border: `1px solid ${splitColors[index]}`}}>\r\n                <Button\r\n                    disabled={remainingPoints - splitCosts[index] < 0}\r\n                    onClick={() => addStat({\r\n                        name: name, \r\n                        points: points, \r\n                        cost: splitCosts[index],\r\n                        color: splitColors[index],\r\n                        isPrimary: isPrimary\r\n                    })}>\r\n                <Typography\r\n                    style={{color: splitColors[index]}}>\r\n                + {points}\r\n                </Typography>\r\n                </Button>\r\n            </Grid>\r\n            )}\r\n        </Grid>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StatPicker\r\n\r\nconst styles = {\r\n    label: {\r\n      color: colors.theme.white\r\n    },\r\n    pickerRow: {\r\n        border: `1px solid ${colors.theme.goldPrimary}`,\r\n        alignItems: 'center',\r\n        \r\n        paddingLeft: 15,\r\n        marginTop: 5,\r\n        marginBottom: 5\r\n    }\r\n  }","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport {\r\n  SelectedStat,\r\n  StatPicker\r\n} from '../../../components/Builds'\r\n\r\nimport {\r\n  getCombatTacticsList\r\n} from '../../../state/actions/ethereal.actions'\r\n\r\nconst FragmentBuildLoadout = (props) => {\r\n  const {\r\n\r\n  } = props\r\n\r\n  const [remainingPoints, setRemainingPoints] = useState(8)\r\n  \r\n  const [combatTactics, setCombatTactics] = useState([])\r\n  const [secondaryStats, setSecondaryStats] = useState([])\r\n\r\n  const [selectedStats, setSelectedStats] = useState([])\r\n  const [selectedSecondaryStat, setSelectedSecondaryStat] = useState({})\r\n\r\n  const [selectedPrimaryTactic, setSelectedPrimaryTactic] = useState(-1)\r\n  const [selectedSecondaryTactic, setSelectedSecondaryTactic] = useState(-1)\r\n\r\n  const statCosts = [1, 2, 3, 4]\r\n  const statColors = [colors.theme.statsFirst, colors.theme.statsSecond, colors.theme.statsThird, colors.theme.statsFourth]\r\n  \r\n  useEffect(() => {\r\n    const retrieveCombatTactics = async (id) => {\r\n      //setCombatTactics(await getCombatTacticsList())\r\n      setCombatTactics([{\r\n          name: 'Assault',\r\n          stats: ['Attack Speed', 'Life Steal', 'Penetration']\r\n        },{\r\n          name: 'Demolition',\r\n          stats: ['']\r\n        },{\r\n          name: 'Protect',\r\n          stats: [''] //['Health', 'Defense', 'Persistence']\r\n        },{\r\n          name: 'Reinforcement',\r\n          stats: ['']\r\n        }\r\n      ])\r\n    }\r\n\r\n    retrieveCombatTactics()\r\n  }, [])\r\n\r\n  const handleSelectedTactic = (event) => {\r\n    setSelectedPrimaryTactic(event.target.value)\r\n    setRemainingPoints(8)\r\n    setSelectedStats([])\r\n\r\n    let statList = []\r\n    combatTactics.map((tactic, index) => {\r\n      if(index !== event.target.value) {\r\n        tactic.stats.map((stat) => {\r\n          statList.push({\r\n            tactic: tactic.name,\r\n            stat: stat\r\n          })\r\n        })\r\n      }\r\n    })\r\n\r\n    setSecondaryStats(statList)\r\n    setSelectedSecondaryTactic(0)\r\n    setSelectedSecondaryStat(statList[0])\r\n  }\r\n\r\n  const handleSelectedSecondary = (event) => {\r\n    setSelectedSecondaryTactic(event.target.value)\r\n    setSelectedSecondaryStat(secondaryStats[event.target.value])\r\n\r\n    const tempStats = selectedStats.filter(stat => stat.isPrimary)\r\n    let tempCost = 8\r\n    tempStats.map((stat) => {\r\n      tempCost = tempCost - stat.cost\r\n    })\r\n\r\n    setSelectedStats(tempStats)\r\n    setRemainingPoints(tempCost)\r\n  }\r\n\r\n  const addStat = (stat) => {\r\n    let tempSelectedStats = selectedStats\r\n    let tempRemainingPoints = remainingPoints\r\n\r\n    tempSelectedStats.push({\r\n      ...stat\r\n    })\r\n\r\n    setSelectedStats(tempSelectedStats)\r\n    setRemainingPoints(tempRemainingPoints - stat.cost)\r\n  }\r\n\r\n  const removeStatAt = (index) => {\r\n    let tempSelectedStats = selectedStats\r\n    let tempRemainingPoints = remainingPoints\r\n\r\n    const stat = tempSelectedStats[index]\r\n    tempSelectedStats.splice(index, 1)\r\n\r\n    setSelectedStats(tempSelectedStats)\r\n    setRemainingPoints(tempRemainingPoints + stat.cost)\r\n  }\r\n\r\n  const useStyles = makeStyles({\r\n    selectDropdown: {\r\n      border: `1px solid ${colors.theme.white}`,\r\n      color: colors.theme.white,\r\n      width: '100%',\r\n\r\n      \".MuiSvgIcon-root .MuiSelect-icon\": {\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n\r\n    menuItem: {\r\n     marginLeft: 10 \r\n    }\r\n  })\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12} style={styles.tacticsContainer}>\r\n          <Grid container style={{alignItems: 'center', alignContent: 'center' }}>\r\n            <Grid item xs={7} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>1. Selected Combat Stats</Typography>\r\n            </Grid>\r\n            <Typography style={styles.label}>Stat Costs:</Typography>\r\n            { statCosts.map((cost, index) => \r\n                  <Typography style={{\r\n                      ...styles.statCosts,\r\n                      backgroundColor: statColors[index], \r\n                      color: index < 3 ? colors.theme.black : colors.theme.white\r\n                    }}>{cost}</Typography>\r\n            )}\r\n            <Grid item xs={2}>\r\n              <Typography style={{...styles.label, textAlign: \"right\"}}>Remaining Points:</Typography>\r\n            </Grid>\r\n            <Grid item xs>\r\n              <Typography style={styles.remainingPoints}>{remainingPoints}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Grid container style={styles.statContainer}>\r\n              { selectedStats.map((stat, index) => \r\n              <Grid item xs={3} style={styles.selectedStat}>\r\n                <SelectedStat stat={stat} removeStat={() => removeStatAt(index)} />\r\n              </Grid>\r\n              )}\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Primary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    value={selectedPrimaryTactic}\r\n                    onChange={handleSelectedTactic}\r\n                    className={ classes.selectDropdown } \r\n                    inputProps={{ className:classes.menuItem }}>\r\n                      { !(selectedPrimaryTactic >= 0) &&\r\n                      <MenuItem \r\n                        className={classes.menuItem}\r\n                        value={-1}>Pick Primary Tactic</MenuItem>\r\n                      }\r\n                    { combatTactics && combatTactics.map((tactic, index) =>\r\n                      <MenuItem className={classes.menuItem}\r\n                        value={index}>{tactic.name}</MenuItem>\r\n                    )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    { combatTactics[selectedPrimaryTactic] && combatTactics[selectedPrimaryTactic].stats.map((stat, index) => \r\n                      <Grid item xs={12}>\r\n                        <StatPicker isPrimary={true} \r\n                          remainingPoints={remainingPoints}\r\n                          name={stat} \r\n                          addStat={addStat} />\r\n                      </Grid>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={1}></Grid>\r\n            <Grid item xs>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Typography style={styles.label}>Secondary Combat Tactic</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Select\r\n                    disabled={selectedPrimaryTactic === -1}\r\n                    width={1}\r\n                    value={selectedSecondaryTactic}\r\n                    onChange={handleSelectedSecondary}\r\n                    className={ classes.selectDropdown }\r\n                    inputProps={{ className:classes.menuItem }}\r\n                    >\r\n                      { selectedPrimaryTactic === -1 &&\r\n                      <MenuItem />\r\n                      }\r\n                      { secondaryStats && secondaryStats.map((stat, index) =>\r\n                      <MenuItem value={index}>{`${stat.tactic} ${stat.stat}`}</MenuItem>\r\n                      )}\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      { selectedSecondaryTactic >= 0 &&\r\n                      <StatPicker isPrimary={false} \r\n                        name={selectedSecondaryStat.stat} \r\n                        remainingPoints={remainingPoints}\r\n                        addStat={addStat} />\r\n                      }\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} style={styles.familiarContainer}>\r\n          <Grid container>\r\n            <Grid item xs={12} style={{alignItems: 'center', alignContent: 'center'}}>\r\n              <Typography style={styles.label}>2. Select Familiar</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container>\r\n                <Grid item xs={1} style={{ \r\n                    background: \"no-repeat center/150% url('https://undyinggames.com/assets/Images/News/FamiliarCard.png')\", \r\n                    border: `1px solid ${colors.theme.goldPrimary}`,\r\n                    marginTop: 10,\r\n                    height: 150, \r\n                    width: 250 }}>\r\n                  \r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildLoadout;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  label: {\r\n    font: 10,\r\n    color: colors.theme.white,\r\n    marginRight: 2\r\n  },\r\n\r\n  tacticOption: {\r\n    paddingLeft: 10,\r\n    color: colors.theme.white\r\n  },\r\n\r\n  familiarContainer: {\r\n    marginTop: 25\r\n  },\r\n\r\n  remainingPoints: {\r\n    background: colors.theme.goldPrimary,\r\n    color: colors.theme.black,\r\n    \r\n    width: 25,\r\n    marginLeft: 10,\r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\",\r\n    \r\n    border: 1,\r\n    borderRadius: 3,\r\n    borderColor: colors.white\r\n  }, \r\n  statCosts: {\r\n    border: `1px solid ${colors.theme.goldBackground}`,\r\n    borderRadius: 5,\r\n    width: 20, \r\n    margin: 5, \r\n    marginRight: 2, \r\n    \r\n    textAlign: \"center\",\r\n    alignContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  statContainer: {\r\n    minHeight: 175,\r\n    marginTop: 15,\r\n    marginBottom: 25\r\n  },\r\n  selectedStat: {\r\n    height: 75,\r\n    marginTop: 5,\r\n    marginBottom: 5,\r\n    paddingLeft: 15,\r\n    paddingRight: 15\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nimport {\r\n  DynamicAbility,\r\n  StaticAbility\r\n} from '../../../components/Builds'\r\n\r\nconst FragmentBuildAbilities = (props) => {\r\n  const {\r\n    data,\r\n    setData\r\n  } = props\r\n\r\n  // Hacking a state change :(\r\n  const [count, setCount] = useState(0)\r\n\r\n  const selectLevel = (abilityIndex, level) => {\r\n    let tempData = data\r\n\r\n    tempData.map((_, index) => {\r\n      tempData[index].levels = tempData[index].levels.filter(i => i !== level)\r\n    })\r\n\r\n    tempData[abilityIndex].levels.push(level)\r\n    setData(tempData)\r\n    setCount(count+1)\r\n  }\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Grid item xs={6}>\r\n              { data && data[0] && \r\n              <StaticAbility ability={data[0]} />\r\n              }\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              { data && data[1] &&\r\n              <StaticAbility ability={data[1]} />\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            { data && data.slice(2, 6).map((ability, index) =>\r\n             <Grid item xs={12} style={styles.dynamicAbilities}\r\n                key={`ability-${index}`}>\r\n                <DynamicAbility ability={ability} abilityIndex={index+2} selectLevel={selectLevel} />\r\n            </Grid>\r\n            )}\r\n          </Grid>\r\n        </Grid> \r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildAbilities;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  dynamicAbilities: {\r\n    marginTop: 35,\r\n    marginBottom: 10\r\n  }\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildPairings = () => {\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <h3 style={styles.header}>Pairings Here...</h3>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildPairings;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  }\r\n}","import React from 'react'\r\n\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Grid,\r\n    Typography\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../styles/theme'\r\n\r\nconst BuildView = (props) => {\r\n    const {\r\n        data\r\n    } = props\r\n\r\n    const maxAbilityLevel = 20\r\n\r\n    // TODO: add build validation \r\n    let validBuild = true\r\n\r\n    console.log(data)\r\n\r\n    return (\r\n        validBuild ?\r\n            <Grid container style={styles.rootContainer}>\r\n                <h2>Myth</h2>\r\n                <Grid item xs={12}>\r\n                    <Typography>\r\n                        Build Name: {data.myth.title}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography>\r\n                        Myth Name: {data.myth.name}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Avatar variant=\"square\"\r\n                        src={`${process.env.PUBLIC_URL}/${data.myth.role.image}`} />\r\n                    <Typography>\r\n                        Role Name: {data.myth.role.name}\r\n                    </Typography>\r\n                </Grid>\r\n                \r\n                <h2>Items</h2>\r\n                <Grid item xs={12}>\r\n                    { data.items.map((section, index) => \r\n                        <Grid container>\r\n                            { section.build.map((item, itemIndex) => \r\n                                <Grid item xs={2}>\r\n                                    {item.name}\r\n                                </Grid>\r\n                            )}\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n\r\n                <h2>Loadout & Familiar</h2>\r\n                <Grid item xs={12}>\r\n                    \r\n                </Grid>\r\n\r\n                <h2>Abilities</h2>\r\n                <Grid item xs={12}>\r\n                    <Grid container>\r\n                        <Grid item xs={6}>\r\n                            { data.abilities[0].name }\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            { data.abilities[1].name }\r\n                        </Grid>\r\n                    </Grid>\r\n                    { data.abilities.slice(2, 6).map((ability, abilityIndex) => \r\n                        <Grid container>\r\n                            <Grid item xs={1}>\r\n                                {ability.name}    \r\n                            </Grid>\r\n                            <Grid item xs={11}>\r\n                            { [...Array(maxAbilityLevel)].map((_, levelIndex) => \r\n                                <Button style={ability.levels.includes(levelIndex+1) ? styles.abilities.levelSelected : styles.abilities.levelDefault}\r\n                                    disabled={true}\r\n                                    key={`ability-${ability.name}-${levelIndex}-${ability.levels.includes(levelIndex+1)}`}>\r\n                                    {levelIndex+1}\r\n                                </Button>\r\n                            )}\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        : \r\n        <Grid container>\r\n        \r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default BuildView\r\n\r\nconst styles = {\r\n    rootContainer: {\r\n        color: colors.theme.white\r\n    },\r\n    myth: {\r\n        title: {\r\n\r\n        }\r\n    },\r\n    items: {\r\n\r\n    }, \r\n    loadout: {\r\n\r\n    },\r\n    abilities: {\r\n        levelDefault: {\r\n            backgroundColor: colors.theme.black,\r\n            color: colors.theme.white,\r\n            border: `1px solid ${colors.theme.goldPrimary}`,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        },\r\n        levelSelected: {\r\n            backgroundColor: colors.theme.goldPrimary,\r\n            color: colors.theme.black,\r\n            \r\n            minWidth: 0,\r\n            margin: 5,\r\n            width: 35\r\n        }\r\n    },\r\n    pairings: {\r\n\r\n    }\r\n}","import React from 'react';\r\n\r\nimport BuildView from '../../../components/BuildView'\r\n\r\nimport {\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { colors } from '../../../styles/theme'\r\n\r\nconst FragmentBuildReview = (props) => {\r\n  const {\r\n    data\r\n  } = props\r\n\r\n  console.log(data)\r\n\r\n  return (\r\n    <Grid container \r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs={12}>\r\n          <Button>Save Build</Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <BuildView data={data} />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button>Save Build</Button>\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default FragmentBuildReview;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.gray\r\n  },\r\n  todo: {\r\n      color: colors.theme.white\r\n  }\r\n}","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport FragmentBuildMyths from './fragments/Myths'\r\nimport FragmentBuildItems from './fragments/Items'\r\nimport FragmentBuildLoadout from './fragments/Loadout'\r\nimport FragmentBuildAbilities from './fragments/Abilities'\r\nimport FragmentBuildPairings from './fragments/Pairings'\r\nimport FragmentBuildReview from './fragments/Review'\r\n\r\nimport { colors } from '../../styles/theme'\r\n\r\nconst CreateBuild = () => {\r\n  document.title = \"Etherean.gg - Create Build\"\r\n  \r\n  const steps = {\r\n    // reorder as needed\r\n    myth: 1,\r\n    items: 2,\r\n    loadout: 3,\r\n    abilities: 4,\r\n    pairings: 5,\r\n    review: 6\r\n  }\r\n\r\n  const [step, setStep] = useState(steps.myth)\r\n  \r\n  const [myth, setMyth] = useState({})\r\n  const [items, setItems] = useState([{ id: 1, order: 1, build: [], notes: \"\"}])\r\n  const [loadout, setLoadout] = useState({})\r\n  const [abilities, setAbilities] = useState([])\r\n  const [pairings, setPairings] = useState({})\r\n  const [buildData, setBuild] = useState({})\r\n\r\n  const moveStep = (direction) => { \r\n    setStep(step + direction) \r\n  }\r\n\r\n  const getStep = () => {\r\n    switch(step) {\r\n      // pass up state\r\n      case steps.myth: return <FragmentBuildMyths data={myth} setData={setMyth} />\r\n      case steps.items: return <FragmentBuildItems data={items} setData={setItems} />\r\n      case steps.loadout: return <FragmentBuildLoadout data={loadout} setData={setLoadout} />\r\n      case steps.abilities: return <FragmentBuildAbilities data={myth.myth?.abilities} setData={setAbilities} />\r\n      case steps.pairings: return <FragmentBuildPairings data={pairings} setData={setPairings} />\r\n      case steps.review: return <FragmentBuildReview data={{myth, items, loadout, abilities, pairings}} />\r\n    }\r\n  }\r\n\r\n  // TODO: Can this be cleaned up with an array?\r\n  return (\r\n    <Grid container \r\n      style={styles.createContent}\r\n      alignContent='center'\r\n      alignItems='center'>\r\n        <Grid item xs style={styles.buildContent}>\r\n          <h3 style={styles.header}>Create a build</h3>\r\n          <div>\r\n            <Grid container style={styles.steps}>\r\n              <Grid item xs onClick={() => setStep(steps.myth)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={ \r\n                    step === steps.myth ? styles.stepNumberCurrent :\r\n                    styles.stepNumberBehind\r\n                  }>\r\n                    1\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Start your build\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.items)}>\r\n                <Grid container>\r\n                <Grid item xs={12} style={\r\n                    step === steps.items ? styles.stepNumberCurrent\r\n                      : step > steps.items ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    2\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Select Items\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.loadout)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.loadout ? styles.stepNumberCurrent\r\n                      : step > steps.loadout ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    3\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Select Loadout & Familiar\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.abilities)}>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.abilities ? styles.stepNumberCurrent\r\n                      : step > steps.abilities ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    4\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Ability Level Up\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs onClick={() => setStep(steps.pairings)}>\r\n                <Grid container>\r\n                  <Grid item xs={12}style={\r\n                    step === steps.pairings ? styles.stepNumberCurrent\r\n                      : step > steps.pairings ? styles.stepNumberBehind\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    5\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    Threats & Synergies\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <Grid container>\r\n                  <Grid item xs={12} style={\r\n                    step === steps.review ? styles.stepNumberCurrent\r\n                      : styles.stepNumberAhead\r\n                  }>\r\n                    6\r\n                  </Grid>\r\n                  <Grid item \r\n                    xs={12} onClick={() => setStep(steps.review)}>\r\n                    Preview & Publish\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          { getStep() }\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item xs />\r\n          { step !== steps.myth &&\r\n          <Grid item xs={2} onClick={() => moveStep(-1)}>\r\n            <Button style={styles.buttonPreviousStep}>PREVIOUS STEP</Button>\r\n          </Grid>\r\n          }\r\n          { step !== steps.review && \r\n          <Grid item xs={2} onClick={() => moveStep(1)}>\r\n            <Button style={styles.buttonNextStep}>NEXT STEP</Button>\r\n          </Grid>\r\n          }\r\n        </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateBuild;\r\n\r\nconst styles = {\r\n  header: {\r\n    color: colors.theme.white\r\n  },\r\n  steps: {\r\n    marginTop: 30,\r\n    marginBottom: 35,\r\n\r\n    textAlign: \"center\",\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.white\r\n  },\r\n  stepNumberBehind: {\r\n    background: `no-repeat center/33% url('${process.env.PUBLIC_URL}/images/step-border.png')`,\r\n    color: colors.theme.goldPrimary,\r\n\r\n    paddingTop: 20,\r\n    marginBottom: 10,\r\n\r\n    height: 55,\r\n    width: 55,\r\n    \r\n    opacity: 0.7\r\n  },\r\n  stepNumberCurrent: {\r\n    background: `no-repeat center/33% url('${process.env.PUBLIC_URL}/images/step-border.png')`,\r\n\r\n    paddingTop: 20,\r\n    marginBottom: 10,\r\n\r\n    height: 55,\r\n    width: 55\r\n  },\r\n  stepNumberAhead: {\r\n    background: `no-repeat center/33% url('${process.env.PUBLIC_URL}/images/step-border.png')`,\r\n\r\n    paddingTop: 20,\r\n    marginBottom: 10,\r\n\r\n    height: 55,\r\n    width: 55,\r\n\r\n    opacity: 0.20\r\n  },\r\n\r\n  buttonNextStep: {\r\n    fontSize: \"0.7em\",\r\n    backgroundColor: colors.theme.goldPrimary,\r\n\r\n    marginTop: 20\r\n  },\r\n  buttonPreviousStep: {\r\n    fontSize: \"0.7em\",\r\n    color: colors.theme.goldPrimary,\r\n    border: `1px solid ${colors.theme.goldPrimary}`,\r\n\r\n    marginTop: 20\r\n  }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  Grid\r\n} from '@material-ui/core'\r\n\r\nimport { getBuild } from '../../state/actions/ethereal.actions'\r\n\r\nconst ViewBuild = () => {\r\n  document.title = \"Etherean.gg - View Build\"\r\n\r\n  const { buildId } = useParams()\r\n  const [build, setBuild] = useState({})\r\n\r\n  useEffect(() => {      \r\n    // browser throws an error if you don't define it and then call it ¯\\_(ツ)_/¯\r\n    const retrieveBuild = async (id) => {\r\n      setBuild(await getBuild(id))\r\n    }\r\n\r\n    retrieveBuild(buildId)\r\n  }, [])\r\n\r\n  return (\r\n    build?.id ? \r\n    <Grid container>\r\n      <div style={{color: \"white\"}}>\r\n        ID: {build.id}<br />\r\n        Props: {build.prop}\r\n      </div>\r\n    </Grid> :\r\n    <Grid>\r\n      No Build Found\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ViewBuild;","import CreateBuild from '../pages/builds/Create'\r\nimport ViewBuild from '../pages/builds/View'\r\nimport NotFound from '../pages/NotFound'\r\n\r\nconst routes = [\r\n  { path: \"\", key: \"ROOT\", exact: true, component: CreateBuild },\r\n\r\n  // Builds\r\n  { path: \"/builds/create\", key: \"CREATE_BUILD\", exact: true, component: CreateBuild },\r\n  { path: \"/builds/view\", key: \"VIEW_BUILD_LIST\", exact: true, component: ViewBuild },\r\n  { path: \"/builds/view/:buildId\", key: \"VIEW_BUILD_ID\", component: ViewBuild },\r\n\r\n  // Catch All Else\r\n  { path: \"/:NotFound\", component: NotFound }\r\n];\r\n\r\nexport default routes;","import  React from 'react'\r\n\r\nconst NotFound = () => {\r\n    document.title = \"Etherean.gg - 404 Not Found\"\r\n\r\n    return (\r\n        <div>Page Not Found</div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from 'react'\r\nimport { Route} from 'react-router-dom'\r\n\r\nexport const RouteAndSubRoutes = route => {\r\n    return (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n                <route.component { ...props}\r\n                routes={route.routes} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default RouteAndSubRoutes;","import { createReducer} from '@reduxjs/toolkit'\r\n\r\nimport {\r\n    GET_FAMILIARS,\r\n    GET_ITEMS,\r\n    GET_MYTHS\r\n} from './../actions/ethereal.actions'\r\n\r\nconst initialState = {\r\n    isFetching: false\r\n}\r\n\r\n// Not used, redux may be over complicating this?\r\nconst etherealReducer = createReducer(initialState, {\r\n    [GET_FAMILIARS]: (state, action) => {\r\n        state.familiars = action.payload\r\n    },\r\n\r\n    [GET_ITEMS]: (state, action) => {\r\n        state.items = action.payload\r\n    },\r\n\r\n    [GET_MYTHS]: (state, action) => {\r\n        state.myth = action.payload\r\n    }\r\n});\r\n\r\nexport default etherealReducer;","import { combineReducers } from 'redux'\r\nimport * as etherealReducer from './ethereal.reducers'\r\n\r\nconst allReducers = combineReducers({...etherealReducer});\r\n\r\nexport default allReducers;","import { createStore, applyMiddleware } from 'redux'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger'\r\nimport thunk from 'redux-thunk'\r\nimport { persistReducer, persistStore } from 'redux-persist'\r\n\r\nimport allReducers from './reducers/all.reducers'\r\n\r\nconst persistConfig = {\r\n  key: 'authentication',\r\n  storage: storage,\r\n  whitelist: []\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, allReducers);\r\nconst middleware = applyMiddleware(thunk, logger);\r\nconst store = createStore(persistedReducer, {}, middleware);\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n","import React from 'react';\r\nimport routes from './routes'\r\nimport { Switch } from 'react-router-dom'\r\nimport RouteAndSubRoutes from './routes/RouteAndSubRoutes'\r\n\r\nimport { BrowserRouter } from 'react-router-dom'  \r\nimport { Provider } from 'react-redux'\r\n\r\nimport store, { persistor } from './state'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { colors } from './styles/theme'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { \r\n  faArrowsAlt,\r\n  faFilter,\r\n  faTrashAlt \r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(\r\n  faArrowsAlt,\r\n  faTrashAlt,\r\n  faFilter\r\n)\r\n\r\nconst AppBase = () => {\r\n  const useStyles = makeStyles({\r\n    '@global': {\r\n        '*::-webkit-scrollbar': {\r\n          width: '0.4em'\r\n        },\r\n        '*::-webkit-scrollbar-track': {\r\n          '-webkit-box-shadow': `inset 0 0 6px ${colors.theme.scrollLane}`\r\n        },\r\n        '*::-webkit-scrollbar-thumb': {\r\n          backgroundColor: colors.theme.scrollBar,\r\n          outline: `1px solid ${colors.theme.scrollBar}`\r\n        }\r\n    },\r\n    root: {\r\n      \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"&:hover .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      },\r\n      \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\r\n        border: `1px solid ${colors.theme.grey}`,\r\n        color: colors.theme.white\r\n      }\r\n    },\r\n    \r\n    input: {\r\n      color: colors.theme.white\r\n    },\r\n  })\r\n\r\n  useStyles()\r\n\r\n  return (\r\n    <div name=\"wrapper\" style={styles.wrapper}>\r\n      <div name=\"content\" style={styles.content}>\r\n        <React.StrictMode>\r\n          <Provider store={store}>\r\n            <PersistGate\r\n              loading=\"Loading...\"\r\n              persistor={persistor}\r\n            >\r\n              <BrowserRouter>\r\n                <Switch> {\r\n                  routes.map(\r\n                    (route, index) => \r\n                      <RouteAndSubRoutes key={index} {...route} />\r\n                    )\r\n                }\r\n                </Switch>\r\n              </BrowserRouter>\r\n            </PersistGate>\r\n          </Provider>\r\n        </React.StrictMode>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    height: \"100%\",\r\n\r\n    backgroundColor: colors.theme.siteBackground,\r\n  },\r\n  content: {\r\n    margin: \"auto\",\r\n    padding: \"4vh\",\r\n\r\n    height: \"100%\",\r\n    minHeight: \"100vh\",\r\n    maxWidth: \"1000px\",\r\n\r\n    backgroundColor: colors.theme.contentBackground,\r\n    color: colors.theme.white,\r\n  }\r\n}\r\n\r\nexport default AppBase;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}